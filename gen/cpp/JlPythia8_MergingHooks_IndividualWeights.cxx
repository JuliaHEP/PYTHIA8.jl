// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::MergingHooks::IndividualWeights> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::MergingHooks::IndividualWeights> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::MergingHooks::IndividualWeights
// signature to use in the veto file: Pythia8::MergingHooks::IndividualWeights
struct JlPythia8_MergingHooks_IndividualWeights: public Wrapper {

  JlPythia8_MergingHooks_IndividualWeights(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::MergingHooks::IndividualWeights (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:602:10
    jlcxx::TypeWrapper<Pythia8::MergingHooks::IndividualWeights>  t = jlModule.add_type<Pythia8::MergingHooks::IndividualWeights>("Pythia8!MergingHooks!IndividualWeights");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::MergingHooks::IndividualWeights>>(new jlcxx::TypeWrapper<Pythia8::MergingHooks::IndividualWeights>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wtSave methods  to provide read access to the field wtSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:603:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::wtSave
    t.method("wtSave", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.wtSave; });
    t.method("wtSave", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.wtSave; });
    t.method("wtSave", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->wtSave; });
    t.method("wtSave", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->wtSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:603:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::wtSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding wtSave! methods to provide write access to the field wtSave (" __HERE__ ")");
    t.method("wtSave!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.wtSave = val; });

    DEBUG_MSG("Adding wtSave! methods to provide write access to the field wtSave (" __HERE__ ")");
    t.method("wtSave!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->wtSave = val; });

    DEBUG_MSG("Adding pdfWeightSave methods  to provide read access to the field pdfWeightSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:604:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::pdfWeightSave
    t.method("pdfWeightSave", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.pdfWeightSave; });
    t.method("pdfWeightSave", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.pdfWeightSave; });
    t.method("pdfWeightSave", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->pdfWeightSave; });
    t.method("pdfWeightSave", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->pdfWeightSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:604:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::pdfWeightSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pdfWeightSave! methods to provide write access to the field pdfWeightSave (" __HERE__ ")");
    t.method("pdfWeightSave!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.pdfWeightSave = val; });

    DEBUG_MSG("Adding pdfWeightSave! methods to provide write access to the field pdfWeightSave (" __HERE__ ")");
    t.method("pdfWeightSave!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->pdfWeightSave = val; });

    DEBUG_MSG("Adding mpiWeightSave methods  to provide read access to the field mpiWeightSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:605:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::mpiWeightSave
    t.method("mpiWeightSave", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.mpiWeightSave; });
    t.method("mpiWeightSave", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.mpiWeightSave; });
    t.method("mpiWeightSave", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->mpiWeightSave; });
    t.method("mpiWeightSave", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->mpiWeightSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:605:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::mpiWeightSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding mpiWeightSave! methods to provide write access to the field mpiWeightSave (" __HERE__ ")");
    t.method("mpiWeightSave!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.mpiWeightSave = val; });

    DEBUG_MSG("Adding mpiWeightSave! methods to provide write access to the field mpiWeightSave (" __HERE__ ")");
    t.method("mpiWeightSave!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->mpiWeightSave = val; });

    DEBUG_MSG("Adding asWeightSave methods  to provide read access to the field asWeightSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:606:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::asWeightSave
    t.method("asWeightSave", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.asWeightSave; });
    t.method("asWeightSave", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.asWeightSave; });
    t.method("asWeightSave", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->asWeightSave; });
    t.method("asWeightSave", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->asWeightSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:606:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::asWeightSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding asWeightSave! methods to provide write access to the field asWeightSave (" __HERE__ ")");
    t.method("asWeightSave!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.asWeightSave = val; });

    DEBUG_MSG("Adding asWeightSave! methods to provide write access to the field asWeightSave (" __HERE__ ")");
    t.method("asWeightSave!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->asWeightSave = val; });

    DEBUG_MSG("Adding aemWeightSave methods  to provide read access to the field aemWeightSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:607:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::aemWeightSave
    t.method("aemWeightSave", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.aemWeightSave; });
    t.method("aemWeightSave", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.aemWeightSave; });
    t.method("aemWeightSave", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->aemWeightSave; });
    t.method("aemWeightSave", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->aemWeightSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:607:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::aemWeightSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding aemWeightSave! methods to provide write access to the field aemWeightSave (" __HERE__ ")");
    t.method("aemWeightSave!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.aemWeightSave = val; });

    DEBUG_MSG("Adding aemWeightSave! methods to provide write access to the field aemWeightSave (" __HERE__ ")");
    t.method("aemWeightSave!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->aemWeightSave = val; });

    DEBUG_MSG("Adding bornAsVarFac methods  to provide read access to the field bornAsVarFac (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:608:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::bornAsVarFac
    t.method("bornAsVarFac", [](const Pythia8::MergingHooks::IndividualWeights& a) -> const std::vector<double>& { return a.bornAsVarFac; });
    t.method("bornAsVarFac", [](Pythia8::MergingHooks::IndividualWeights& a) -> std::vector<double>& { return a.bornAsVarFac; });
    t.method("bornAsVarFac", [](const Pythia8::MergingHooks::IndividualWeights* a) -> const std::vector<double>& { return a->bornAsVarFac; });
    t.method("bornAsVarFac", [](Pythia8::MergingHooks::IndividualWeights* a) -> std::vector<double>& { return a->bornAsVarFac; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:608:20
    // signature to use in the veto list: Pythia8::MergingHooks::IndividualWeights::bornAsVarFac
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding bornAsVarFac! methods to provide write access to the field bornAsVarFac (" __HERE__ ")");
    t.method("bornAsVarFac!", [](Pythia8::MergingHooks::IndividualWeights& a, const std::vector<double>& val) -> std::vector<double>& { return a.bornAsVarFac = val; });

    DEBUG_MSG("Adding bornAsVarFac! methods to provide write access to the field bornAsVarFac (" __HERE__ ")");
    t.method("bornAsVarFac!", [](Pythia8::MergingHooks::IndividualWeights* a, const std::vector<double>& val) -> std::vector<double>& { return a->bornAsVarFac = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::MergingHooks::IndividualWeights>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_MergingHooks_IndividualWeights(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_MergingHooks_IndividualWeights(module));
}
