// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Sphericity> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Sphericity> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::Sphericity
// signature to use in the veto file: Pythia8::Sphericity
struct JlPythia8_Sphericity: public Wrapper {

  JlPythia8_Sphericity(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Sphericity (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:27:7
    jlcxx::TypeWrapper<Pythia8::Sphericity>  t = jlModule.add_type<Pythia8::Sphericity>("Pythia8!Sphericity");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Sphericity>>(new jlcxx::TypeWrapper<Pythia8::Sphericity>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Sphericity::Sphericity(double, int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:32:3
    t.constructor<double>(/*finalize=*/true);
    t.constructor<double, int>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for bool Pythia8::Sphericity::analyze(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Sphericity::analyze(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:39:8
    t.method("analyze", static_cast<bool (Pythia8::Sphericity::*)(const Pythia8::Event &) >(&Pythia8::Sphericity::analyze));

    DEBUG_MSG("Adding wrapper for double Pythia8::Sphericity::sphericity() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Sphericity::sphericity()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:42:10
    t.method("sphericity", static_cast<double (Pythia8::Sphericity::*)()  const>(&Pythia8::Sphericity::sphericity));

    DEBUG_MSG("Adding wrapper for double Pythia8::Sphericity::aplanarity() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Sphericity::aplanarity()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:43:10
    t.method("aplanarity", static_cast<double (Pythia8::Sphericity::*)()  const>(&Pythia8::Sphericity::aplanarity));

    DEBUG_MSG("Adding wrapper for double Pythia8::Sphericity::eigenValue(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Sphericity::eigenValue(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:44:10
    t.method("eigenValue", static_cast<double (Pythia8::Sphericity::*)(int)  const>(&Pythia8::Sphericity::eigenValue));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::Sphericity::eventAxis(int) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::Sphericity::eventAxis(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:46:8
    t.method("eventAxis", static_cast<Pythia8::Vec4 (Pythia8::Sphericity::*)(int)  const>(&Pythia8::Sphericity::eventAxis));

    DEBUG_MSG("Adding wrapper for void Pythia8::Sphericity::list() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Sphericity::list()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:50:8
    t.method("list", static_cast<void (Pythia8::Sphericity::*)()  const>(&Pythia8::Sphericity::list));

    DEBUG_MSG("Adding wrapper for int Pythia8::Sphericity::nError() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Sphericity::nError()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:53:7
    t.method("nError", static_cast<int (Pythia8::Sphericity::*)()  const>(&Pythia8::Sphericity::nError));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Sphericity>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Sphericity(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Sphericity(module));
}
