// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::PhaseSpace2to1tauy> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::PhaseSpace2to1tauy> : std::false_type { };
template<> struct SuperType<Pythia8::PhaseSpace2to1tauy> { typedef Pythia8::PhaseSpace type; };
}

// Class generating the wrapper for type Pythia8::PhaseSpace2to1tauy
// signature to use in the veto file: Pythia8::PhaseSpace2to1tauy
struct JlPythia8_PhaseSpace2to1tauy: public Wrapper {

  JlPythia8_PhaseSpace2to1tauy(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::PhaseSpace2to1tauy (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PhaseSpace.h:299:7
    jlcxx::TypeWrapper<Pythia8::PhaseSpace2to1tauy>  t = jlModule.add_type<Pythia8::PhaseSpace2to1tauy>("Pythia8!PhaseSpace2to1tauy",
      jlcxx::julia_base_type<Pythia8::PhaseSpace>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::PhaseSpace2to1tauy>>(new jlcxx::TypeWrapper<Pythia8::PhaseSpace2to1tauy>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for bool Pythia8::PhaseSpace2to1tauy::setupSampling() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::PhaseSpace2to1tauy::setupSampling()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PhaseSpace.h:307:16
    t.method("setupSampling", static_cast<bool (Pythia8::PhaseSpace2to1tauy::*)() >(&Pythia8::PhaseSpace2to1tauy::setupSampling));

    DEBUG_MSG("Adding wrapper for bool Pythia8::PhaseSpace2to1tauy::trialKin(bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::PhaseSpace2to1tauy::trialKin(bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PhaseSpace.h:311:16
    t.method("trialKin", static_cast<bool (Pythia8::PhaseSpace2to1tauy::*)(bool, bool) >(&Pythia8::PhaseSpace2to1tauy::trialKin));
    t.method("trialKin", [](Pythia8::PhaseSpace2to1tauy& a)->bool { return a.trialKin(); });
    t.method("trialKin", [](Pythia8::PhaseSpace2to1tauy& a, bool arg0)->bool { return a.trialKin(arg0); });
    t.method("trialKin", [](Pythia8::PhaseSpace2to1tauy* a)->bool { return a->trialKin(); });
    t.method("trialKin", [](Pythia8::PhaseSpace2to1tauy* a, bool arg0)->bool { return a->trialKin(arg0); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::PhaseSpace2to1tauy::finalKin() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::PhaseSpace2to1tauy::finalKin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PhaseSpace.h:315:16
    t.method("finalKin", static_cast<bool (Pythia8::PhaseSpace2to1tauy::*)() >(&Pythia8::PhaseSpace2to1tauy::finalKin));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::PhaseSpace2to1tauy>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_PhaseSpace2to1tauy(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_PhaseSpace2to1tauy(module));
}
