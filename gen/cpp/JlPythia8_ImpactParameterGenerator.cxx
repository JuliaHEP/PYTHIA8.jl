// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::ImpactParameterGenerator> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::ImpactParameterGenerator> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::ImpactParameterGenerator
// signature to use in the veto file: Pythia8::ImpactParameterGenerator
struct JlPythia8_ImpactParameterGenerator: public Wrapper {

  JlPythia8_ImpactParameterGenerator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::ImpactParameterGenerator (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HISubCollisionModel.h:491:7
    jlcxx::TypeWrapper<Pythia8::ImpactParameterGenerator>  t = jlModule.add_type<Pythia8::ImpactParameterGenerator>("Pythia8!ImpactParameterGenerator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::ImpactParameterGenerator>>(new jlcxx::TypeWrapper<Pythia8::ImpactParameterGenerator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::ImpactParameterGenerator>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_ImpactParameterGenerator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_ImpactParameterGenerator(module));
}
