// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::RotBstMatrix> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::RotBstMatrix> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::RotBstMatrix
// signature to use in the veto file: Pythia8::RotBstMatrix
struct JlPythia8_RotBstMatrix: public Wrapper {

  JlPythia8_RotBstMatrix(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::RotBstMatrix (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:252:7
    jlcxx::TypeWrapper<Pythia8::RotBstMatrix>  t = jlModule.add_type<Pythia8::RotBstMatrix>("Pythia8!RotBstMatrix");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::RotBstMatrix>>(new jlcxx::TypeWrapper<Pythia8::RotBstMatrix>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::RotBstMatrix(const Pythia8::RotBstMatrix &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:259:3
    t.constructor<const Pythia8::RotBstMatrix &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix & Pythia8::RotBstMatrix::operator=(const Pythia8::RotBstMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix & Pythia8::RotBstMatrix::operator=(const Pythia8::RotBstMatrix &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:262:17
    t.method("assign", static_cast<Pythia8::RotBstMatrix & (Pythia8::RotBstMatrix::*)(const Pythia8::RotBstMatrix &) >(&Pythia8::RotBstMatrix::operator=));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::rot(double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::rot(double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:267:8
    t.method("rot", static_cast<void (Pythia8::RotBstMatrix::*)(double, double) >(&Pythia8::RotBstMatrix::rot));
    t.method("rot", [](Pythia8::RotBstMatrix& a)->void { a.rot(); });
    t.method("rot", [](Pythia8::RotBstMatrix& a, double arg0)->void { a.rot(arg0); });
    t.method("rot", [](Pythia8::RotBstMatrix* a)->void { a->rot(); });
    t.method("rot", [](Pythia8::RotBstMatrix* a, double arg0)->void { a->rot(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::rot(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::rot(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:268:8
    t.method("rot", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::rot));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::bst(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::bst(double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:269:8
    t.method("bst", static_cast<void (Pythia8::RotBstMatrix::*)(double, double, double) >(&Pythia8::RotBstMatrix::bst));
    t.method("bst", [](Pythia8::RotBstMatrix& a)->void { a.bst(); });
    t.method("bst", [](Pythia8::RotBstMatrix& a, double arg0)->void { a.bst(arg0); });
    t.method("bst", [](Pythia8::RotBstMatrix& a, double arg0, double arg1)->void { a.bst(arg0, arg1); });
    t.method("bst", [](Pythia8::RotBstMatrix* a)->void { a->bst(); });
    t.method("bst", [](Pythia8::RotBstMatrix* a, double arg0)->void { a->bst(arg0); });
    t.method("bst", [](Pythia8::RotBstMatrix* a, double arg0, double arg1)->void { a->bst(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::bst(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::bst(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:270:8
    t.method("bst", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::bst));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::bstback(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::bstback(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:271:8
    t.method("bstback", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::bstback));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::bst(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::bst(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:272:8
    t.method("bst", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::bst));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:273:8
    t.method("toCMframe", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::toCMframe));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:274:8
    t.method("fromCMframe", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool) >(&Pythia8::RotBstMatrix::fromCMframe));
    t.method("fromCMframe", [](Pythia8::RotBstMatrix& a, const Pythia8::Vec4 & arg0, const Pythia8::Vec4 & arg1)->void { a.fromCMframe(arg0, arg1); });
    t.method("fromCMframe", [](Pythia8::RotBstMatrix* a, const Pythia8::Vec4 & arg0, const Pythia8::Vec4 & arg1)->void { a->fromCMframe(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::toSameVframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::toSameVframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:275:8
    t.method("toSameVframe", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::toSameVframe));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::fromSameVframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::fromSameVframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:276:8
    t.method("fromSameVframe", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::RotBstMatrix::fromSameVframe));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::rotbst(const Pythia8::RotBstMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::rotbst(const Pythia8::RotBstMatrix &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:277:8
    t.method("rotbst", static_cast<void (Pythia8::RotBstMatrix::*)(const Pythia8::RotBstMatrix &) >(&Pythia8::RotBstMatrix::rotbst));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::invert() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::invert()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:278:8
    t.method("invert", static_cast<void (Pythia8::RotBstMatrix::*)() >(&Pythia8::RotBstMatrix::invert));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::RotBstMatrix::inverse() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::RotBstMatrix::inverse()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:279:16
    t.method("inverse", static_cast<Pythia8::RotBstMatrix (Pythia8::RotBstMatrix::*)()  const>(&Pythia8::RotBstMatrix::inverse));

    DEBUG_MSG("Adding wrapper for void Pythia8::RotBstMatrix::reset() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::RotBstMatrix::reset()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:281:8
    t.method("reset", static_cast<void (Pythia8::RotBstMatrix::*)() >(&Pythia8::RotBstMatrix::reset));

    DEBUG_MSG("Adding wrapper for double Pythia8::RotBstMatrix::value(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::RotBstMatrix::value(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:284:10
    t.method("value", static_cast<double (Pythia8::RotBstMatrix::*)(int, int) >(&Pythia8::RotBstMatrix::value));

    DEBUG_MSG("Adding wrapper for double Pythia8::RotBstMatrix::deviation() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::RotBstMatrix::deviation()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:287:10
    t.method("deviation", static_cast<double (Pythia8::RotBstMatrix::*)()  const>(&Pythia8::RotBstMatrix::deviation));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::RotBstMatrix::operator*(Pythia8::Vec4) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::RotBstMatrix::operator*(Pythia8::Vec4)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:296:8
    t.method("*", static_cast<Pythia8::Vec4 (Pythia8::RotBstMatrix::*)(Pythia8::Vec4)  const>(&Pythia8::RotBstMatrix::operator*));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::RotBstMatrix::operator*(Pythia8::RotBstMatrix) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::RotBstMatrix::operator*(Pythia8::RotBstMatrix)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:297:16
    t.method("*", static_cast<Pythia8::RotBstMatrix (Pythia8::RotBstMatrix::*)(Pythia8::RotBstMatrix)  const>(&Pythia8::RotBstMatrix::operator*));

    module_.unset_override_module();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::RotBstMatrix>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_RotBstMatrix(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_RotBstMatrix(module));
}
