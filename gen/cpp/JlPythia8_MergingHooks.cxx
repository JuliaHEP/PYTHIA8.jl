// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::MergingHooks> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::MergingHooks> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::MergingHooks
// signature to use in the veto file: Pythia8::MergingHooks
struct JlPythia8_MergingHooks: public Wrapper {

  JlPythia8_MergingHooks(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::MergingHooks (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:166:7
    jlcxx::TypeWrapper<Pythia8::MergingHooks>  t = jlModule.add_type<Pythia8::MergingHooks>("Pythia8!MergingHooks");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::MergingHooks>>(new jlcxx::TypeWrapper<Pythia8::MergingHooks>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tmsDefinition(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tmsDefinition(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:233:18
    t.method("tmsDefinition", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::tmsDefinition));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::dampenIfFailCuts(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::dampenIfFailCuts(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:236:18
    t.method("dampenIfFailCuts", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::dampenIfFailCuts));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::canCutOnRecState() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::canCutOnRecState()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:244:16
    t.method("canCutOnRecState", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::canCutOnRecState));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doCutOnRecState(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doCutOnRecState(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:249:16
    t.method("doCutOnRecState", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::doCutOnRecState));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::canVetoTrialEmission() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::canVetoTrialEmission()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:266:16
    t.method("canVetoTrialEmission", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::canVetoTrialEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doVetoTrialEmission(const Pythia8::Event &, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doVetoTrialEmission(const Pythia8::Event &, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:268:16
    t.method("doVetoTrialEmission", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Event &, const Pythia8::Event &) >(&Pythia8::MergingHooks::doVetoTrialEmission));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::hardProcessME(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::hardProcessME(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:272:18
    t.method("hardProcessME", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::hardProcessME));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::init() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::init()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:279:16
    t.method("init", static_cast<void (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::init));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tms() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tms()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:282:10
    t.method("tms", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::tms));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tmsCut() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tmsCut()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:287:10
    t.method("tmsCut", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::tmsCut));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::tms(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::tms(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:291:8
    t.method("tms", static_cast<void (Pythia8::MergingHooks::*)(double) >(&Pythia8::MergingHooks::tms));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::dRijMS() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::dRijMS()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:295:10
    t.method("dRijMS", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::dRijMS));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::pTiMS() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::pTiMS()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:300:10
    t.method("pTiMS", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pTiMS));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::QijMS() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::QijMS()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:305:10
    t.method("QijMS", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::QijMS));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nMaxJets() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nMaxJets()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:309:7
    t.method("nMaxJets", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nMaxJets));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nMaxJetsNLO() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nMaxJetsNLO()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:312:7
    t.method("nMaxJetsNLO", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nMaxJetsNLO));

    DEBUG_MSG("Adding wrapper for std::string Pythia8::MergingHooks::getProcessString() (" __HERE__ ")");
    // signature to use in the veto list: std::string Pythia8::MergingHooks::getProcessString()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:315:10
    t.method("getProcessString", static_cast<std::string (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getProcessString));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardOutPartons() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardOutPartons()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:317:7
    t.method("nHardOutPartons", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardOutPartons));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardOutLeptons() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardOutLeptons()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:319:7
    t.method("nHardOutLeptons", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardOutLeptons));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardOutBosons() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardOutBosons()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:322:7
    t.method("nHardOutBosons", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardOutBosons));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardInPartons() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardInPartons()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:325:7
    t.method("nHardInPartons", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardInPartons));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardInLeptons() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardInLeptons()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:327:7
    t.method("nHardInLeptons", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardInLeptons));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nResInCurrent() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nResInCurrent()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:330:7
    t.method("nResInCurrent", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nResInCurrent));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUserMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUserMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:332:8
    t.method("doUserMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUserMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doMGMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doMGMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:334:8
    t.method("doMGMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doMGMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doKTMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doKTMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:336:8
    t.method("doKTMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doKTMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doPTLundMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doPTLundMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:338:8
    t.method("doPTLundMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doPTLundMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doCutBasedMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doCutBasedMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:340:8
    t.method("doCutBasedMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doCutBasedMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doCKKWLMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doCKKWLMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:341:8
    t.method("doCKKWLMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doCKKWLMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUMEPSTree() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUMEPSTree()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:345:8
    t.method("doUMEPSTree", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUMEPSTree));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUMEPSSubt() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUMEPSSubt()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:346:8
    t.method("doUMEPSSubt", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUMEPSSubt));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUMEPSMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUMEPSMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:347:8
    t.method("doUMEPSMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUMEPSMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doNL3Tree() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doNL3Tree()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:350:8
    t.method("doNL3Tree", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doNL3Tree));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doNL3Loop() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doNL3Loop()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:351:8
    t.method("doNL3Loop", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doNL3Loop));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doNL3Subt() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doNL3Subt()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:352:8
    t.method("doNL3Subt", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doNL3Subt));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doNL3Merging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doNL3Merging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:353:8
    t.method("doNL3Merging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doNL3Merging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUNLOPSTree() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUNLOPSTree()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:357:8
    t.method("doUNLOPSTree", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUNLOPSTree));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUNLOPSLoop() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUNLOPSLoop()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:358:8
    t.method("doUNLOPSLoop", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUNLOPSLoop));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUNLOPSSubt() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUNLOPSSubt()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:359:8
    t.method("doUNLOPSSubt", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUNLOPSSubt));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUNLOPSSubtNLO() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUNLOPSSubtNLO()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:360:8
    t.method("doUNLOPSSubtNLO", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUNLOPSSubtNLO));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doUNLOPSMerging() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doUNLOPSMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:361:8
    t.method("doUNLOPSMerging", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doUNLOPSMerging));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doRuntimeAMCATNLOInterface() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doRuntimeAMCATNLOInterface()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:365:8
    t.method("doRuntimeAMCATNLOInterface", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doRuntimeAMCATNLOInterface));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nRecluster() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nRecluster()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:368:7
    t.method("nRecluster", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nRecluster));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nRequested() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nRequested()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:371:7
    t.method("nRequested", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nRequested));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::isFirstEmission(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::isFirstEmission(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:379:8
    t.method("isFirstEmission", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::isFirstEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::hasEffectiveG2EW() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::hasEffectiveG2EW()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:382:8
    t.method("hasEffectiveG2EW", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::hasEffectiveG2EW));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::allowEffectiveVertex(std::vector<int>, std::vector<int>) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::allowEffectiveVertex(std::vector<int>, std::vector<int>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:387:8
    t.method("allowEffectiveVertex", static_cast<bool (Pythia8::MergingHooks::*)(std::vector<int>, std::vector<int>) >(&Pythia8::MergingHooks::allowEffectiveVertex));

    DEBUG_MSG("Adding wrapper for Pythia8::Event Pythia8::MergingHooks::bareEvent(const Pythia8::Event &, bool) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Event Pythia8::MergingHooks::bareEvent(const Pythia8::Event &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:401:9
    t.method("bareEvent", static_cast<Pythia8::Event (Pythia8::MergingHooks::*)(const Pythia8::Event &, bool) >(&Pythia8::MergingHooks::bareEvent));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::reattachResonanceDecays(Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::reattachResonanceDecays(Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:403:8
    t.method("reattachResonanceDecays", static_cast<bool (Pythia8::MergingHooks::*)(Pythia8::Event &) >(&Pythia8::MergingHooks::reattachResonanceDecays));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::isInHard(int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::isInHard(int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:406:8
    t.method("isInHard", static_cast<bool (Pythia8::MergingHooks::*)(int, const Pythia8::Event &) >(&Pythia8::MergingHooks::isInHard));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::getNumberOfClusteringSteps(const Pythia8::Event &, bool) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::getNumberOfClusteringSteps(const Pythia8::Event &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:409:15
    t.method("getNumberOfClusteringSteps", static_cast<int (Pythia8::MergingHooks::*)(const Pythia8::Event &, bool) >(&Pythia8::MergingHooks::getNumberOfClusteringSteps));
    t.method("getNumberOfClusteringSteps", [](Pythia8::MergingHooks& a, const Pythia8::Event & arg0)->int { return a.getNumberOfClusteringSteps(arg0); });
    t.method("getNumberOfClusteringSteps", [](Pythia8::MergingHooks* a, const Pythia8::Event & arg0)->int { return a->getNumberOfClusteringSteps(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::orderHistories(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::orderHistories(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:419:8
    t.method("orderHistories", static_cast<void (Pythia8::MergingHooks::*)(bool) >(&Pythia8::MergingHooks::orderHistories));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::allowCutOnRecState(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::allowCutOnRecState(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:423:8
    t.method("allowCutOnRecState", static_cast<void (Pythia8::MergingHooks::*)(bool) >(&Pythia8::MergingHooks::allowCutOnRecState));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::doWeakClustering(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::doWeakClustering(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:427:8
    t.method("doWeakClustering", static_cast<void (Pythia8::MergingHooks::*)(bool) >(&Pythia8::MergingHooks::doWeakClustering));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::checkAgainstCut(const Pythia8::Particle &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::checkAgainstCut(const Pythia8::Particle &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:436:8
    t.method("checkAgainstCut", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Particle &) >(&Pythia8::MergingHooks::checkAgainstCut));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tmsNow(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tmsNow(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:439:18
    t.method("tmsNow", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::tmsNow));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::rhoms(const Pythia8::Event &, bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::rhoms(const Pythia8::Event &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:441:10
    t.method("rhoms", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &, bool) >(&Pythia8::MergingHooks::rhoms));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::kTms(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::kTms(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:443:10
    t.method("kTms", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::kTms));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::cutbasedms(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::cutbasedms(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:446:10
    t.method("cutbasedms", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::cutbasedms));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::doIgnoreEmissions(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::doIgnoreEmissions(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:453:8
    t.method("doIgnoreEmissions", static_cast<void (Pythia8::MergingHooks::*)(bool) >(&Pythia8::MergingHooks::doIgnoreEmissions));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::canVetoEmission() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::canVetoEmission()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:457:16
    t.method("canVetoEmission", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::canVetoEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doVetoEmission(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doVetoEmission(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:459:16
    t.method("doVetoEmission", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::doVetoEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::usesVincia() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::usesVincia()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:460:16
    t.method("usesVincia", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::usesVincia));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::useShowerPlugin() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::useShowerPlugin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:467:16
    t.method("useShowerPlugin", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::useShowerPlugin));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::includeWGTinXSEC() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::includeWGTinXSEC()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:474:8
    t.method("includeWGTinXSEC", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::includeWGTinXSEC));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nHardNow() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nHardNow()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:480:7
    t.method("nHardNow", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nHardNow));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tmsHardNow() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tmsHardNow()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:481:10
    t.method("tmsHardNow", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::tmsHardNow));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nJetsNow() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nJetsNow()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:482:7
    t.method("nJetsNow", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nJetsNow));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::tmsNow() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::tmsNow()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:483:10
    t.method("tmsNow", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::tmsNow));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setHardProcessPtr(Pythia8::HardProcess *) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setHardProcessPtr(Pythia8::HardProcess *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:485:8
    t.method("setHardProcessPtr", static_cast<void (Pythia8::MergingHooks::*)(Pythia8::HardProcess *) >(&Pythia8::MergingHooks::setHardProcessPtr));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nMuRVar() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nMuRVar()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:491:7
    t.method("nMuRVar", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nMuRVar));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::printIndividualWeights() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::printIndividualWeights()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:492:8
    t.method("printIndividualWeights", static_cast<void (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::printIndividualWeights));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setShowerPointer(Pythia8::PartonLevel *) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setShowerPointer(Pythia8::PartonLevel *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:503:8
    t.method("setShowerPointer", static_cast<void (Pythia8::MergingHooks::*)(Pythia8::PartonLevel *) >(&Pythia8::MergingHooks::setShowerPointer));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::storeHardProcessCandidates(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::storeHardProcessCandidates(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:637:8
    t.method("storeHardProcessCandidates", static_cast<void (Pythia8::MergingHooks::*)(const Pythia8::Event &) >(&Pythia8::MergingHooks::storeHardProcessCandidates));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setLHEInputFile(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setLHEInputFile(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:647:8
    t.method("setLHEInputFile", static_cast<void (Pythia8::MergingHooks::*)(std::string) >(&Pythia8::MergingHooks::setLHEInputFile));

    DEBUG_MSG("Adding wrapper for Pythia8::AlphaStrong * Pythia8::MergingHooks::AlphaS_FSR() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::AlphaStrong * Pythia8::MergingHooks::AlphaS_FSR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:655:16
    t.method("AlphaS_FSR", static_cast<Pythia8::AlphaStrong * (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::AlphaS_FSR));

    DEBUG_MSG("Adding wrapper for Pythia8::AlphaStrong * Pythia8::MergingHooks::AlphaS_ISR() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::AlphaStrong * Pythia8::MergingHooks::AlphaS_ISR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:656:16
    t.method("AlphaS_ISR", static_cast<Pythia8::AlphaStrong * (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::AlphaS_ISR));

    DEBUG_MSG("Adding wrapper for Pythia8::AlphaEM * Pythia8::MergingHooks::AlphaEM_FSR() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::AlphaEM * Pythia8::MergingHooks::AlphaEM_FSR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:657:12
    t.method("AlphaEM_FSR", static_cast<Pythia8::AlphaEM * (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::AlphaEM_FSR));

    DEBUG_MSG("Adding wrapper for Pythia8::AlphaEM * Pythia8::MergingHooks::AlphaEM_ISR() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::AlphaEM * Pythia8::MergingHooks::AlphaEM_ISR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:658:12
    t.method("AlphaEM_ISR", static_cast<Pythia8::AlphaEM * (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::AlphaEM_ISR));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::includeMassive() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::includeMassive()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:662:8
    t.method("includeMassive", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::includeMassive));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::enforceStrongOrdering() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::enforceStrongOrdering()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:664:8
    t.method("enforceStrongOrdering", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::enforceStrongOrdering));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::orderInRapidity() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::orderInRapidity()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:666:8
    t.method("orderInRapidity", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::orderInRapidity));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::pickByFull() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::pickByFull()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:668:8
    t.method("pickByFull", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pickByFull));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::pickByPoPT2() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::pickByPoPT2()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:670:8
    t.method("pickByPoPT2", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pickByPoPT2));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::includeRedundant() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::includeRedundant()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:672:8
    t.method("includeRedundant", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::includeRedundant));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::pickBySumPT() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::pickBySumPT()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:674:8
    t.method("pickBySumPT", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pickBySumPT));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::unorderedScalePrescip() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::unorderedScalePrescip()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:679:7
    t.method("unorderedScalePrescip", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::unorderedScalePrescip));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::unorderedASscalePrescip() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::unorderedASscalePrescip()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:683:7
    t.method("unorderedASscalePrescip", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::unorderedASscalePrescip));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::unorderedPDFscalePrescip() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::unorderedPDFscalePrescip()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:688:7
    t.method("unorderedPDFscalePrescip", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::unorderedPDFscalePrescip));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::incompleteScalePrescip() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::incompleteScalePrescip()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:693:7
    t.method("incompleteScalePrescip", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::incompleteScalePrescip));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::allowColourShuffling() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::allowColourShuffling()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:696:8
    t.method("allowColourShuffling", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::allowColourShuffling));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::resetHardQRen() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::resetHardQRen()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:699:8
    t.method("resetHardQRen", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::resetHardQRen));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::resetHardQFac() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::resetHardQFac()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:701:8
    t.method("resetHardQFac", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::resetHardQFac));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::scaleSeparationFactor() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::scaleSeparationFactor()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:705:10
    t.method("scaleSeparationFactor", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::scaleSeparationFactor));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::nonJoinedNorm() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::nonJoinedNorm()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:708:10
    t.method("nonJoinedNorm", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nonJoinedNorm));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::fsrInRecNorm() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::fsrInRecNorm()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:711:10
    t.method("fsrInRecNorm", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::fsrInRecNorm));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::herwigAcollFSR() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::herwigAcollFSR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:714:10
    t.method("herwigAcollFSR", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::herwigAcollFSR));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::herwigAcollISR() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::herwigAcollISR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:717:10
    t.method("herwigAcollISR", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::herwigAcollISR));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::pT0ISR() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::pT0ISR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:719:10
    t.method("pT0ISR", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pT0ISR));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::pTcut() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::pTcut()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:721:10
    t.method("pTcut", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::pTcut));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::muMI(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::muMI(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:724:8
    t.method("muMI", static_cast<void (Pythia8::MergingHooks::*)(double) >(&Pythia8::MergingHooks::muMI));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::muMI() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::muMI()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:725:10
    t.method("muMI", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::muMI));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::kFactor(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::kFactor(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:728:10
    t.method("kFactor", static_cast<double (Pythia8::MergingHooks::*)(int) >(&Pythia8::MergingHooks::kFactor));
    t.method("kFactor", [](Pythia8::MergingHooks& a)->double { return a.kFactor(); });
    t.method("kFactor", [](Pythia8::MergingHooks* a)->double { return a->kFactor(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::k1Factor(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::k1Factor(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:734:10
    t.method("k1Factor", static_cast<double (Pythia8::MergingHooks::*)(int) >(&Pythia8::MergingHooks::k1Factor));
    t.method("k1Factor", [](Pythia8::MergingHooks& a)->double { return a.k1Factor(); });
    t.method("k1Factor", [](Pythia8::MergingHooks* a)->double { return a->k1Factor(); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::orderHistories() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::orderHistories()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:740:8
    t.method("orderHistories", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::orderHistories));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::allowCutOnRecState() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::allowCutOnRecState()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:745:8
    t.method("allowCutOnRecState", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::allowCutOnRecState));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doWeakClustering() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doWeakClustering()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:748:8
    t.method("doWeakClustering", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doWeakClustering));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doSQCDClustering() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doSQCDClustering()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:750:8
    t.method("doSQCDClustering", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::doSQCDClustering));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::muF() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::muF()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:753:10
    t.method("muF", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::muF));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::muR() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::muR()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:754:10
    t.method("muR", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::muR));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::muFinME() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::muFinME()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:756:10
    t.method("muFinME", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::muFinME));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::muRinME() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::muRinME()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:766:10
    t.method("muRinME", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::muRinME));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::doIgnoreStep(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::doIgnoreStep(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:783:8
    t.method("doIgnoreStep", static_cast<void (Pythia8::MergingHooks::*)(bool) >(&Pythia8::MergingHooks::doIgnoreStep));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::canVetoStep() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::canVetoStep()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:785:16
    t.method("canVetoStep", static_cast<bool (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::canVetoStep));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::storeWeights(std::vector<double>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::storeWeights(std::vector<double>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:788:8
    t.method("storeWeights", static_cast<void (Pythia8::MergingHooks::*)(std::vector<double>) >(&Pythia8::MergingHooks::storeWeights));

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::doVetoStep(const Pythia8::Event &, const Pythia8::Event &, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::doVetoStep(const Pythia8::Event &, const Pythia8::Event &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:792:16
    t.method("doVetoStep", static_cast<bool (Pythia8::MergingHooks::*)(const Pythia8::Event &, const Pythia8::Event &, bool) >(&Pythia8::MergingHooks::doVetoStep));
    t.method("doVetoStep", [](Pythia8::MergingHooks& a, const Pythia8::Event & arg0, const Pythia8::Event & arg1)->bool { return a.doVetoStep(arg0, arg1); });
    t.method("doVetoStep", [](Pythia8::MergingHooks* a, const Pythia8::Event & arg0, const Pythia8::Event & arg1)->bool { return a->doVetoStep(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::MergingHooks::setShowerStartingScales(bool, bool, double &, const Pythia8::Event &, double &, bool &, double &, bool &, double &, bool &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::MergingHooks::setShowerStartingScales(bool, bool, double &, const Pythia8::Event &, double &, bool &, double &, bool &, double &, bool &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:796:16
    t.method("setShowerStartingScales", static_cast<bool (Pythia8::MergingHooks::*)(bool, bool, double &, const Pythia8::Event &, double &, bool &, double &, bool &, double &, bool &) >(&Pythia8::MergingHooks::setShowerStartingScales));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setShowerStoppingScale(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setShowerStoppingScale(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:805:8
    t.method("setShowerStoppingScale", static_cast<void (Pythia8::MergingHooks::*)(double) >(&Pythia8::MergingHooks::setShowerStoppingScale));
    t.method("setShowerStoppingScale", [](Pythia8::MergingHooks& a)->void { a.setShowerStoppingScale(); });
    t.method("setShowerStoppingScale", [](Pythia8::MergingHooks* a)->void { a->setShowerStoppingScale(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::getShowerStoppingScale() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::getShowerStoppingScale()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:806:10
    t.method("getShowerStoppingScale", static_cast<double (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getShowerStoppingScale));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::nMinMPI(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::nMinMPI(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:808:8
    t.method("nMinMPI", static_cast<void (Pythia8::MergingHooks::*)(int) >(&Pythia8::MergingHooks::nMinMPI));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::nMinMPI() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::nMinMPI()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:809:7
    t.method("nMinMPI", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::nMinMPI));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::kTdurham(const Pythia8::Particle &, const Pythia8::Particle &, int, double) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::kTdurham(const Pythia8::Particle &, const Pythia8::Particle &, int, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:816:10
    t.method("kTdurham", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Particle &, const Pythia8::Particle &, int, double) >(&Pythia8::MergingHooks::kTdurham));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::rhoPythia(const Pythia8::Event &, int, int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::rhoPythia(const Pythia8::Event &, int, int, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:819:10
    t.method("rhoPythia", static_cast<double (Pythia8::MergingHooks::*)(const Pythia8::Event &, int, int, int, int) >(&Pythia8::MergingHooks::rhoPythia));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::findColour(int, int, int, const Pythia8::Event &, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::findColour(int, int, int, const Pythia8::Event &, int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:824:7
    t.method("findColour", static_cast<int (Pythia8::MergingHooks::*)(int, int, int, const Pythia8::Event &, int, bool) >(&Pythia8::MergingHooks::findColour));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::deltaRij(Pythia8::Vec4, Pythia8::Vec4) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::deltaRij(Pythia8::Vec4, Pythia8::Vec4)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:827:10
    t.method("deltaRij", static_cast<double (Pythia8::MergingHooks::*)(Pythia8::Vec4, Pythia8::Vec4) >(&Pythia8::MergingHooks::deltaRij));

    DEBUG_MSG("Adding wrapper for double Pythia8::MergingHooks::getWeightNLO(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::MergingHooks::getWeightNLO(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:834:10
    t.method("getWeightNLO", static_cast<double (Pythia8::MergingHooks::*)(int) >(&Pythia8::MergingHooks::getWeightNLO));
    t.method("getWeightNLO", [](Pythia8::MergingHooks& a)->double { return a.getWeightNLO(); });
    t.method("getWeightNLO", [](Pythia8::MergingHooks* a)->double { return a->getWeightNLO(); });

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::MergingHooks::getWeightCKKWL() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::MergingHooks::getWeightCKKWL()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:837:18
    t.method("getWeightCKKWL", static_cast<std::vector<double> (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getWeightCKKWL));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::MergingHooks::getWeightFIRST() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::MergingHooks::getWeightFIRST()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:839:18
    t.method("getWeightFIRST", static_cast<std::vector<double> (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getWeightFIRST));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setWeightCKKWL(std::vector<double>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setWeightCKKWL(std::vector<double>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:841:8
    t.method("setWeightCKKWL", static_cast<void (Pythia8::MergingHooks::*)(std::vector<double>) >(&Pythia8::MergingHooks::setWeightCKKWL));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setWeightFIRST(std::vector<double>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setWeightFIRST(std::vector<double>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:846:8
    t.method("setWeightFIRST", static_cast<void (Pythia8::MergingHooks::*)(std::vector<double>) >(&Pythia8::MergingHooks::setWeightFIRST));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::MergingHooks::getSudakovWeight() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::MergingHooks::getSudakovWeight()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:853:18
    t.method("getSudakovWeight", static_cast<std::vector<double> (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getSudakovWeight));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::MergingHooks::getCouplingWeight() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::MergingHooks::getCouplingWeight()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:862:18
    t.method("getCouplingWeight", static_cast<std::vector<double> (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getCouplingWeight));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setEventVetoInfo(int, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setEventVetoInfo(int, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:879:8
    t.method("setEventVetoInfo", static_cast<void (Pythia8::MergingHooks::*)(int, double) >(&Pythia8::MergingHooks::setEventVetoInfo));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::setHardProcessInfo(int, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::setHardProcessInfo(int, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:883:8
    t.method("setHardProcessInfo", static_cast<void (Pythia8::MergingHooks::*)(int, double) >(&Pythia8::MergingHooks::setHardProcessInfo));

    DEBUG_MSG("Adding wrapper for void Pythia8::MergingHooks::addVetoInMainShower() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::MergingHooks::addVetoInMainShower()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:888:8
    t.method("addVetoInMainShower", static_cast<void (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::addVetoInMainShower));

    DEBUG_MSG("Adding wrapper for int Pythia8::MergingHooks::getNumberVetoedInMainShower() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::MergingHooks::getNumberVetoedInMainShower()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:889:7
    t.method("getNumberVetoedInMainShower", static_cast<int (Pythia8::MergingHooks::*)() >(&Pythia8::MergingHooks::getNumberVetoedInMainShower));

    DEBUG_MSG("Adding useShowerPluginSave methods  to provide read access to the field useShowerPluginSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:466:8
    // signature to use in the veto list: Pythia8::MergingHooks::useShowerPluginSave
    t.method("useShowerPluginSave", [](const Pythia8::MergingHooks& a) -> bool { return a.useShowerPluginSave; });
    t.method("useShowerPluginSave", [](Pythia8::MergingHooks& a) -> bool { return a.useShowerPluginSave; });
    t.method("useShowerPluginSave", [](const Pythia8::MergingHooks* a) -> bool { return a->useShowerPluginSave; });
    t.method("useShowerPluginSave", [](Pythia8::MergingHooks* a) -> bool { return a->useShowerPluginSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:466:8
    // signature to use in the veto list: Pythia8::MergingHooks::useShowerPluginSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding useShowerPluginSave! methods to provide write access to the field useShowerPluginSave (" __HERE__ ")");
    t.method("useShowerPluginSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.useShowerPluginSave = val; });

    DEBUG_MSG("Adding useShowerPluginSave! methods to provide write access to the field useShowerPluginSave (" __HERE__ ")");
    t.method("useShowerPluginSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->useShowerPluginSave = val; });

    DEBUG_MSG("Adding useOwnHardProcess methods  to provide read access to the field useOwnHardProcess (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:499:8
    // signature to use in the veto list: Pythia8::MergingHooks::useOwnHardProcess
    t.method("useOwnHardProcess", [](const Pythia8::MergingHooks& a) -> bool { return a.useOwnHardProcess; });
    t.method("useOwnHardProcess", [](Pythia8::MergingHooks& a) -> bool { return a.useOwnHardProcess; });
    t.method("useOwnHardProcess", [](const Pythia8::MergingHooks* a) -> bool { return a->useOwnHardProcess; });
    t.method("useOwnHardProcess", [](Pythia8::MergingHooks* a) -> bool { return a->useOwnHardProcess; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:499:8
    // signature to use in the veto list: Pythia8::MergingHooks::useOwnHardProcess
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding useOwnHardProcess! methods to provide write access to the field useOwnHardProcess (" __HERE__ ")");
    t.method("useOwnHardProcess!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.useOwnHardProcess = val; });

    DEBUG_MSG("Adding useOwnHardProcess! methods to provide write access to the field useOwnHardProcess (" __HERE__ ")");
    t.method("useOwnHardProcess!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->useOwnHardProcess = val; });

    DEBUG_MSG("Adding hardProcess methods  to provide read access to the field hardProcess (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:500:16
    // signature to use in the veto list: Pythia8::MergingHooks::hardProcess
    t.method("hardProcess", [](const Pythia8::MergingHooks& a) -> Pythia8::HardProcess * { return a.hardProcess; });
    t.method("hardProcess", [](Pythia8::MergingHooks& a) -> Pythia8::HardProcess * { return a.hardProcess; });
    t.method("hardProcess", [](const Pythia8::MergingHooks* a) -> Pythia8::HardProcess * { return a->hardProcess; });
    t.method("hardProcess", [](Pythia8::MergingHooks* a) -> Pythia8::HardProcess * { return a->hardProcess; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:500:16
    // signature to use in the veto list: Pythia8::MergingHooks::hardProcess
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding hardProcess! methods to provide write access to the field hardProcess (" __HERE__ ")");
    t.method("hardProcess!", [](Pythia8::MergingHooks& a, Pythia8::HardProcess * val) -> Pythia8::HardProcess * { return a.hardProcess = val; });

    DEBUG_MSG("Adding hardProcess! methods to provide write access to the field hardProcess (" __HERE__ ")");
    t.method("hardProcess!", [](Pythia8::MergingHooks* a, Pythia8::HardProcess * val) -> Pythia8::HardProcess * { return a->hardProcess = val; });

    DEBUG_MSG("Adding showers methods  to provide read access to the field showers (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:502:16
    // signature to use in the veto list: Pythia8::MergingHooks::showers
    t.method("showers", [](const Pythia8::MergingHooks& a) -> Pythia8::PartonLevel * { return a.showers; });
    t.method("showers", [](Pythia8::MergingHooks& a) -> Pythia8::PartonLevel * { return a.showers; });
    t.method("showers", [](const Pythia8::MergingHooks* a) -> Pythia8::PartonLevel * { return a->showers; });
    t.method("showers", [](Pythia8::MergingHooks* a) -> Pythia8::PartonLevel * { return a->showers; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:502:16
    // signature to use in the veto list: Pythia8::MergingHooks::showers
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding showers! methods to provide write access to the field showers (" __HERE__ ")");
    t.method("showers!", [](Pythia8::MergingHooks& a, Pythia8::PartonLevel * val) -> Pythia8::PartonLevel * { return a.showers = val; });

    DEBUG_MSG("Adding showers! methods to provide write access to the field showers (" __HERE__ ")");
    t.method("showers!", [](Pythia8::MergingHooks* a, Pythia8::PartonLevel * val) -> Pythia8::PartonLevel * { return a->showers = val; });

    DEBUG_MSG("Adding AlphaS_FSRSave methods  to provide read access to the field AlphaS_FSRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:506:15
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaS_FSRSave
    t.method("AlphaS_FSRSave", [](const Pythia8::MergingHooks& a) -> const Pythia8::AlphaStrong& { return a.AlphaS_FSRSave; });
    t.method("AlphaS_FSRSave", [](Pythia8::MergingHooks& a) -> Pythia8::AlphaStrong& { return a.AlphaS_FSRSave; });
    t.method("AlphaS_FSRSave", [](const Pythia8::MergingHooks* a) -> const Pythia8::AlphaStrong& { return a->AlphaS_FSRSave; });
    t.method("AlphaS_FSRSave", [](Pythia8::MergingHooks* a) -> Pythia8::AlphaStrong& { return a->AlphaS_FSRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:506:15
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaS_FSRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding AlphaS_FSRSave! methods to provide write access to the field AlphaS_FSRSave (" __HERE__ ")");
    t.method("AlphaS_FSRSave!", [](Pythia8::MergingHooks& a, const Pythia8::AlphaStrong& val) -> Pythia8::AlphaStrong& { return a.AlphaS_FSRSave = val; });

    DEBUG_MSG("Adding AlphaS_FSRSave! methods to provide write access to the field AlphaS_FSRSave (" __HERE__ ")");
    t.method("AlphaS_FSRSave!", [](Pythia8::MergingHooks* a, const Pythia8::AlphaStrong& val) -> Pythia8::AlphaStrong& { return a->AlphaS_FSRSave = val; });

    DEBUG_MSG("Adding AlphaS_ISRSave methods  to provide read access to the field AlphaS_ISRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:507:15
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaS_ISRSave
    t.method("AlphaS_ISRSave", [](const Pythia8::MergingHooks& a) -> const Pythia8::AlphaStrong& { return a.AlphaS_ISRSave; });
    t.method("AlphaS_ISRSave", [](Pythia8::MergingHooks& a) -> Pythia8::AlphaStrong& { return a.AlphaS_ISRSave; });
    t.method("AlphaS_ISRSave", [](const Pythia8::MergingHooks* a) -> const Pythia8::AlphaStrong& { return a->AlphaS_ISRSave; });
    t.method("AlphaS_ISRSave", [](Pythia8::MergingHooks* a) -> Pythia8::AlphaStrong& { return a->AlphaS_ISRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:507:15
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaS_ISRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding AlphaS_ISRSave! methods to provide write access to the field AlphaS_ISRSave (" __HERE__ ")");
    t.method("AlphaS_ISRSave!", [](Pythia8::MergingHooks& a, const Pythia8::AlphaStrong& val) -> Pythia8::AlphaStrong& { return a.AlphaS_ISRSave = val; });

    DEBUG_MSG("Adding AlphaS_ISRSave! methods to provide write access to the field AlphaS_ISRSave (" __HERE__ ")");
    t.method("AlphaS_ISRSave!", [](Pythia8::MergingHooks* a, const Pythia8::AlphaStrong& val) -> Pythia8::AlphaStrong& { return a->AlphaS_ISRSave = val; });

    DEBUG_MSG("Adding AlphaEM_FSRSave methods  to provide read access to the field AlphaEM_FSRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:508:11
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaEM_FSRSave
    t.method("AlphaEM_FSRSave", [](const Pythia8::MergingHooks& a) -> const Pythia8::AlphaEM& { return a.AlphaEM_FSRSave; });
    t.method("AlphaEM_FSRSave", [](Pythia8::MergingHooks& a) -> Pythia8::AlphaEM& { return a.AlphaEM_FSRSave; });
    t.method("AlphaEM_FSRSave", [](const Pythia8::MergingHooks* a) -> const Pythia8::AlphaEM& { return a->AlphaEM_FSRSave; });
    t.method("AlphaEM_FSRSave", [](Pythia8::MergingHooks* a) -> Pythia8::AlphaEM& { return a->AlphaEM_FSRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:508:11
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaEM_FSRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding AlphaEM_FSRSave! methods to provide write access to the field AlphaEM_FSRSave (" __HERE__ ")");
    t.method("AlphaEM_FSRSave!", [](Pythia8::MergingHooks& a, const Pythia8::AlphaEM& val) -> Pythia8::AlphaEM& { return a.AlphaEM_FSRSave = val; });

    DEBUG_MSG("Adding AlphaEM_FSRSave! methods to provide write access to the field AlphaEM_FSRSave (" __HERE__ ")");
    t.method("AlphaEM_FSRSave!", [](Pythia8::MergingHooks* a, const Pythia8::AlphaEM& val) -> Pythia8::AlphaEM& { return a->AlphaEM_FSRSave = val; });

    DEBUG_MSG("Adding AlphaEM_ISRSave methods  to provide read access to the field AlphaEM_ISRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:509:11
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaEM_ISRSave
    t.method("AlphaEM_ISRSave", [](const Pythia8::MergingHooks& a) -> const Pythia8::AlphaEM& { return a.AlphaEM_ISRSave; });
    t.method("AlphaEM_ISRSave", [](Pythia8::MergingHooks& a) -> Pythia8::AlphaEM& { return a.AlphaEM_ISRSave; });
    t.method("AlphaEM_ISRSave", [](const Pythia8::MergingHooks* a) -> const Pythia8::AlphaEM& { return a->AlphaEM_ISRSave; });
    t.method("AlphaEM_ISRSave", [](Pythia8::MergingHooks* a) -> Pythia8::AlphaEM& { return a->AlphaEM_ISRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:509:11
    // signature to use in the veto list: Pythia8::MergingHooks::AlphaEM_ISRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding AlphaEM_ISRSave! methods to provide write access to the field AlphaEM_ISRSave (" __HERE__ ")");
    t.method("AlphaEM_ISRSave!", [](Pythia8::MergingHooks& a, const Pythia8::AlphaEM& val) -> Pythia8::AlphaEM& { return a.AlphaEM_ISRSave = val; });

    DEBUG_MSG("Adding AlphaEM_ISRSave! methods to provide write access to the field AlphaEM_ISRSave (" __HERE__ ")");
    t.method("AlphaEM_ISRSave!", [](Pythia8::MergingHooks* a, const Pythia8::AlphaEM& val) -> Pythia8::AlphaEM& { return a->AlphaEM_ISRSave = val; });

    DEBUG_MSG("Adding lheInputFile methods  to provide read access to the field lheInputFile (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:512:10
    // signature to use in the veto list: Pythia8::MergingHooks::lheInputFile
    t.method("lheInputFile", [](const Pythia8::MergingHooks& a) -> const std::string& { return a.lheInputFile; });
    t.method("lheInputFile", [](Pythia8::MergingHooks& a) -> std::string& { return a.lheInputFile; });
    t.method("lheInputFile", [](const Pythia8::MergingHooks* a) -> const std::string& { return a->lheInputFile; });
    t.method("lheInputFile", [](Pythia8::MergingHooks* a) -> std::string& { return a->lheInputFile; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:512:10
    // signature to use in the veto list: Pythia8::MergingHooks::lheInputFile
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding lheInputFile! methods to provide write access to the field lheInputFile (" __HERE__ ")");
    t.method("lheInputFile!", [](Pythia8::MergingHooks& a, const std::string& val) -> std::string& { return a.lheInputFile = val; });

    DEBUG_MSG("Adding lheInputFile! methods to provide write access to the field lheInputFile (" __HERE__ ")");
    t.method("lheInputFile!", [](Pythia8::MergingHooks* a, const std::string& val) -> std::string& { return a->lheInputFile = val; });

    DEBUG_MSG("Adding doUserMergingSave methods  to provide read access to the field doUserMergingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUserMergingSave
    t.method("doUserMergingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUserMergingSave; });
    t.method("doUserMergingSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUserMergingSave; });
    t.method("doUserMergingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUserMergingSave; });
    t.method("doUserMergingSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUserMergingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUserMergingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUserMergingSave! methods to provide write access to the field doUserMergingSave (" __HERE__ ")");
    t.method("doUserMergingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUserMergingSave = val; });

    DEBUG_MSG("Adding doUserMergingSave! methods to provide write access to the field doUserMergingSave (" __HERE__ ")");
    t.method("doUserMergingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUserMergingSave = val; });

    DEBUG_MSG("Adding doMGMergingSave methods  to provide read access to the field doMGMergingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:29
    // signature to use in the veto list: Pythia8::MergingHooks::doMGMergingSave
    t.method("doMGMergingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doMGMergingSave; });
    t.method("doMGMergingSave", [](Pythia8::MergingHooks& a) -> bool { return a.doMGMergingSave; });
    t.method("doMGMergingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doMGMergingSave; });
    t.method("doMGMergingSave", [](Pythia8::MergingHooks* a) -> bool { return a->doMGMergingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:29
    // signature to use in the veto list: Pythia8::MergingHooks::doMGMergingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doMGMergingSave! methods to provide write access to the field doMGMergingSave (" __HERE__ ")");
    t.method("doMGMergingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doMGMergingSave = val; });

    DEBUG_MSG("Adding doMGMergingSave! methods to provide write access to the field doMGMergingSave (" __HERE__ ")");
    t.method("doMGMergingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doMGMergingSave = val; });

    DEBUG_MSG("Adding doKTMergingSave methods  to provide read access to the field doKTMergingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:46
    // signature to use in the veto list: Pythia8::MergingHooks::doKTMergingSave
    t.method("doKTMergingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doKTMergingSave; });
    t.method("doKTMergingSave", [](Pythia8::MergingHooks& a) -> bool { return a.doKTMergingSave; });
    t.method("doKTMergingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doKTMergingSave; });
    t.method("doKTMergingSave", [](Pythia8::MergingHooks* a) -> bool { return a->doKTMergingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:515:46
    // signature to use in the veto list: Pythia8::MergingHooks::doKTMergingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doKTMergingSave! methods to provide write access to the field doKTMergingSave (" __HERE__ ")");
    t.method("doKTMergingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doKTMergingSave = val; });

    DEBUG_MSG("Adding doKTMergingSave! methods to provide write access to the field doKTMergingSave (" __HERE__ ")");
    t.method("doKTMergingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doKTMergingSave = val; });

    DEBUG_MSG("Adding doPTLundMergingSave methods  to provide read access to the field doPTLundMergingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:516:10
    // signature to use in the veto list: Pythia8::MergingHooks::doPTLundMergingSave
    t.method("doPTLundMergingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doPTLundMergingSave; });
    t.method("doPTLundMergingSave", [](Pythia8::MergingHooks& a) -> bool { return a.doPTLundMergingSave; });
    t.method("doPTLundMergingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doPTLundMergingSave; });
    t.method("doPTLundMergingSave", [](Pythia8::MergingHooks* a) -> bool { return a->doPTLundMergingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:516:10
    // signature to use in the veto list: Pythia8::MergingHooks::doPTLundMergingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doPTLundMergingSave! methods to provide write access to the field doPTLundMergingSave (" __HERE__ ")");
    t.method("doPTLundMergingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doPTLundMergingSave = val; });

    DEBUG_MSG("Adding doPTLundMergingSave! methods to provide write access to the field doPTLundMergingSave (" __HERE__ ")");
    t.method("doPTLundMergingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doPTLundMergingSave = val; });

    DEBUG_MSG("Adding doCutBasedMergingSave methods  to provide read access to the field doCutBasedMergingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:516:31
    // signature to use in the veto list: Pythia8::MergingHooks::doCutBasedMergingSave
    t.method("doCutBasedMergingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doCutBasedMergingSave; });
    t.method("doCutBasedMergingSave", [](Pythia8::MergingHooks& a) -> bool { return a.doCutBasedMergingSave; });
    t.method("doCutBasedMergingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doCutBasedMergingSave; });
    t.method("doCutBasedMergingSave", [](Pythia8::MergingHooks* a) -> bool { return a->doCutBasedMergingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:516:31
    // signature to use in the veto list: Pythia8::MergingHooks::doCutBasedMergingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doCutBasedMergingSave! methods to provide write access to the field doCutBasedMergingSave (" __HERE__ ")");
    t.method("doCutBasedMergingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doCutBasedMergingSave = val; });

    DEBUG_MSG("Adding doCutBasedMergingSave! methods to provide write access to the field doCutBasedMergingSave (" __HERE__ ")");
    t.method("doCutBasedMergingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doCutBasedMergingSave = val; });

    DEBUG_MSG("Adding includeMassiveSave methods  to provide read access to the field includeMassiveSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:10
    // signature to use in the veto list: Pythia8::MergingHooks::includeMassiveSave
    t.method("includeMassiveSave", [](const Pythia8::MergingHooks& a) -> bool { return a.includeMassiveSave; });
    t.method("includeMassiveSave", [](Pythia8::MergingHooks& a) -> bool { return a.includeMassiveSave; });
    t.method("includeMassiveSave", [](const Pythia8::MergingHooks* a) -> bool { return a->includeMassiveSave; });
    t.method("includeMassiveSave", [](Pythia8::MergingHooks* a) -> bool { return a->includeMassiveSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:10
    // signature to use in the veto list: Pythia8::MergingHooks::includeMassiveSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding includeMassiveSave! methods to provide write access to the field includeMassiveSave (" __HERE__ ")");
    t.method("includeMassiveSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.includeMassiveSave = val; });

    DEBUG_MSG("Adding includeMassiveSave! methods to provide write access to the field includeMassiveSave (" __HERE__ ")");
    t.method("includeMassiveSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->includeMassiveSave = val; });

    DEBUG_MSG("Adding enforceStrongOrderingSave methods  to provide read access to the field enforceStrongOrderingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:30
    // signature to use in the veto list: Pythia8::MergingHooks::enforceStrongOrderingSave
    t.method("enforceStrongOrderingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.enforceStrongOrderingSave; });
    t.method("enforceStrongOrderingSave", [](Pythia8::MergingHooks& a) -> bool { return a.enforceStrongOrderingSave; });
    t.method("enforceStrongOrderingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->enforceStrongOrderingSave; });
    t.method("enforceStrongOrderingSave", [](Pythia8::MergingHooks* a) -> bool { return a->enforceStrongOrderingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:30
    // signature to use in the veto list: Pythia8::MergingHooks::enforceStrongOrderingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding enforceStrongOrderingSave! methods to provide write access to the field enforceStrongOrderingSave (" __HERE__ ")");
    t.method("enforceStrongOrderingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.enforceStrongOrderingSave = val; });

    DEBUG_MSG("Adding enforceStrongOrderingSave! methods to provide write access to the field enforceStrongOrderingSave (" __HERE__ ")");
    t.method("enforceStrongOrderingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->enforceStrongOrderingSave = val; });

    DEBUG_MSG("Adding orderInRapiditySave methods  to provide read access to the field orderInRapiditySave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:57
    // signature to use in the veto list: Pythia8::MergingHooks::orderInRapiditySave
    t.method("orderInRapiditySave", [](const Pythia8::MergingHooks& a) -> bool { return a.orderInRapiditySave; });
    t.method("orderInRapiditySave", [](Pythia8::MergingHooks& a) -> bool { return a.orderInRapiditySave; });
    t.method("orderInRapiditySave", [](const Pythia8::MergingHooks* a) -> bool { return a->orderInRapiditySave; });
    t.method("orderInRapiditySave", [](Pythia8::MergingHooks* a) -> bool { return a->orderInRapiditySave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:517:57
    // signature to use in the veto list: Pythia8::MergingHooks::orderInRapiditySave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding orderInRapiditySave! methods to provide write access to the field orderInRapiditySave (" __HERE__ ")");
    t.method("orderInRapiditySave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.orderInRapiditySave = val; });

    DEBUG_MSG("Adding orderInRapiditySave! methods to provide write access to the field orderInRapiditySave (" __HERE__ ")");
    t.method("orderInRapiditySave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->orderInRapiditySave = val; });

    DEBUG_MSG("Adding pickByFullPSave methods  to provide read access to the field pickByFullPSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:10
    // signature to use in the veto list: Pythia8::MergingHooks::pickByFullPSave
    t.method("pickByFullPSave", [](const Pythia8::MergingHooks& a) -> bool { return a.pickByFullPSave; });
    t.method("pickByFullPSave", [](Pythia8::MergingHooks& a) -> bool { return a.pickByFullPSave; });
    t.method("pickByFullPSave", [](const Pythia8::MergingHooks* a) -> bool { return a->pickByFullPSave; });
    t.method("pickByFullPSave", [](Pythia8::MergingHooks* a) -> bool { return a->pickByFullPSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:10
    // signature to use in the veto list: Pythia8::MergingHooks::pickByFullPSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pickByFullPSave! methods to provide write access to the field pickByFullPSave (" __HERE__ ")");
    t.method("pickByFullPSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.pickByFullPSave = val; });

    DEBUG_MSG("Adding pickByFullPSave! methods to provide write access to the field pickByFullPSave (" __HERE__ ")");
    t.method("pickByFullPSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->pickByFullPSave = val; });

    DEBUG_MSG("Adding pickByPoPT2Save methods  to provide read access to the field pickByPoPT2Save (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:27
    // signature to use in the veto list: Pythia8::MergingHooks::pickByPoPT2Save
    t.method("pickByPoPT2Save", [](const Pythia8::MergingHooks& a) -> bool { return a.pickByPoPT2Save; });
    t.method("pickByPoPT2Save", [](Pythia8::MergingHooks& a) -> bool { return a.pickByPoPT2Save; });
    t.method("pickByPoPT2Save", [](const Pythia8::MergingHooks* a) -> bool { return a->pickByPoPT2Save; });
    t.method("pickByPoPT2Save", [](Pythia8::MergingHooks* a) -> bool { return a->pickByPoPT2Save; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:27
    // signature to use in the veto list: Pythia8::MergingHooks::pickByPoPT2Save
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pickByPoPT2Save! methods to provide write access to the field pickByPoPT2Save (" __HERE__ ")");
    t.method("pickByPoPT2Save!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.pickByPoPT2Save = val; });

    DEBUG_MSG("Adding pickByPoPT2Save! methods to provide write access to the field pickByPoPT2Save (" __HERE__ ")");
    t.method("pickByPoPT2Save!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->pickByPoPT2Save = val; });

    DEBUG_MSG("Adding includeRedundantSave methods  to provide read access to the field includeRedundantSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:44
    // signature to use in the veto list: Pythia8::MergingHooks::includeRedundantSave
    t.method("includeRedundantSave", [](const Pythia8::MergingHooks& a) -> bool { return a.includeRedundantSave; });
    t.method("includeRedundantSave", [](Pythia8::MergingHooks& a) -> bool { return a.includeRedundantSave; });
    t.method("includeRedundantSave", [](const Pythia8::MergingHooks* a) -> bool { return a->includeRedundantSave; });
    t.method("includeRedundantSave", [](Pythia8::MergingHooks* a) -> bool { return a->includeRedundantSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:518:44
    // signature to use in the veto list: Pythia8::MergingHooks::includeRedundantSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding includeRedundantSave! methods to provide write access to the field includeRedundantSave (" __HERE__ ")");
    t.method("includeRedundantSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.includeRedundantSave = val; });

    DEBUG_MSG("Adding includeRedundantSave! methods to provide write access to the field includeRedundantSave (" __HERE__ ")");
    t.method("includeRedundantSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->includeRedundantSave = val; });

    DEBUG_MSG("Adding pickBySumPTSave methods  to provide read access to the field pickBySumPTSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:10
    // signature to use in the veto list: Pythia8::MergingHooks::pickBySumPTSave
    t.method("pickBySumPTSave", [](const Pythia8::MergingHooks& a) -> bool { return a.pickBySumPTSave; });
    t.method("pickBySumPTSave", [](Pythia8::MergingHooks& a) -> bool { return a.pickBySumPTSave; });
    t.method("pickBySumPTSave", [](const Pythia8::MergingHooks* a) -> bool { return a->pickBySumPTSave; });
    t.method("pickBySumPTSave", [](Pythia8::MergingHooks* a) -> bool { return a->pickBySumPTSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:10
    // signature to use in the veto list: Pythia8::MergingHooks::pickBySumPTSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pickBySumPTSave! methods to provide write access to the field pickBySumPTSave (" __HERE__ ")");
    t.method("pickBySumPTSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.pickBySumPTSave = val; });

    DEBUG_MSG("Adding pickBySumPTSave! methods to provide write access to the field pickBySumPTSave (" __HERE__ ")");
    t.method("pickBySumPTSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->pickBySumPTSave = val; });

    DEBUG_MSG("Adding allowColourShufflingSave methods  to provide read access to the field allowColourShufflingSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:27
    // signature to use in the veto list: Pythia8::MergingHooks::allowColourShufflingSave
    t.method("allowColourShufflingSave", [](const Pythia8::MergingHooks& a) -> bool { return a.allowColourShufflingSave; });
    t.method("allowColourShufflingSave", [](Pythia8::MergingHooks& a) -> bool { return a.allowColourShufflingSave; });
    t.method("allowColourShufflingSave", [](const Pythia8::MergingHooks* a) -> bool { return a->allowColourShufflingSave; });
    t.method("allowColourShufflingSave", [](Pythia8::MergingHooks* a) -> bool { return a->allowColourShufflingSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:27
    // signature to use in the veto list: Pythia8::MergingHooks::allowColourShufflingSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding allowColourShufflingSave! methods to provide write access to the field allowColourShufflingSave (" __HERE__ ")");
    t.method("allowColourShufflingSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.allowColourShufflingSave = val; });

    DEBUG_MSG("Adding allowColourShufflingSave! methods to provide write access to the field allowColourShufflingSave (" __HERE__ ")");
    t.method("allowColourShufflingSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->allowColourShufflingSave = val; });

    DEBUG_MSG("Adding resetHardQRenSave methods  to provide read access to the field resetHardQRenSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:53
    // signature to use in the veto list: Pythia8::MergingHooks::resetHardQRenSave
    t.method("resetHardQRenSave", [](const Pythia8::MergingHooks& a) -> bool { return a.resetHardQRenSave; });
    t.method("resetHardQRenSave", [](Pythia8::MergingHooks& a) -> bool { return a.resetHardQRenSave; });
    t.method("resetHardQRenSave", [](const Pythia8::MergingHooks* a) -> bool { return a->resetHardQRenSave; });
    t.method("resetHardQRenSave", [](Pythia8::MergingHooks* a) -> bool { return a->resetHardQRenSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:519:53
    // signature to use in the veto list: Pythia8::MergingHooks::resetHardQRenSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding resetHardQRenSave! methods to provide write access to the field resetHardQRenSave (" __HERE__ ")");
    t.method("resetHardQRenSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.resetHardQRenSave = val; });

    DEBUG_MSG("Adding resetHardQRenSave! methods to provide write access to the field resetHardQRenSave (" __HERE__ ")");
    t.method("resetHardQRenSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->resetHardQRenSave = val; });

    DEBUG_MSG("Adding resetHardQFacSave methods  to provide read access to the field resetHardQFacSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:520:10
    // signature to use in the veto list: Pythia8::MergingHooks::resetHardQFacSave
    t.method("resetHardQFacSave", [](const Pythia8::MergingHooks& a) -> bool { return a.resetHardQFacSave; });
    t.method("resetHardQFacSave", [](Pythia8::MergingHooks& a) -> bool { return a.resetHardQFacSave; });
    t.method("resetHardQFacSave", [](const Pythia8::MergingHooks* a) -> bool { return a->resetHardQFacSave; });
    t.method("resetHardQFacSave", [](Pythia8::MergingHooks* a) -> bool { return a->resetHardQFacSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:520:10
    // signature to use in the veto list: Pythia8::MergingHooks::resetHardQFacSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding resetHardQFacSave! methods to provide write access to the field resetHardQFacSave (" __HERE__ ")");
    t.method("resetHardQFacSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.resetHardQFacSave = val; });

    DEBUG_MSG("Adding resetHardQFacSave! methods to provide write access to the field resetHardQFacSave (" __HERE__ ")");
    t.method("resetHardQFacSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->resetHardQFacSave = val; });

    DEBUG_MSG("Adding unorderedScalePrescipSave methods  to provide read access to the field unorderedScalePrescipSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:521:10
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedScalePrescipSave
    t.method("unorderedScalePrescipSave", [](const Pythia8::MergingHooks& a) -> int { return a.unorderedScalePrescipSave; });
    t.method("unorderedScalePrescipSave", [](Pythia8::MergingHooks& a) -> int { return a.unorderedScalePrescipSave; });
    t.method("unorderedScalePrescipSave", [](const Pythia8::MergingHooks* a) -> int { return a->unorderedScalePrescipSave; });
    t.method("unorderedScalePrescipSave", [](Pythia8::MergingHooks* a) -> int { return a->unorderedScalePrescipSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:521:10
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedScalePrescipSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding unorderedScalePrescipSave! methods to provide write access to the field unorderedScalePrescipSave (" __HERE__ ")");
    t.method("unorderedScalePrescipSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.unorderedScalePrescipSave = val; });

    DEBUG_MSG("Adding unorderedScalePrescipSave! methods to provide write access to the field unorderedScalePrescipSave (" __HERE__ ")");
    t.method("unorderedScalePrescipSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->unorderedScalePrescipSave = val; });

    DEBUG_MSG("Adding unorderedASscalePrescipSave methods  to provide read access to the field unorderedASscalePrescipSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:521:37
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedASscalePrescipSave
    t.method("unorderedASscalePrescipSave", [](const Pythia8::MergingHooks& a) -> int { return a.unorderedASscalePrescipSave; });
    t.method("unorderedASscalePrescipSave", [](Pythia8::MergingHooks& a) -> int { return a.unorderedASscalePrescipSave; });
    t.method("unorderedASscalePrescipSave", [](const Pythia8::MergingHooks* a) -> int { return a->unorderedASscalePrescipSave; });
    t.method("unorderedASscalePrescipSave", [](Pythia8::MergingHooks* a) -> int { return a->unorderedASscalePrescipSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:521:37
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedASscalePrescipSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding unorderedASscalePrescipSave! methods to provide write access to the field unorderedASscalePrescipSave (" __HERE__ ")");
    t.method("unorderedASscalePrescipSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.unorderedASscalePrescipSave = val; });

    DEBUG_MSG("Adding unorderedASscalePrescipSave! methods to provide write access to the field unorderedASscalePrescipSave (" __HERE__ ")");
    t.method("unorderedASscalePrescipSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->unorderedASscalePrescipSave = val; });

    DEBUG_MSG("Adding unorderedPDFscalePrescipSave methods  to provide read access to the field unorderedPDFscalePrescipSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:522:10
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedPDFscalePrescipSave
    t.method("unorderedPDFscalePrescipSave", [](const Pythia8::MergingHooks& a) -> int { return a.unorderedPDFscalePrescipSave; });
    t.method("unorderedPDFscalePrescipSave", [](Pythia8::MergingHooks& a) -> int { return a.unorderedPDFscalePrescipSave; });
    t.method("unorderedPDFscalePrescipSave", [](const Pythia8::MergingHooks* a) -> int { return a->unorderedPDFscalePrescipSave; });
    t.method("unorderedPDFscalePrescipSave", [](Pythia8::MergingHooks* a) -> int { return a->unorderedPDFscalePrescipSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:522:10
    // signature to use in the veto list: Pythia8::MergingHooks::unorderedPDFscalePrescipSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding unorderedPDFscalePrescipSave! methods to provide write access to the field unorderedPDFscalePrescipSave (" __HERE__ ")");
    t.method("unorderedPDFscalePrescipSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.unorderedPDFscalePrescipSave = val; });

    DEBUG_MSG("Adding unorderedPDFscalePrescipSave! methods to provide write access to the field unorderedPDFscalePrescipSave (" __HERE__ ")");
    t.method("unorderedPDFscalePrescipSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->unorderedPDFscalePrescipSave = val; });

    DEBUG_MSG("Adding incompleteScalePrescipSave methods  to provide read access to the field incompleteScalePrescipSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:522:40
    // signature to use in the veto list: Pythia8::MergingHooks::incompleteScalePrescipSave
    t.method("incompleteScalePrescipSave", [](const Pythia8::MergingHooks& a) -> int { return a.incompleteScalePrescipSave; });
    t.method("incompleteScalePrescipSave", [](Pythia8::MergingHooks& a) -> int { return a.incompleteScalePrescipSave; });
    t.method("incompleteScalePrescipSave", [](const Pythia8::MergingHooks* a) -> int { return a->incompleteScalePrescipSave; });
    t.method("incompleteScalePrescipSave", [](Pythia8::MergingHooks* a) -> int { return a->incompleteScalePrescipSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:522:40
    // signature to use in the veto list: Pythia8::MergingHooks::incompleteScalePrescipSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding incompleteScalePrescipSave! methods to provide write access to the field incompleteScalePrescipSave (" __HERE__ ")");
    t.method("incompleteScalePrescipSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.incompleteScalePrescipSave = val; });

    DEBUG_MSG("Adding incompleteScalePrescipSave! methods to provide write access to the field incompleteScalePrescipSave (" __HERE__ ")");
    t.method("incompleteScalePrescipSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->incompleteScalePrescipSave = val; });

    DEBUG_MSG("Adding ktTypeSave methods  to provide read access to the field ktTypeSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:10
    // signature to use in the veto list: Pythia8::MergingHooks::ktTypeSave
    t.method("ktTypeSave", [](const Pythia8::MergingHooks& a) -> int { return a.ktTypeSave; });
    t.method("ktTypeSave", [](Pythia8::MergingHooks& a) -> int { return a.ktTypeSave; });
    t.method("ktTypeSave", [](const Pythia8::MergingHooks* a) -> int { return a->ktTypeSave; });
    t.method("ktTypeSave", [](Pythia8::MergingHooks* a) -> int { return a->ktTypeSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:10
    // signature to use in the veto list: Pythia8::MergingHooks::ktTypeSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding ktTypeSave! methods to provide write access to the field ktTypeSave (" __HERE__ ")");
    t.method("ktTypeSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.ktTypeSave = val; });

    DEBUG_MSG("Adding ktTypeSave! methods to provide write access to the field ktTypeSave (" __HERE__ ")");
    t.method("ktTypeSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->ktTypeSave = val; });

    DEBUG_MSG("Adding nReclusterSave methods  to provide read access to the field nReclusterSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:22
    // signature to use in the veto list: Pythia8::MergingHooks::nReclusterSave
    t.method("nReclusterSave", [](const Pythia8::MergingHooks& a) -> int { return a.nReclusterSave; });
    t.method("nReclusterSave", [](Pythia8::MergingHooks& a) -> int { return a.nReclusterSave; });
    t.method("nReclusterSave", [](const Pythia8::MergingHooks* a) -> int { return a->nReclusterSave; });
    t.method("nReclusterSave", [](Pythia8::MergingHooks* a) -> int { return a->nReclusterSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:22
    // signature to use in the veto list: Pythia8::MergingHooks::nReclusterSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nReclusterSave! methods to provide write access to the field nReclusterSave (" __HERE__ ")");
    t.method("nReclusterSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nReclusterSave = val; });

    DEBUG_MSG("Adding nReclusterSave! methods to provide write access to the field nReclusterSave (" __HERE__ ")");
    t.method("nReclusterSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nReclusterSave = val; });

    DEBUG_MSG("Adding nQuarksMergeSave methods  to provide read access to the field nQuarksMergeSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:38
    // signature to use in the veto list: Pythia8::MergingHooks::nQuarksMergeSave
    t.method("nQuarksMergeSave", [](const Pythia8::MergingHooks& a) -> int { return a.nQuarksMergeSave; });
    t.method("nQuarksMergeSave", [](Pythia8::MergingHooks& a) -> int { return a.nQuarksMergeSave; });
    t.method("nQuarksMergeSave", [](const Pythia8::MergingHooks* a) -> int { return a->nQuarksMergeSave; });
    t.method("nQuarksMergeSave", [](Pythia8::MergingHooks* a) -> int { return a->nQuarksMergeSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:38
    // signature to use in the veto list: Pythia8::MergingHooks::nQuarksMergeSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nQuarksMergeSave! methods to provide write access to the field nQuarksMergeSave (" __HERE__ ")");
    t.method("nQuarksMergeSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nQuarksMergeSave = val; });

    DEBUG_MSG("Adding nQuarksMergeSave! methods to provide write access to the field nQuarksMergeSave (" __HERE__ ")");
    t.method("nQuarksMergeSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nQuarksMergeSave = val; });

    DEBUG_MSG("Adding nRequestedSave methods  to provide read access to the field nRequestedSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:56
    // signature to use in the veto list: Pythia8::MergingHooks::nRequestedSave
    t.method("nRequestedSave", [](const Pythia8::MergingHooks& a) -> int { return a.nRequestedSave; });
    t.method("nRequestedSave", [](Pythia8::MergingHooks& a) -> int { return a.nRequestedSave; });
    t.method("nRequestedSave", [](const Pythia8::MergingHooks* a) -> int { return a->nRequestedSave; });
    t.method("nRequestedSave", [](Pythia8::MergingHooks* a) -> int { return a->nRequestedSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:523:56
    // signature to use in the veto list: Pythia8::MergingHooks::nRequestedSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nRequestedSave! methods to provide write access to the field nRequestedSave (" __HERE__ ")");
    t.method("nRequestedSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nRequestedSave = val; });

    DEBUG_MSG("Adding nRequestedSave! methods to provide write access to the field nRequestedSave (" __HERE__ ")");
    t.method("nRequestedSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nRequestedSave = val; });

    DEBUG_MSG("Adding scaleSeparationFactorSave methods  to provide read access to the field scaleSeparationFactorSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:525:10
    // signature to use in the veto list: Pythia8::MergingHooks::scaleSeparationFactorSave
    t.method("scaleSeparationFactorSave", [](const Pythia8::MergingHooks& a) -> double { return a.scaleSeparationFactorSave; });
    t.method("scaleSeparationFactorSave", [](Pythia8::MergingHooks& a) -> double { return a.scaleSeparationFactorSave; });
    t.method("scaleSeparationFactorSave", [](const Pythia8::MergingHooks* a) -> double { return a->scaleSeparationFactorSave; });
    t.method("scaleSeparationFactorSave", [](Pythia8::MergingHooks* a) -> double { return a->scaleSeparationFactorSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:525:10
    // signature to use in the veto list: Pythia8::MergingHooks::scaleSeparationFactorSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding scaleSeparationFactorSave! methods to provide write access to the field scaleSeparationFactorSave (" __HERE__ ")");
    t.method("scaleSeparationFactorSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.scaleSeparationFactorSave = val; });

    DEBUG_MSG("Adding scaleSeparationFactorSave! methods to provide write access to the field scaleSeparationFactorSave (" __HERE__ ")");
    t.method("scaleSeparationFactorSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->scaleSeparationFactorSave = val; });

    DEBUG_MSG("Adding nonJoinedNormSave methods  to provide read access to the field nonJoinedNormSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:525:37
    // signature to use in the veto list: Pythia8::MergingHooks::nonJoinedNormSave
    t.method("nonJoinedNormSave", [](const Pythia8::MergingHooks& a) -> double { return a.nonJoinedNormSave; });
    t.method("nonJoinedNormSave", [](Pythia8::MergingHooks& a) -> double { return a.nonJoinedNormSave; });
    t.method("nonJoinedNormSave", [](const Pythia8::MergingHooks* a) -> double { return a->nonJoinedNormSave; });
    t.method("nonJoinedNormSave", [](Pythia8::MergingHooks* a) -> double { return a->nonJoinedNormSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:525:37
    // signature to use in the veto list: Pythia8::MergingHooks::nonJoinedNormSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nonJoinedNormSave! methods to provide write access to the field nonJoinedNormSave (" __HERE__ ")");
    t.method("nonJoinedNormSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.nonJoinedNormSave = val; });

    DEBUG_MSG("Adding nonJoinedNormSave! methods to provide write access to the field nonJoinedNormSave (" __HERE__ ")");
    t.method("nonJoinedNormSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->nonJoinedNormSave = val; });

    DEBUG_MSG("Adding fsrInRecNormSave methods  to provide read access to the field fsrInRecNormSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:10
    // signature to use in the veto list: Pythia8::MergingHooks::fsrInRecNormSave
    t.method("fsrInRecNormSave", [](const Pythia8::MergingHooks& a) -> double { return a.fsrInRecNormSave; });
    t.method("fsrInRecNormSave", [](Pythia8::MergingHooks& a) -> double { return a.fsrInRecNormSave; });
    t.method("fsrInRecNormSave", [](const Pythia8::MergingHooks* a) -> double { return a->fsrInRecNormSave; });
    t.method("fsrInRecNormSave", [](Pythia8::MergingHooks* a) -> double { return a->fsrInRecNormSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:10
    // signature to use in the veto list: Pythia8::MergingHooks::fsrInRecNormSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding fsrInRecNormSave! methods to provide write access to the field fsrInRecNormSave (" __HERE__ ")");
    t.method("fsrInRecNormSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.fsrInRecNormSave = val; });

    DEBUG_MSG("Adding fsrInRecNormSave! methods to provide write access to the field fsrInRecNormSave (" __HERE__ ")");
    t.method("fsrInRecNormSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->fsrInRecNormSave = val; });

    DEBUG_MSG("Adding herwigAcollFSRSave methods  to provide read access to the field herwigAcollFSRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:28
    // signature to use in the veto list: Pythia8::MergingHooks::herwigAcollFSRSave
    t.method("herwigAcollFSRSave", [](const Pythia8::MergingHooks& a) -> double { return a.herwigAcollFSRSave; });
    t.method("herwigAcollFSRSave", [](Pythia8::MergingHooks& a) -> double { return a.herwigAcollFSRSave; });
    t.method("herwigAcollFSRSave", [](const Pythia8::MergingHooks* a) -> double { return a->herwigAcollFSRSave; });
    t.method("herwigAcollFSRSave", [](Pythia8::MergingHooks* a) -> double { return a->herwigAcollFSRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:28
    // signature to use in the veto list: Pythia8::MergingHooks::herwigAcollFSRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding herwigAcollFSRSave! methods to provide write access to the field herwigAcollFSRSave (" __HERE__ ")");
    t.method("herwigAcollFSRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.herwigAcollFSRSave = val; });

    DEBUG_MSG("Adding herwigAcollFSRSave! methods to provide write access to the field herwigAcollFSRSave (" __HERE__ ")");
    t.method("herwigAcollFSRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->herwigAcollFSRSave = val; });

    DEBUG_MSG("Adding herwigAcollISRSave methods  to provide read access to the field herwigAcollISRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:48
    // signature to use in the veto list: Pythia8::MergingHooks::herwigAcollISRSave
    t.method("herwigAcollISRSave", [](const Pythia8::MergingHooks& a) -> double { return a.herwigAcollISRSave; });
    t.method("herwigAcollISRSave", [](Pythia8::MergingHooks& a) -> double { return a.herwigAcollISRSave; });
    t.method("herwigAcollISRSave", [](const Pythia8::MergingHooks* a) -> double { return a->herwigAcollISRSave; });
    t.method("herwigAcollISRSave", [](Pythia8::MergingHooks* a) -> double { return a->herwigAcollISRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:526:48
    // signature to use in the veto list: Pythia8::MergingHooks::herwigAcollISRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding herwigAcollISRSave! methods to provide write access to the field herwigAcollISRSave (" __HERE__ ")");
    t.method("herwigAcollISRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.herwigAcollISRSave = val; });

    DEBUG_MSG("Adding herwigAcollISRSave! methods to provide write access to the field herwigAcollISRSave (" __HERE__ ")");
    t.method("herwigAcollISRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->herwigAcollISRSave = val; });

    DEBUG_MSG("Adding pT0ISRSave methods  to provide read access to the field pT0ISRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:10
    // signature to use in the veto list: Pythia8::MergingHooks::pT0ISRSave
    t.method("pT0ISRSave", [](const Pythia8::MergingHooks& a) -> double { return a.pT0ISRSave; });
    t.method("pT0ISRSave", [](Pythia8::MergingHooks& a) -> double { return a.pT0ISRSave; });
    t.method("pT0ISRSave", [](const Pythia8::MergingHooks* a) -> double { return a->pT0ISRSave; });
    t.method("pT0ISRSave", [](Pythia8::MergingHooks* a) -> double { return a->pT0ISRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:10
    // signature to use in the veto list: Pythia8::MergingHooks::pT0ISRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pT0ISRSave! methods to provide write access to the field pT0ISRSave (" __HERE__ ")");
    t.method("pT0ISRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.pT0ISRSave = val; });

    DEBUG_MSG("Adding pT0ISRSave! methods to provide write access to the field pT0ISRSave (" __HERE__ ")");
    t.method("pT0ISRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->pT0ISRSave = val; });

    DEBUG_MSG("Adding pTcutSave methods  to provide read access to the field pTcutSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:22
    // signature to use in the veto list: Pythia8::MergingHooks::pTcutSave
    t.method("pTcutSave", [](const Pythia8::MergingHooks& a) -> double { return a.pTcutSave; });
    t.method("pTcutSave", [](Pythia8::MergingHooks& a) -> double { return a.pTcutSave; });
    t.method("pTcutSave", [](const Pythia8::MergingHooks* a) -> double { return a->pTcutSave; });
    t.method("pTcutSave", [](Pythia8::MergingHooks* a) -> double { return a->pTcutSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:22
    // signature to use in the veto list: Pythia8::MergingHooks::pTcutSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pTcutSave! methods to provide write access to the field pTcutSave (" __HERE__ ")");
    t.method("pTcutSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.pTcutSave = val; });

    DEBUG_MSG("Adding pTcutSave! methods to provide write access to the field pTcutSave (" __HERE__ ")");
    t.method("pTcutSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->pTcutSave = val; });

    DEBUG_MSG("Adding pTminISRSave methods  to provide read access to the field pTminISRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:33
    // signature to use in the veto list: Pythia8::MergingHooks::pTminISRSave
    t.method("pTminISRSave", [](const Pythia8::MergingHooks& a) -> double { return a.pTminISRSave; });
    t.method("pTminISRSave", [](Pythia8::MergingHooks& a) -> double { return a.pTminISRSave; });
    t.method("pTminISRSave", [](const Pythia8::MergingHooks* a) -> double { return a->pTminISRSave; });
    t.method("pTminISRSave", [](Pythia8::MergingHooks* a) -> double { return a->pTminISRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:33
    // signature to use in the veto list: Pythia8::MergingHooks::pTminISRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pTminISRSave! methods to provide write access to the field pTminISRSave (" __HERE__ ")");
    t.method("pTminISRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.pTminISRSave = val; });

    DEBUG_MSG("Adding pTminISRSave! methods to provide write access to the field pTminISRSave (" __HERE__ ")");
    t.method("pTminISRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->pTminISRSave = val; });

    DEBUG_MSG("Adding pTminFSRSave methods  to provide read access to the field pTminFSRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:47
    // signature to use in the veto list: Pythia8::MergingHooks::pTminFSRSave
    t.method("pTminFSRSave", [](const Pythia8::MergingHooks& a) -> double { return a.pTminFSRSave; });
    t.method("pTminFSRSave", [](Pythia8::MergingHooks& a) -> double { return a.pTminFSRSave; });
    t.method("pTminFSRSave", [](const Pythia8::MergingHooks* a) -> double { return a->pTminFSRSave; });
    t.method("pTminFSRSave", [](Pythia8::MergingHooks* a) -> double { return a->pTminFSRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:527:47
    // signature to use in the veto list: Pythia8::MergingHooks::pTminFSRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pTminFSRSave! methods to provide write access to the field pTminFSRSave (" __HERE__ ")");
    t.method("pTminFSRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.pTminFSRSave = val; });

    DEBUG_MSG("Adding pTminFSRSave! methods to provide write access to the field pTminFSRSave (" __HERE__ ")");
    t.method("pTminFSRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->pTminFSRSave = val; });

    DEBUG_MSG("Adding doNL3TreeSave methods  to provide read access to the field doNL3TreeSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:10
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3TreeSave
    t.method("doNL3TreeSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doNL3TreeSave; });
    t.method("doNL3TreeSave", [](Pythia8::MergingHooks& a) -> bool { return a.doNL3TreeSave; });
    t.method("doNL3TreeSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doNL3TreeSave; });
    t.method("doNL3TreeSave", [](Pythia8::MergingHooks* a) -> bool { return a->doNL3TreeSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:10
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3TreeSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doNL3TreeSave! methods to provide write access to the field doNL3TreeSave (" __HERE__ ")");
    t.method("doNL3TreeSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doNL3TreeSave = val; });

    DEBUG_MSG("Adding doNL3TreeSave! methods to provide write access to the field doNL3TreeSave (" __HERE__ ")");
    t.method("doNL3TreeSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doNL3TreeSave = val; });

    DEBUG_MSG("Adding doNL3LoopSave methods  to provide read access to the field doNL3LoopSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:25
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3LoopSave
    t.method("doNL3LoopSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doNL3LoopSave; });
    t.method("doNL3LoopSave", [](Pythia8::MergingHooks& a) -> bool { return a.doNL3LoopSave; });
    t.method("doNL3LoopSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doNL3LoopSave; });
    t.method("doNL3LoopSave", [](Pythia8::MergingHooks* a) -> bool { return a->doNL3LoopSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:25
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3LoopSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doNL3LoopSave! methods to provide write access to the field doNL3LoopSave (" __HERE__ ")");
    t.method("doNL3LoopSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doNL3LoopSave = val; });

    DEBUG_MSG("Adding doNL3LoopSave! methods to provide write access to the field doNL3LoopSave (" __HERE__ ")");
    t.method("doNL3LoopSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doNL3LoopSave = val; });

    DEBUG_MSG("Adding doNL3SubtSave methods  to provide read access to the field doNL3SubtSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:40
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3SubtSave
    t.method("doNL3SubtSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doNL3SubtSave; });
    t.method("doNL3SubtSave", [](Pythia8::MergingHooks& a) -> bool { return a.doNL3SubtSave; });
    t.method("doNL3SubtSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doNL3SubtSave; });
    t.method("doNL3SubtSave", [](Pythia8::MergingHooks* a) -> bool { return a->doNL3SubtSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:528:40
    // signature to use in the veto list: Pythia8::MergingHooks::doNL3SubtSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doNL3SubtSave! methods to provide write access to the field doNL3SubtSave (" __HERE__ ")");
    t.method("doNL3SubtSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doNL3SubtSave = val; });

    DEBUG_MSG("Adding doNL3SubtSave! methods to provide write access to the field doNL3SubtSave (" __HERE__ ")");
    t.method("doNL3SubtSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doNL3SubtSave = val; });

    DEBUG_MSG("Adding doUNLOPSTreeSave methods  to provide read access to the field doUNLOPSTreeSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSTreeSave
    t.method("doUNLOPSTreeSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSTreeSave; });
    t.method("doUNLOPSTreeSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSTreeSave; });
    t.method("doUNLOPSTreeSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSTreeSave; });
    t.method("doUNLOPSTreeSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSTreeSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSTreeSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUNLOPSTreeSave! methods to provide write access to the field doUNLOPSTreeSave (" __HERE__ ")");
    t.method("doUNLOPSTreeSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUNLOPSTreeSave = val; });

    DEBUG_MSG("Adding doUNLOPSTreeSave! methods to provide write access to the field doUNLOPSTreeSave (" __HERE__ ")");
    t.method("doUNLOPSTreeSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUNLOPSTreeSave = val; });

    DEBUG_MSG("Adding doUNLOPSLoopSave methods  to provide read access to the field doUNLOPSLoopSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:28
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSLoopSave
    t.method("doUNLOPSLoopSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSLoopSave; });
    t.method("doUNLOPSLoopSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSLoopSave; });
    t.method("doUNLOPSLoopSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSLoopSave; });
    t.method("doUNLOPSLoopSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSLoopSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:28
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSLoopSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUNLOPSLoopSave! methods to provide write access to the field doUNLOPSLoopSave (" __HERE__ ")");
    t.method("doUNLOPSLoopSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUNLOPSLoopSave = val; });

    DEBUG_MSG("Adding doUNLOPSLoopSave! methods to provide write access to the field doUNLOPSLoopSave (" __HERE__ ")");
    t.method("doUNLOPSLoopSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUNLOPSLoopSave = val; });

    DEBUG_MSG("Adding doUNLOPSSubtSave methods  to provide read access to the field doUNLOPSSubtSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:46
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSSubtSave
    t.method("doUNLOPSSubtSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSSubtSave; });
    t.method("doUNLOPSSubtSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSSubtSave; });
    t.method("doUNLOPSSubtSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSSubtSave; });
    t.method("doUNLOPSSubtSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSSubtSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:529:46
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSSubtSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUNLOPSSubtSave! methods to provide write access to the field doUNLOPSSubtSave (" __HERE__ ")");
    t.method("doUNLOPSSubtSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUNLOPSSubtSave = val; });

    DEBUG_MSG("Adding doUNLOPSSubtSave! methods to provide write access to the field doUNLOPSSubtSave (" __HERE__ ")");
    t.method("doUNLOPSSubtSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUNLOPSSubtSave = val; });

    DEBUG_MSG("Adding doUNLOPSSubtNLOSave methods  to provide read access to the field doUNLOPSSubtNLOSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:530:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSSubtNLOSave
    t.method("doUNLOPSSubtNLOSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSSubtNLOSave; });
    t.method("doUNLOPSSubtNLOSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUNLOPSSubtNLOSave; });
    t.method("doUNLOPSSubtNLOSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSSubtNLOSave; });
    t.method("doUNLOPSSubtNLOSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUNLOPSSubtNLOSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:530:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUNLOPSSubtNLOSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUNLOPSSubtNLOSave! methods to provide write access to the field doUNLOPSSubtNLOSave (" __HERE__ ")");
    t.method("doUNLOPSSubtNLOSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUNLOPSSubtNLOSave = val; });

    DEBUG_MSG("Adding doUNLOPSSubtNLOSave! methods to provide write access to the field doUNLOPSSubtNLOSave (" __HERE__ ")");
    t.method("doUNLOPSSubtNLOSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUNLOPSSubtNLOSave = val; });

    DEBUG_MSG("Adding doUMEPSTreeSave methods  to provide read access to the field doUMEPSTreeSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:531:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUMEPSTreeSave
    t.method("doUMEPSTreeSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUMEPSTreeSave; });
    t.method("doUMEPSTreeSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUMEPSTreeSave; });
    t.method("doUMEPSTreeSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUMEPSTreeSave; });
    t.method("doUMEPSTreeSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUMEPSTreeSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:531:10
    // signature to use in the veto list: Pythia8::MergingHooks::doUMEPSTreeSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUMEPSTreeSave! methods to provide write access to the field doUMEPSTreeSave (" __HERE__ ")");
    t.method("doUMEPSTreeSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUMEPSTreeSave = val; });

    DEBUG_MSG("Adding doUMEPSTreeSave! methods to provide write access to the field doUMEPSTreeSave (" __HERE__ ")");
    t.method("doUMEPSTreeSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUMEPSTreeSave = val; });

    DEBUG_MSG("Adding doUMEPSSubtSave methods  to provide read access to the field doUMEPSSubtSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:531:27
    // signature to use in the veto list: Pythia8::MergingHooks::doUMEPSSubtSave
    t.method("doUMEPSSubtSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doUMEPSSubtSave; });
    t.method("doUMEPSSubtSave", [](Pythia8::MergingHooks& a) -> bool { return a.doUMEPSSubtSave; });
    t.method("doUMEPSSubtSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doUMEPSSubtSave; });
    t.method("doUMEPSSubtSave", [](Pythia8::MergingHooks* a) -> bool { return a->doUMEPSSubtSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:531:27
    // signature to use in the veto list: Pythia8::MergingHooks::doUMEPSSubtSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doUMEPSSubtSave! methods to provide write access to the field doUMEPSSubtSave (" __HERE__ ")");
    t.method("doUMEPSSubtSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doUMEPSSubtSave = val; });

    DEBUG_MSG("Adding doUMEPSSubtSave! methods to provide write access to the field doUMEPSSubtSave (" __HERE__ ")");
    t.method("doUMEPSSubtSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doUMEPSSubtSave = val; });

    DEBUG_MSG("Adding doEstimateXSection methods  to provide read access to the field doEstimateXSection (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:534:10
    // signature to use in the veto list: Pythia8::MergingHooks::doEstimateXSection
    t.method("doEstimateXSection", [](const Pythia8::MergingHooks& a) -> bool { return a.doEstimateXSection; });
    t.method("doEstimateXSection", [](Pythia8::MergingHooks& a) -> bool { return a.doEstimateXSection; });
    t.method("doEstimateXSection", [](const Pythia8::MergingHooks* a) -> bool { return a->doEstimateXSection; });
    t.method("doEstimateXSection", [](Pythia8::MergingHooks* a) -> bool { return a->doEstimateXSection; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:534:10
    // signature to use in the veto list: Pythia8::MergingHooks::doEstimateXSection
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doEstimateXSection! methods to provide write access to the field doEstimateXSection (" __HERE__ ")");
    t.method("doEstimateXSection!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doEstimateXSection = val; });

    DEBUG_MSG("Adding doEstimateXSection! methods to provide write access to the field doEstimateXSection (" __HERE__ ")");
    t.method("doEstimateXSection!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doEstimateXSection = val; });

    DEBUG_MSG("Adding doRuntimeAMCATNLOInterfaceSave methods  to provide read access to the field doRuntimeAMCATNLOInterfaceSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:537:10
    // signature to use in the veto list: Pythia8::MergingHooks::doRuntimeAMCATNLOInterfaceSave
    t.method("doRuntimeAMCATNLOInterfaceSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doRuntimeAMCATNLOInterfaceSave; });
    t.method("doRuntimeAMCATNLOInterfaceSave", [](Pythia8::MergingHooks& a) -> bool { return a.doRuntimeAMCATNLOInterfaceSave; });
    t.method("doRuntimeAMCATNLOInterfaceSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doRuntimeAMCATNLOInterfaceSave; });
    t.method("doRuntimeAMCATNLOInterfaceSave", [](Pythia8::MergingHooks* a) -> bool { return a->doRuntimeAMCATNLOInterfaceSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:537:10
    // signature to use in the veto list: Pythia8::MergingHooks::doRuntimeAMCATNLOInterfaceSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doRuntimeAMCATNLOInterfaceSave! methods to provide write access to the field doRuntimeAMCATNLOInterfaceSave (" __HERE__ ")");
    t.method("doRuntimeAMCATNLOInterfaceSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doRuntimeAMCATNLOInterfaceSave = val; });

    DEBUG_MSG("Adding doRuntimeAMCATNLOInterfaceSave! methods to provide write access to the field doRuntimeAMCATNLOInterfaceSave (" __HERE__ ")");
    t.method("doRuntimeAMCATNLOInterfaceSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doRuntimeAMCATNLOInterfaceSave = val; });

    DEBUG_MSG("Adding applyVeto methods  to provide read access to the field applyVeto (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:542:10
    // signature to use in the veto list: Pythia8::MergingHooks::applyVeto
    t.method("applyVeto", [](const Pythia8::MergingHooks& a) -> bool { return a.applyVeto; });
    t.method("applyVeto", [](Pythia8::MergingHooks& a) -> bool { return a.applyVeto; });
    t.method("applyVeto", [](const Pythia8::MergingHooks* a) -> bool { return a->applyVeto; });
    t.method("applyVeto", [](Pythia8::MergingHooks* a) -> bool { return a->applyVeto; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:542:10
    // signature to use in the veto list: Pythia8::MergingHooks::applyVeto
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding applyVeto! methods to provide write access to the field applyVeto (" __HERE__ ")");
    t.method("applyVeto!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.applyVeto = val; });

    DEBUG_MSG("Adding applyVeto! methods to provide write access to the field applyVeto (" __HERE__ ")");
    t.method("applyVeto!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->applyVeto = val; });

    DEBUG_MSG("Adding inputEvent methods  to provide read access to the field inputEvent (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:545:9
    // signature to use in the veto list: Pythia8::MergingHooks::inputEvent
    t.method("inputEvent", [](const Pythia8::MergingHooks& a) -> const Pythia8::Event& { return a.inputEvent; });
    t.method("inputEvent", [](Pythia8::MergingHooks& a) -> Pythia8::Event& { return a.inputEvent; });
    t.method("inputEvent", [](const Pythia8::MergingHooks* a) -> const Pythia8::Event& { return a->inputEvent; });
    t.method("inputEvent", [](Pythia8::MergingHooks* a) -> Pythia8::Event& { return a->inputEvent; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:545:9
    // signature to use in the veto list: Pythia8::MergingHooks::inputEvent
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding inputEvent! methods to provide write access to the field inputEvent (" __HERE__ ")");
    t.method("inputEvent!", [](Pythia8::MergingHooks& a, const Pythia8::Event& val) -> Pythia8::Event& { return a.inputEvent = val; });

    DEBUG_MSG("Adding inputEvent! methods to provide write access to the field inputEvent (" __HERE__ ")");
    t.method("inputEvent!", [](Pythia8::MergingHooks* a, const Pythia8::Event& val) -> Pythia8::Event& { return a->inputEvent = val; });

    DEBUG_MSG("Adding doRemoveDecayProducts methods  to provide read access to the field doRemoveDecayProducts (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:547:8
    // signature to use in the veto list: Pythia8::MergingHooks::doRemoveDecayProducts
    t.method("doRemoveDecayProducts", [](const Pythia8::MergingHooks& a) -> bool { return a.doRemoveDecayProducts; });
    t.method("doRemoveDecayProducts", [](Pythia8::MergingHooks& a) -> bool { return a.doRemoveDecayProducts; });
    t.method("doRemoveDecayProducts", [](const Pythia8::MergingHooks* a) -> bool { return a->doRemoveDecayProducts; });
    t.method("doRemoveDecayProducts", [](Pythia8::MergingHooks* a) -> bool { return a->doRemoveDecayProducts; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:547:8
    // signature to use in the veto list: Pythia8::MergingHooks::doRemoveDecayProducts
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doRemoveDecayProducts! methods to provide write access to the field doRemoveDecayProducts (" __HERE__ ")");
    t.method("doRemoveDecayProducts!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doRemoveDecayProducts = val; });

    DEBUG_MSG("Adding doRemoveDecayProducts! methods to provide write access to the field doRemoveDecayProducts (" __HERE__ ")");
    t.method("doRemoveDecayProducts!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doRemoveDecayProducts = val; });

    DEBUG_MSG("Adding muMISave methods  to provide read access to the field muMISave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:550:10
    // signature to use in the veto list: Pythia8::MergingHooks::muMISave
    t.method("muMISave", [](const Pythia8::MergingHooks& a) -> double { return a.muMISave; });
    t.method("muMISave", [](Pythia8::MergingHooks& a) -> double { return a.muMISave; });
    t.method("muMISave", [](const Pythia8::MergingHooks* a) -> double { return a->muMISave; });
    t.method("muMISave", [](Pythia8::MergingHooks* a) -> double { return a->muMISave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:550:10
    // signature to use in the veto list: Pythia8::MergingHooks::muMISave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muMISave! methods to provide write access to the field muMISave (" __HERE__ ")");
    t.method("muMISave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.muMISave = val; });

    DEBUG_MSG("Adding muMISave! methods to provide write access to the field muMISave (" __HERE__ ")");
    t.method("muMISave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->muMISave = val; });

    DEBUG_MSG("Adding kFactor0jSave methods  to provide read access to the field kFactor0jSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:553:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor0jSave
    t.method("kFactor0jSave", [](const Pythia8::MergingHooks& a) -> double { return a.kFactor0jSave; });
    t.method("kFactor0jSave", [](Pythia8::MergingHooks& a) -> double { return a.kFactor0jSave; });
    t.method("kFactor0jSave", [](const Pythia8::MergingHooks* a) -> double { return a->kFactor0jSave; });
    t.method("kFactor0jSave", [](Pythia8::MergingHooks* a) -> double { return a->kFactor0jSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:553:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor0jSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding kFactor0jSave! methods to provide write access to the field kFactor0jSave (" __HERE__ ")");
    t.method("kFactor0jSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.kFactor0jSave = val; });

    DEBUG_MSG("Adding kFactor0jSave! methods to provide write access to the field kFactor0jSave (" __HERE__ ")");
    t.method("kFactor0jSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->kFactor0jSave = val; });

    DEBUG_MSG("Adding kFactor1jSave methods  to provide read access to the field kFactor1jSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:554:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor1jSave
    t.method("kFactor1jSave", [](const Pythia8::MergingHooks& a) -> double { return a.kFactor1jSave; });
    t.method("kFactor1jSave", [](Pythia8::MergingHooks& a) -> double { return a.kFactor1jSave; });
    t.method("kFactor1jSave", [](const Pythia8::MergingHooks* a) -> double { return a->kFactor1jSave; });
    t.method("kFactor1jSave", [](Pythia8::MergingHooks* a) -> double { return a->kFactor1jSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:554:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor1jSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding kFactor1jSave! methods to provide write access to the field kFactor1jSave (" __HERE__ ")");
    t.method("kFactor1jSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.kFactor1jSave = val; });

    DEBUG_MSG("Adding kFactor1jSave! methods to provide write access to the field kFactor1jSave (" __HERE__ ")");
    t.method("kFactor1jSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->kFactor1jSave = val; });

    DEBUG_MSG("Adding kFactor2jSave methods  to provide read access to the field kFactor2jSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:555:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor2jSave
    t.method("kFactor2jSave", [](const Pythia8::MergingHooks& a) -> double { return a.kFactor2jSave; });
    t.method("kFactor2jSave", [](Pythia8::MergingHooks& a) -> double { return a.kFactor2jSave; });
    t.method("kFactor2jSave", [](const Pythia8::MergingHooks* a) -> double { return a->kFactor2jSave; });
    t.method("kFactor2jSave", [](Pythia8::MergingHooks* a) -> double { return a->kFactor2jSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:555:10
    // signature to use in the veto list: Pythia8::MergingHooks::kFactor2jSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding kFactor2jSave! methods to provide write access to the field kFactor2jSave (" __HERE__ ")");
    t.method("kFactor2jSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.kFactor2jSave = val; });

    DEBUG_MSG("Adding kFactor2jSave! methods to provide write access to the field kFactor2jSave (" __HERE__ ")");
    t.method("kFactor2jSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->kFactor2jSave = val; });

    DEBUG_MSG("Adding tmsValueSave methods  to provide read access to the field tmsValueSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:10
    // signature to use in the veto list: Pythia8::MergingHooks::tmsValueSave
    t.method("tmsValueSave", [](const Pythia8::MergingHooks& a) -> double { return a.tmsValueSave; });
    t.method("tmsValueSave", [](Pythia8::MergingHooks& a) -> double { return a.tmsValueSave; });
    t.method("tmsValueSave", [](const Pythia8::MergingHooks* a) -> double { return a->tmsValueSave; });
    t.method("tmsValueSave", [](Pythia8::MergingHooks* a) -> double { return a->tmsValueSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:10
    // signature to use in the veto list: Pythia8::MergingHooks::tmsValueSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding tmsValueSave! methods to provide write access to the field tmsValueSave (" __HERE__ ")");
    t.method("tmsValueSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.tmsValueSave = val; });

    DEBUG_MSG("Adding tmsValueSave! methods to provide write access to the field tmsValueSave (" __HERE__ ")");
    t.method("tmsValueSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->tmsValueSave = val; });

    DEBUG_MSG("Adding tmsValueNow methods  to provide read access to the field tmsValueNow (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:24
    // signature to use in the veto list: Pythia8::MergingHooks::tmsValueNow
    t.method("tmsValueNow", [](const Pythia8::MergingHooks& a) -> double { return a.tmsValueNow; });
    t.method("tmsValueNow", [](Pythia8::MergingHooks& a) -> double { return a.tmsValueNow; });
    t.method("tmsValueNow", [](const Pythia8::MergingHooks* a) -> double { return a->tmsValueNow; });
    t.method("tmsValueNow", [](Pythia8::MergingHooks* a) -> double { return a->tmsValueNow; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:24
    // signature to use in the veto list: Pythia8::MergingHooks::tmsValueNow
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding tmsValueNow! methods to provide write access to the field tmsValueNow (" __HERE__ ")");
    t.method("tmsValueNow!", [](Pythia8::MergingHooks& a, double val) -> double { return a.tmsValueNow = val; });

    DEBUG_MSG("Adding tmsValueNow! methods to provide write access to the field tmsValueNow (" __HERE__ ")");
    t.method("tmsValueNow!", [](Pythia8::MergingHooks* a, double val) -> double { return a->tmsValueNow = val; });

    DEBUG_MSG("Adding DparameterSave methods  to provide read access to the field DparameterSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:37
    // signature to use in the veto list: Pythia8::MergingHooks::DparameterSave
    t.method("DparameterSave", [](const Pythia8::MergingHooks& a) -> double { return a.DparameterSave; });
    t.method("DparameterSave", [](Pythia8::MergingHooks& a) -> double { return a.DparameterSave; });
    t.method("DparameterSave", [](const Pythia8::MergingHooks* a) -> double { return a->DparameterSave; });
    t.method("DparameterSave", [](Pythia8::MergingHooks* a) -> double { return a->DparameterSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:558:37
    // signature to use in the veto list: Pythia8::MergingHooks::DparameterSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding DparameterSave! methods to provide write access to the field DparameterSave (" __HERE__ ")");
    t.method("DparameterSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.DparameterSave = val; });

    DEBUG_MSG("Adding DparameterSave! methods to provide write access to the field DparameterSave (" __HERE__ ")");
    t.method("DparameterSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->DparameterSave = val; });

    DEBUG_MSG("Adding nJetMaxSave methods  to provide read access to the field nJetMaxSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:559:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxSave
    t.method("nJetMaxSave", [](const Pythia8::MergingHooks& a) -> int { return a.nJetMaxSave; });
    t.method("nJetMaxSave", [](Pythia8::MergingHooks& a) -> int { return a.nJetMaxSave; });
    t.method("nJetMaxSave", [](const Pythia8::MergingHooks* a) -> int { return a->nJetMaxSave; });
    t.method("nJetMaxSave", [](Pythia8::MergingHooks* a) -> int { return a->nJetMaxSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:559:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nJetMaxSave! methods to provide write access to the field nJetMaxSave (" __HERE__ ")");
    t.method("nJetMaxSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nJetMaxSave = val; });

    DEBUG_MSG("Adding nJetMaxSave! methods to provide write access to the field nJetMaxSave (" __HERE__ ")");
    t.method("nJetMaxSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nJetMaxSave = val; });

    DEBUG_MSG("Adding nJetMaxNLOSave methods  to provide read access to the field nJetMaxNLOSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:560:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxNLOSave
    t.method("nJetMaxNLOSave", [](const Pythia8::MergingHooks& a) -> int { return a.nJetMaxNLOSave; });
    t.method("nJetMaxNLOSave", [](Pythia8::MergingHooks& a) -> int { return a.nJetMaxNLOSave; });
    t.method("nJetMaxNLOSave", [](const Pythia8::MergingHooks* a) -> int { return a->nJetMaxNLOSave; });
    t.method("nJetMaxNLOSave", [](Pythia8::MergingHooks* a) -> int { return a->nJetMaxNLOSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:560:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxNLOSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nJetMaxNLOSave! methods to provide write access to the field nJetMaxNLOSave (" __HERE__ ")");
    t.method("nJetMaxNLOSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nJetMaxNLOSave = val; });

    DEBUG_MSG("Adding nJetMaxNLOSave! methods to provide write access to the field nJetMaxNLOSave (" __HERE__ ")");
    t.method("nJetMaxNLOSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nJetMaxNLOSave = val; });

    DEBUG_MSG("Adding processSave methods  to provide read access to the field processSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:562:10
    // signature to use in the veto list: Pythia8::MergingHooks::processSave
    t.method("processSave", [](const Pythia8::MergingHooks& a) -> const std::string& { return a.processSave; });
    t.method("processSave", [](Pythia8::MergingHooks& a) -> std::string& { return a.processSave; });
    t.method("processSave", [](const Pythia8::MergingHooks* a) -> const std::string& { return a->processSave; });
    t.method("processSave", [](Pythia8::MergingHooks* a) -> std::string& { return a->processSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:562:10
    // signature to use in the veto list: Pythia8::MergingHooks::processSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding processSave! methods to provide write access to the field processSave (" __HERE__ ")");
    t.method("processSave!", [](Pythia8::MergingHooks& a, const std::string& val) -> std::string& { return a.processSave = val; });

    DEBUG_MSG("Adding processSave! methods to provide write access to the field processSave (" __HERE__ ")");
    t.method("processSave!", [](Pythia8::MergingHooks* a, const std::string& val) -> std::string& { return a->processSave = val; });

    DEBUG_MSG("Adding processNow methods  to provide read access to the field processNow (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:562:23
    // signature to use in the veto list: Pythia8::MergingHooks::processNow
    t.method("processNow", [](const Pythia8::MergingHooks& a) -> const std::string& { return a.processNow; });
    t.method("processNow", [](Pythia8::MergingHooks& a) -> std::string& { return a.processNow; });
    t.method("processNow", [](const Pythia8::MergingHooks* a) -> const std::string& { return a->processNow; });
    t.method("processNow", [](Pythia8::MergingHooks* a) -> std::string& { return a->processNow; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:562:23
    // signature to use in the veto list: Pythia8::MergingHooks::processNow
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding processNow! methods to provide write access to the field processNow (" __HERE__ ")");
    t.method("processNow!", [](Pythia8::MergingHooks& a, const std::string& val) -> std::string& { return a.processNow = val; });

    DEBUG_MSG("Adding processNow! methods to provide write access to the field processNow (" __HERE__ ")");
    t.method("processNow!", [](Pythia8::MergingHooks* a, const std::string& val) -> std::string& { return a->processNow = val; });

    DEBUG_MSG("Adding tmsListSave methods  to provide read access to the field tmsListSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:568:18
    // signature to use in the veto list: Pythia8::MergingHooks::tmsListSave
    t.method("tmsListSave", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.tmsListSave; });
    t.method("tmsListSave", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.tmsListSave; });
    t.method("tmsListSave", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->tmsListSave; });
    t.method("tmsListSave", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->tmsListSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:568:18
    // signature to use in the veto list: Pythia8::MergingHooks::tmsListSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding tmsListSave! methods to provide write access to the field tmsListSave (" __HERE__ ")");
    t.method("tmsListSave!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.tmsListSave = val; });

    DEBUG_MSG("Adding tmsListSave! methods to provide write access to the field tmsListSave (" __HERE__ ")");
    t.method("tmsListSave!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->tmsListSave = val; });

    DEBUG_MSG("Adding doOrderHistoriesSave methods  to provide read access to the field doOrderHistoriesSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:572:8
    // signature to use in the veto list: Pythia8::MergingHooks::doOrderHistoriesSave
    t.method("doOrderHistoriesSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doOrderHistoriesSave; });
    t.method("doOrderHistoriesSave", [](Pythia8::MergingHooks& a) -> bool { return a.doOrderHistoriesSave; });
    t.method("doOrderHistoriesSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doOrderHistoriesSave; });
    t.method("doOrderHistoriesSave", [](Pythia8::MergingHooks* a) -> bool { return a->doOrderHistoriesSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:572:8
    // signature to use in the veto list: Pythia8::MergingHooks::doOrderHistoriesSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doOrderHistoriesSave! methods to provide write access to the field doOrderHistoriesSave (" __HERE__ ")");
    t.method("doOrderHistoriesSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doOrderHistoriesSave = val; });

    DEBUG_MSG("Adding doOrderHistoriesSave! methods to provide write access to the field doOrderHistoriesSave (" __HERE__ ")");
    t.method("doOrderHistoriesSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doOrderHistoriesSave = val; });

    DEBUG_MSG("Adding doCutOnRecStateSave methods  to provide read access to the field doCutOnRecStateSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:577:8
    // signature to use in the veto list: Pythia8::MergingHooks::doCutOnRecStateSave
    t.method("doCutOnRecStateSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doCutOnRecStateSave; });
    t.method("doCutOnRecStateSave", [](Pythia8::MergingHooks& a) -> bool { return a.doCutOnRecStateSave; });
    t.method("doCutOnRecStateSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doCutOnRecStateSave; });
    t.method("doCutOnRecStateSave", [](Pythia8::MergingHooks* a) -> bool { return a->doCutOnRecStateSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:577:8
    // signature to use in the veto list: Pythia8::MergingHooks::doCutOnRecStateSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doCutOnRecStateSave! methods to provide write access to the field doCutOnRecStateSave (" __HERE__ ")");
    t.method("doCutOnRecStateSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doCutOnRecStateSave = val; });

    DEBUG_MSG("Adding doCutOnRecStateSave! methods to provide write access to the field doCutOnRecStateSave (" __HERE__ ")");
    t.method("doCutOnRecStateSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doCutOnRecStateSave = val; });

    DEBUG_MSG("Adding doWeakClusteringSave methods  to provide read access to the field doWeakClusteringSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:580:8
    // signature to use in the veto list: Pythia8::MergingHooks::doWeakClusteringSave
    t.method("doWeakClusteringSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doWeakClusteringSave; });
    t.method("doWeakClusteringSave", [](Pythia8::MergingHooks& a) -> bool { return a.doWeakClusteringSave; });
    t.method("doWeakClusteringSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doWeakClusteringSave; });
    t.method("doWeakClusteringSave", [](Pythia8::MergingHooks* a) -> bool { return a->doWeakClusteringSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:580:8
    // signature to use in the veto list: Pythia8::MergingHooks::doWeakClusteringSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doWeakClusteringSave! methods to provide write access to the field doWeakClusteringSave (" __HERE__ ")");
    t.method("doWeakClusteringSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doWeakClusteringSave = val; });

    DEBUG_MSG("Adding doWeakClusteringSave! methods to provide write access to the field doWeakClusteringSave (" __HERE__ ")");
    t.method("doWeakClusteringSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doWeakClusteringSave = val; });

    DEBUG_MSG("Adding doSQCDClusteringSave methods  to provide read access to the field doSQCDClusteringSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:580:30
    // signature to use in the veto list: Pythia8::MergingHooks::doSQCDClusteringSave
    t.method("doSQCDClusteringSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doSQCDClusteringSave; });
    t.method("doSQCDClusteringSave", [](Pythia8::MergingHooks& a) -> bool { return a.doSQCDClusteringSave; });
    t.method("doSQCDClusteringSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doSQCDClusteringSave; });
    t.method("doSQCDClusteringSave", [](Pythia8::MergingHooks* a) -> bool { return a->doSQCDClusteringSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:580:30
    // signature to use in the veto list: Pythia8::MergingHooks::doSQCDClusteringSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doSQCDClusteringSave! methods to provide write access to the field doSQCDClusteringSave (" __HERE__ ")");
    t.method("doSQCDClusteringSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doSQCDClusteringSave = val; });

    DEBUG_MSG("Adding doSQCDClusteringSave! methods to provide write access to the field doSQCDClusteringSave (" __HERE__ ")");
    t.method("doSQCDClusteringSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doSQCDClusteringSave = val; });

    DEBUG_MSG("Adding muFSave methods  to provide read access to the field muFSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:583:10
    // signature to use in the veto list: Pythia8::MergingHooks::muFSave
    t.method("muFSave", [](const Pythia8::MergingHooks& a) -> double { return a.muFSave; });
    t.method("muFSave", [](Pythia8::MergingHooks& a) -> double { return a.muFSave; });
    t.method("muFSave", [](const Pythia8::MergingHooks* a) -> double { return a->muFSave; });
    t.method("muFSave", [](Pythia8::MergingHooks* a) -> double { return a->muFSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:583:10
    // signature to use in the veto list: Pythia8::MergingHooks::muFSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muFSave! methods to provide write access to the field muFSave (" __HERE__ ")");
    t.method("muFSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.muFSave = val; });

    DEBUG_MSG("Adding muFSave! methods to provide write access to the field muFSave (" __HERE__ ")");
    t.method("muFSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->muFSave = val; });

    DEBUG_MSG("Adding muRSave methods  to provide read access to the field muRSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:584:10
    // signature to use in the veto list: Pythia8::MergingHooks::muRSave
    t.method("muRSave", [](const Pythia8::MergingHooks& a) -> double { return a.muRSave; });
    t.method("muRSave", [](Pythia8::MergingHooks& a) -> double { return a.muRSave; });
    t.method("muRSave", [](const Pythia8::MergingHooks* a) -> double { return a->muRSave; });
    t.method("muRSave", [](Pythia8::MergingHooks* a) -> double { return a->muRSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:584:10
    // signature to use in the veto list: Pythia8::MergingHooks::muRSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muRSave! methods to provide write access to the field muRSave (" __HERE__ ")");
    t.method("muRSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.muRSave = val; });

    DEBUG_MSG("Adding muRSave! methods to provide write access to the field muRSave (" __HERE__ ")");
    t.method("muRSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->muRSave = val; });

    DEBUG_MSG("Adding muFinMESave methods  to provide read access to the field muFinMESave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:587:10
    // signature to use in the veto list: Pythia8::MergingHooks::muFinMESave
    t.method("muFinMESave", [](const Pythia8::MergingHooks& a) -> double { return a.muFinMESave; });
    t.method("muFinMESave", [](Pythia8::MergingHooks& a) -> double { return a.muFinMESave; });
    t.method("muFinMESave", [](const Pythia8::MergingHooks* a) -> double { return a->muFinMESave; });
    t.method("muFinMESave", [](Pythia8::MergingHooks* a) -> double { return a->muFinMESave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:587:10
    // signature to use in the veto list: Pythia8::MergingHooks::muFinMESave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muFinMESave! methods to provide write access to the field muFinMESave (" __HERE__ ")");
    t.method("muFinMESave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.muFinMESave = val; });

    DEBUG_MSG("Adding muFinMESave! methods to provide write access to the field muFinMESave (" __HERE__ ")");
    t.method("muFinMESave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->muFinMESave = val; });

    DEBUG_MSG("Adding muRinMESave methods  to provide read access to the field muRinMESave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:588:10
    // signature to use in the veto list: Pythia8::MergingHooks::muRinMESave
    t.method("muRinMESave", [](const Pythia8::MergingHooks& a) -> double { return a.muRinMESave; });
    t.method("muRinMESave", [](Pythia8::MergingHooks& a) -> double { return a.muRinMESave; });
    t.method("muRinMESave", [](const Pythia8::MergingHooks* a) -> double { return a->muRinMESave; });
    t.method("muRinMESave", [](Pythia8::MergingHooks* a) -> double { return a->muRinMESave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:588:10
    // signature to use in the veto list: Pythia8::MergingHooks::muRinMESave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muRinMESave! methods to provide write access to the field muRinMESave (" __HERE__ ")");
    t.method("muRinMESave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.muRinMESave = val; });

    DEBUG_MSG("Adding muRinMESave! methods to provide write access to the field muRinMESave (" __HERE__ ")");
    t.method("muRinMESave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->muRinMESave = val; });

    DEBUG_MSG("Adding doIgnoreEmissionsSave methods  to provide read access to the field doIgnoreEmissionsSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:591:8
    // signature to use in the veto list: Pythia8::MergingHooks::doIgnoreEmissionsSave
    t.method("doIgnoreEmissionsSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doIgnoreEmissionsSave; });
    t.method("doIgnoreEmissionsSave", [](Pythia8::MergingHooks& a) -> bool { return a.doIgnoreEmissionsSave; });
    t.method("doIgnoreEmissionsSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doIgnoreEmissionsSave; });
    t.method("doIgnoreEmissionsSave", [](Pythia8::MergingHooks* a) -> bool { return a->doIgnoreEmissionsSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:591:8
    // signature to use in the veto list: Pythia8::MergingHooks::doIgnoreEmissionsSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doIgnoreEmissionsSave! methods to provide write access to the field doIgnoreEmissionsSave (" __HERE__ ")");
    t.method("doIgnoreEmissionsSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doIgnoreEmissionsSave = val; });

    DEBUG_MSG("Adding doIgnoreEmissionsSave! methods to provide write access to the field doIgnoreEmissionsSave (" __HERE__ ")");
    t.method("doIgnoreEmissionsSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doIgnoreEmissionsSave = val; });

    DEBUG_MSG("Adding doIgnoreStepSave methods  to provide read access to the field doIgnoreStepSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:593:8
    // signature to use in the veto list: Pythia8::MergingHooks::doIgnoreStepSave
    t.method("doIgnoreStepSave", [](const Pythia8::MergingHooks& a) -> bool { return a.doIgnoreStepSave; });
    t.method("doIgnoreStepSave", [](Pythia8::MergingHooks& a) -> bool { return a.doIgnoreStepSave; });
    t.method("doIgnoreStepSave", [](const Pythia8::MergingHooks* a) -> bool { return a->doIgnoreStepSave; });
    t.method("doIgnoreStepSave", [](Pythia8::MergingHooks* a) -> bool { return a->doIgnoreStepSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:593:8
    // signature to use in the veto list: Pythia8::MergingHooks::doIgnoreStepSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doIgnoreStepSave! methods to provide write access to the field doIgnoreStepSave (" __HERE__ ")");
    t.method("doIgnoreStepSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doIgnoreStepSave = val; });

    DEBUG_MSG("Adding doIgnoreStepSave! methods to provide write access to the field doIgnoreStepSave (" __HERE__ ")");
    t.method("doIgnoreStepSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doIgnoreStepSave = val; });

    DEBUG_MSG("Adding pTsave methods  to provide read access to the field pTsave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:595:10
    // signature to use in the veto list: Pythia8::MergingHooks::pTsave
    t.method("pTsave", [](const Pythia8::MergingHooks& a) -> double { return a.pTsave; });
    t.method("pTsave", [](Pythia8::MergingHooks& a) -> double { return a.pTsave; });
    t.method("pTsave", [](const Pythia8::MergingHooks* a) -> double { return a->pTsave; });
    t.method("pTsave", [](Pythia8::MergingHooks* a) -> double { return a->pTsave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:595:10
    // signature to use in the veto list: Pythia8::MergingHooks::pTsave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding pTsave! methods to provide write access to the field pTsave (" __HERE__ ")");
    t.method("pTsave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.pTsave = val; });

    DEBUG_MSG("Adding pTsave! methods to provide write access to the field pTsave (" __HERE__ ")");
    t.method("pTsave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->pTsave = val; });

    DEBUG_MSG("Adding weightCKKWL1Save methods  to provide read access to the field weightCKKWL1Save (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:596:18
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWL1Save
    t.method("weightCKKWL1Save", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.weightCKKWL1Save; });
    t.method("weightCKKWL1Save", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.weightCKKWL1Save; });
    t.method("weightCKKWL1Save", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->weightCKKWL1Save; });
    t.method("weightCKKWL1Save", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->weightCKKWL1Save; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:596:18
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWL1Save
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding weightCKKWL1Save! methods to provide write access to the field weightCKKWL1Save (" __HERE__ ")");
    t.method("weightCKKWL1Save!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.weightCKKWL1Save = val; });

    DEBUG_MSG("Adding weightCKKWL1Save! methods to provide write access to the field weightCKKWL1Save (" __HERE__ ")");
    t.method("weightCKKWL1Save!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->weightCKKWL1Save = val; });

    DEBUG_MSG("Adding weightCKKWL2Save methods  to provide read access to the field weightCKKWL2Save (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:596:36
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWL2Save
    t.method("weightCKKWL2Save", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.weightCKKWL2Save; });
    t.method("weightCKKWL2Save", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.weightCKKWL2Save; });
    t.method("weightCKKWL2Save", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->weightCKKWL2Save; });
    t.method("weightCKKWL2Save", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->weightCKKWL2Save; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:596:36
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWL2Save
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding weightCKKWL2Save! methods to provide write access to the field weightCKKWL2Save (" __HERE__ ")");
    t.method("weightCKKWL2Save!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.weightCKKWL2Save = val; });

    DEBUG_MSG("Adding weightCKKWL2Save! methods to provide write access to the field weightCKKWL2Save (" __HERE__ ")");
    t.method("weightCKKWL2Save!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->weightCKKWL2Save = val; });

    DEBUG_MSG("Adding nMinMPISave methods  to provide read access to the field nMinMPISave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:597:7
    // signature to use in the veto list: Pythia8::MergingHooks::nMinMPISave
    t.method("nMinMPISave", [](const Pythia8::MergingHooks& a) -> int { return a.nMinMPISave; });
    t.method("nMinMPISave", [](Pythia8::MergingHooks& a) -> int { return a.nMinMPISave; });
    t.method("nMinMPISave", [](const Pythia8::MergingHooks* a) -> int { return a->nMinMPISave; });
    t.method("nMinMPISave", [](Pythia8::MergingHooks* a) -> int { return a->nMinMPISave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:597:7
    // signature to use in the veto list: Pythia8::MergingHooks::nMinMPISave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nMinMPISave! methods to provide write access to the field nMinMPISave (" __HERE__ ")");
    t.method("nMinMPISave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nMinMPISave = val; });

    DEBUG_MSG("Adding nMinMPISave! methods to provide write access to the field nMinMPISave (" __HERE__ ")");
    t.method("nMinMPISave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nMinMPISave = val; });

    DEBUG_MSG("Adding weightCKKWLSave methods  to provide read access to the field weightCKKWLSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:599:18
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWLSave
    t.method("weightCKKWLSave", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.weightCKKWLSave; });
    t.method("weightCKKWLSave", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.weightCKKWLSave; });
    t.method("weightCKKWLSave", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->weightCKKWLSave; });
    t.method("weightCKKWLSave", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->weightCKKWLSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:599:18
    // signature to use in the veto list: Pythia8::MergingHooks::weightCKKWLSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding weightCKKWLSave! methods to provide write access to the field weightCKKWLSave (" __HERE__ ")");
    t.method("weightCKKWLSave!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.weightCKKWLSave = val; });

    DEBUG_MSG("Adding weightCKKWLSave! methods to provide write access to the field weightCKKWLSave (" __HERE__ ")");
    t.method("weightCKKWLSave!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->weightCKKWLSave = val; });

    DEBUG_MSG("Adding weightFIRSTSave methods  to provide read access to the field weightFIRSTSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:599:35
    // signature to use in the veto list: Pythia8::MergingHooks::weightFIRSTSave
    t.method("weightFIRSTSave", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.weightFIRSTSave; });
    t.method("weightFIRSTSave", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.weightFIRSTSave; });
    t.method("weightFIRSTSave", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->weightFIRSTSave; });
    t.method("weightFIRSTSave", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->weightFIRSTSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:599:35
    // signature to use in the veto list: Pythia8::MergingHooks::weightFIRSTSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding weightFIRSTSave! methods to provide write access to the field weightFIRSTSave (" __HERE__ ")");
    t.method("weightFIRSTSave!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.weightFIRSTSave = val; });

    DEBUG_MSG("Adding weightFIRSTSave! methods to provide write access to the field weightFIRSTSave (" __HERE__ ")");
    t.method("weightFIRSTSave!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->weightFIRSTSave = val; });

    DEBUG_MSG("Adding individualWeights methods  to provide read access to the field individualWeights (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:611:21
    // signature to use in the veto list: Pythia8::MergingHooks::individualWeights
    t.method("individualWeights", [](const Pythia8::MergingHooks& a) -> const Pythia8::MergingHooks::IndividualWeights& { return a.individualWeights; });
    t.method("individualWeights", [](Pythia8::MergingHooks& a) -> Pythia8::MergingHooks::IndividualWeights& { return a.individualWeights; });
    t.method("individualWeights", [](const Pythia8::MergingHooks* a) -> const Pythia8::MergingHooks::IndividualWeights& { return a->individualWeights; });
    t.method("individualWeights", [](Pythia8::MergingHooks* a) -> Pythia8::MergingHooks::IndividualWeights& { return a->individualWeights; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:611:21
    // signature to use in the veto list: Pythia8::MergingHooks::individualWeights
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding individualWeights! methods to provide write access to the field individualWeights (" __HERE__ ")");
    t.method("individualWeights!", [](Pythia8::MergingHooks& a, const Pythia8::MergingHooks::IndividualWeights& val) -> Pythia8::MergingHooks::IndividualWeights& { return a.individualWeights = val; });

    DEBUG_MSG("Adding individualWeights! methods to provide write access to the field individualWeights (" __HERE__ ")");
    t.method("individualWeights!", [](Pythia8::MergingHooks* a, const Pythia8::MergingHooks::IndividualWeights& val) -> Pythia8::MergingHooks::IndividualWeights& { return a->individualWeights = val; });

    DEBUG_MSG("Adding doVariations methods  to provide read access to the field doVariations (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:614:8
    // signature to use in the veto list: Pythia8::MergingHooks::doVariations
    t.method("doVariations", [](const Pythia8::MergingHooks& a) -> bool { return a.doVariations; });
    t.method("doVariations", [](Pythia8::MergingHooks& a) -> bool { return a.doVariations; });
    t.method("doVariations", [](const Pythia8::MergingHooks* a) -> bool { return a->doVariations; });
    t.method("doVariations", [](Pythia8::MergingHooks* a) -> bool { return a->doVariations; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:614:8
    // signature to use in the veto list: Pythia8::MergingHooks::doVariations
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding doVariations! methods to provide write access to the field doVariations (" __HERE__ ")");
    t.method("doVariations!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.doVariations = val; });

    DEBUG_MSG("Adding doVariations! methods to provide write access to the field doVariations (" __HERE__ ")");
    t.method("doVariations!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->doVariations = val; });

    DEBUG_MSG("Adding muRVarFactors methods  to provide read access to the field muRVarFactors (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:616:18
    // signature to use in the veto list: Pythia8::MergingHooks::muRVarFactors
    t.method("muRVarFactors", [](const Pythia8::MergingHooks& a) -> const std::vector<double>& { return a.muRVarFactors; });
    t.method("muRVarFactors", [](Pythia8::MergingHooks& a) -> std::vector<double>& { return a.muRVarFactors; });
    t.method("muRVarFactors", [](const Pythia8::MergingHooks* a) -> const std::vector<double>& { return a->muRVarFactors; });
    t.method("muRVarFactors", [](Pythia8::MergingHooks* a) -> std::vector<double>& { return a->muRVarFactors; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:616:18
    // signature to use in the veto list: Pythia8::MergingHooks::muRVarFactors
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding muRVarFactors! methods to provide write access to the field muRVarFactors (" __HERE__ ")");
    t.method("muRVarFactors!", [](Pythia8::MergingHooks& a, const std::vector<double>& val) -> std::vector<double>& { return a.muRVarFactors = val; });

    DEBUG_MSG("Adding muRVarFactors! methods to provide write access to the field muRVarFactors (" __HERE__ ")");
    t.method("muRVarFactors!", [](Pythia8::MergingHooks* a, const std::vector<double>& val) -> std::vector<double>& { return a->muRVarFactors = val; });

    DEBUG_MSG("Adding nWgts methods  to provide read access to the field nWgts (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:618:7
    // signature to use in the veto list: Pythia8::MergingHooks::nWgts
    t.method("nWgts", [](const Pythia8::MergingHooks& a) -> int { return a.nWgts; });
    t.method("nWgts", [](Pythia8::MergingHooks& a) -> int { return a.nWgts; });
    t.method("nWgts", [](const Pythia8::MergingHooks* a) -> int { return a->nWgts; });
    t.method("nWgts", [](Pythia8::MergingHooks* a) -> int { return a->nWgts; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:618:7
    // signature to use in the veto list: Pythia8::MergingHooks::nWgts
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nWgts! methods to provide write access to the field nWgts (" __HERE__ ")");
    t.method("nWgts!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nWgts = val; });

    DEBUG_MSG("Adding nWgts! methods to provide write access to the field nWgts (" __HERE__ ")");
    t.method("nWgts!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nWgts = val; });

    DEBUG_MSG("Adding nJetMaxLocal methods  to provide read access to the field nJetMaxLocal (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:621:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxLocal
    t.method("nJetMaxLocal", [](const Pythia8::MergingHooks& a) -> int { return a.nJetMaxLocal; });
    t.method("nJetMaxLocal", [](Pythia8::MergingHooks& a) -> int { return a.nJetMaxLocal; });
    t.method("nJetMaxLocal", [](const Pythia8::MergingHooks* a) -> int { return a->nJetMaxLocal; });
    t.method("nJetMaxLocal", [](Pythia8::MergingHooks* a) -> int { return a->nJetMaxLocal; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:621:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxLocal
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nJetMaxLocal! methods to provide write access to the field nJetMaxLocal (" __HERE__ ")");
    t.method("nJetMaxLocal!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nJetMaxLocal = val; });

    DEBUG_MSG("Adding nJetMaxLocal! methods to provide write access to the field nJetMaxLocal (" __HERE__ ")");
    t.method("nJetMaxLocal!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nJetMaxLocal = val; });

    DEBUG_MSG("Adding nJetMaxNLOLocal methods  to provide read access to the field nJetMaxNLOLocal (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:622:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxNLOLocal
    t.method("nJetMaxNLOLocal", [](const Pythia8::MergingHooks& a) -> int { return a.nJetMaxNLOLocal; });
    t.method("nJetMaxNLOLocal", [](Pythia8::MergingHooks& a) -> int { return a.nJetMaxNLOLocal; });
    t.method("nJetMaxNLOLocal", [](const Pythia8::MergingHooks* a) -> int { return a->nJetMaxNLOLocal; });
    t.method("nJetMaxNLOLocal", [](Pythia8::MergingHooks* a) -> int { return a->nJetMaxNLOLocal; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:622:7
    // signature to use in the veto list: Pythia8::MergingHooks::nJetMaxNLOLocal
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nJetMaxNLOLocal! methods to provide write access to the field nJetMaxNLOLocal (" __HERE__ ")");
    t.method("nJetMaxNLOLocal!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nJetMaxNLOLocal = val; });

    DEBUG_MSG("Adding nJetMaxNLOLocal! methods to provide write access to the field nJetMaxNLOLocal (" __HERE__ ")");
    t.method("nJetMaxNLOLocal!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nJetMaxNLOLocal = val; });

    DEBUG_MSG("Adding hasJetMaxLocal methods  to provide read access to the field hasJetMaxLocal (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:623:8
    // signature to use in the veto list: Pythia8::MergingHooks::hasJetMaxLocal
    t.method("hasJetMaxLocal", [](const Pythia8::MergingHooks& a) -> bool { return a.hasJetMaxLocal; });
    t.method("hasJetMaxLocal", [](Pythia8::MergingHooks& a) -> bool { return a.hasJetMaxLocal; });
    t.method("hasJetMaxLocal", [](const Pythia8::MergingHooks* a) -> bool { return a->hasJetMaxLocal; });
    t.method("hasJetMaxLocal", [](Pythia8::MergingHooks* a) -> bool { return a->hasJetMaxLocal; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:623:8
    // signature to use in the veto list: Pythia8::MergingHooks::hasJetMaxLocal
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding hasJetMaxLocal! methods to provide write access to the field hasJetMaxLocal (" __HERE__ ")");
    t.method("hasJetMaxLocal!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.hasJetMaxLocal = val; });

    DEBUG_MSG("Adding hasJetMaxLocal! methods to provide write access to the field hasJetMaxLocal (" __HERE__ ")");
    t.method("hasJetMaxLocal!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->hasJetMaxLocal = val; });

    DEBUG_MSG("Adding includeWGTinXSECSave methods  to provide read access to the field includeWGTinXSECSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:627:8
    // signature to use in the veto list: Pythia8::MergingHooks::includeWGTinXSECSave
    t.method("includeWGTinXSECSave", [](const Pythia8::MergingHooks& a) -> bool { return a.includeWGTinXSECSave; });
    t.method("includeWGTinXSECSave", [](Pythia8::MergingHooks& a) -> bool { return a.includeWGTinXSECSave; });
    t.method("includeWGTinXSECSave", [](const Pythia8::MergingHooks* a) -> bool { return a->includeWGTinXSECSave; });
    t.method("includeWGTinXSECSave", [](Pythia8::MergingHooks* a) -> bool { return a->includeWGTinXSECSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:627:8
    // signature to use in the veto list: Pythia8::MergingHooks::includeWGTinXSECSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding includeWGTinXSECSave! methods to provide write access to the field includeWGTinXSECSave (" __HERE__ ")");
    t.method("includeWGTinXSECSave!", [](Pythia8::MergingHooks& a, bool val) -> bool { return a.includeWGTinXSECSave = val; });

    DEBUG_MSG("Adding includeWGTinXSECSave! methods to provide write access to the field includeWGTinXSECSave (" __HERE__ ")");
    t.method("includeWGTinXSECSave!", [](Pythia8::MergingHooks* a, bool val) -> bool { return a->includeWGTinXSECSave = val; });

    DEBUG_MSG("Adding nHardNowSave methods  to provide read access to the field nHardNowSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:628:7
    // signature to use in the veto list: Pythia8::MergingHooks::nHardNowSave
    t.method("nHardNowSave", [](const Pythia8::MergingHooks& a) -> int { return a.nHardNowSave; });
    t.method("nHardNowSave", [](Pythia8::MergingHooks& a) -> int { return a.nHardNowSave; });
    t.method("nHardNowSave", [](const Pythia8::MergingHooks* a) -> int { return a->nHardNowSave; });
    t.method("nHardNowSave", [](Pythia8::MergingHooks* a) -> int { return a->nHardNowSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:628:7
    // signature to use in the veto list: Pythia8::MergingHooks::nHardNowSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nHardNowSave! methods to provide write access to the field nHardNowSave (" __HERE__ ")");
    t.method("nHardNowSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nHardNowSave = val; });

    DEBUG_MSG("Adding nHardNowSave! methods to provide write access to the field nHardNowSave (" __HERE__ ")");
    t.method("nHardNowSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nHardNowSave = val; });

    DEBUG_MSG("Adding nJetNowSave methods  to provide read access to the field nJetNowSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:628:21
    // signature to use in the veto list: Pythia8::MergingHooks::nJetNowSave
    t.method("nJetNowSave", [](const Pythia8::MergingHooks& a) -> int { return a.nJetNowSave; });
    t.method("nJetNowSave", [](Pythia8::MergingHooks& a) -> int { return a.nJetNowSave; });
    t.method("nJetNowSave", [](const Pythia8::MergingHooks* a) -> int { return a->nJetNowSave; });
    t.method("nJetNowSave", [](Pythia8::MergingHooks* a) -> int { return a->nJetNowSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:628:21
    // signature to use in the veto list: Pythia8::MergingHooks::nJetNowSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nJetNowSave! methods to provide write access to the field nJetNowSave (" __HERE__ ")");
    t.method("nJetNowSave!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nJetNowSave = val; });

    DEBUG_MSG("Adding nJetNowSave! methods to provide write access to the field nJetNowSave (" __HERE__ ")");
    t.method("nJetNowSave!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nJetNowSave = val; });

    DEBUG_MSG("Adding tmsHardNowSave methods  to provide read access to the field tmsHardNowSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:629:10
    // signature to use in the veto list: Pythia8::MergingHooks::tmsHardNowSave
    t.method("tmsHardNowSave", [](const Pythia8::MergingHooks& a) -> double { return a.tmsHardNowSave; });
    t.method("tmsHardNowSave", [](Pythia8::MergingHooks& a) -> double { return a.tmsHardNowSave; });
    t.method("tmsHardNowSave", [](const Pythia8::MergingHooks* a) -> double { return a->tmsHardNowSave; });
    t.method("tmsHardNowSave", [](Pythia8::MergingHooks* a) -> double { return a->tmsHardNowSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:629:10
    // signature to use in the veto list: Pythia8::MergingHooks::tmsHardNowSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding tmsHardNowSave! methods to provide write access to the field tmsHardNowSave (" __HERE__ ")");
    t.method("tmsHardNowSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.tmsHardNowSave = val; });

    DEBUG_MSG("Adding tmsHardNowSave! methods to provide write access to the field tmsHardNowSave (" __HERE__ ")");
    t.method("tmsHardNowSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->tmsHardNowSave = val; });

    DEBUG_MSG("Adding tmsNowSave methods  to provide read access to the field tmsNowSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:629:26
    // signature to use in the veto list: Pythia8::MergingHooks::tmsNowSave
    t.method("tmsNowSave", [](const Pythia8::MergingHooks& a) -> double { return a.tmsNowSave; });
    t.method("tmsNowSave", [](Pythia8::MergingHooks& a) -> double { return a.tmsNowSave; });
    t.method("tmsNowSave", [](const Pythia8::MergingHooks* a) -> double { return a->tmsNowSave; });
    t.method("tmsNowSave", [](Pythia8::MergingHooks* a) -> double { return a->tmsNowSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:629:26
    // signature to use in the veto list: Pythia8::MergingHooks::tmsNowSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding tmsNowSave! methods to provide write access to the field tmsNowSave (" __HERE__ ")");
    t.method("tmsNowSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.tmsNowSave = val; });

    DEBUG_MSG("Adding tmsNowSave! methods to provide write access to the field tmsNowSave (" __HERE__ ")");
    t.method("tmsNowSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->tmsNowSave = val; });

    DEBUG_MSG("Adding stopScaleSave methods  to provide read access to the field stopScaleSave (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:804:10
    // signature to use in the veto list: Pythia8::MergingHooks::stopScaleSave
    t.method("stopScaleSave", [](const Pythia8::MergingHooks& a) -> double { return a.stopScaleSave; });
    t.method("stopScaleSave", [](Pythia8::MergingHooks& a) -> double { return a.stopScaleSave; });
    t.method("stopScaleSave", [](const Pythia8::MergingHooks* a) -> double { return a->stopScaleSave; });
    t.method("stopScaleSave", [](Pythia8::MergingHooks* a) -> double { return a->stopScaleSave; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:804:10
    // signature to use in the veto list: Pythia8::MergingHooks::stopScaleSave
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding stopScaleSave! methods to provide write access to the field stopScaleSave (" __HERE__ ")");
    t.method("stopScaleSave!", [](Pythia8::MergingHooks& a, double val) -> double { return a.stopScaleSave = val; });

    DEBUG_MSG("Adding stopScaleSave! methods to provide write access to the field stopScaleSave (" __HERE__ ")");
    t.method("stopScaleSave!", [](Pythia8::MergingHooks* a, double val) -> double { return a->stopScaleSave = val; });

    DEBUG_MSG("Adding nVetoedInMainShower methods  to provide read access to the field nVetoedInMainShower (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:887:7
    // signature to use in the veto list: Pythia8::MergingHooks::nVetoedInMainShower
    t.method("nVetoedInMainShower", [](const Pythia8::MergingHooks& a) -> int { return a.nVetoedInMainShower; });
    t.method("nVetoedInMainShower", [](Pythia8::MergingHooks& a) -> int { return a.nVetoedInMainShower; });
    t.method("nVetoedInMainShower", [](const Pythia8::MergingHooks* a) -> int { return a->nVetoedInMainShower; });
    t.method("nVetoedInMainShower", [](Pythia8::MergingHooks* a) -> int { return a->nVetoedInMainShower; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/MergingHooks.h:887:7
    // signature to use in the veto list: Pythia8::MergingHooks::nVetoedInMainShower
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding nVetoedInMainShower! methods to provide write access to the field nVetoedInMainShower (" __HERE__ ")");
    t.method("nVetoedInMainShower!", [](Pythia8::MergingHooks& a, int val) -> int { return a.nVetoedInMainShower = val; });

    DEBUG_MSG("Adding nVetoedInMainShower! methods to provide write access to the field nVetoedInMainShower (" __HERE__ ")");
    t.method("nVetoedInMainShower!", [](Pythia8::MergingHooks* a, int val) -> int { return a->nVetoedInMainShower = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::MergingHooks>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_MergingHooks(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_MergingHooks(module));
}
