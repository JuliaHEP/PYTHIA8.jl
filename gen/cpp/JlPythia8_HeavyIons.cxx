// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::HeavyIons> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::HeavyIons> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::HeavyIons
// signature to use in the veto file: Pythia8::HeavyIons
struct JlPythia8_HeavyIons: public Wrapper {

  JlPythia8_HeavyIons(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::HeavyIons (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:31:7
    jlcxx::TypeWrapper<Pythia8::HeavyIons>  t = jlModule.add_type<Pythia8::HeavyIons>("Pythia8!HeavyIons");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::HeavyIons>>(new jlcxx::TypeWrapper<Pythia8::HeavyIons>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::init() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::init()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:52:16
    t.method("init", static_cast<bool (Pythia8::HeavyIons::*)() >(&Pythia8::HeavyIons::init));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::next() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::next()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:58:16
    t.method("next", static_cast<bool (Pythia8::HeavyIons::*)() >(&Pythia8::HeavyIons::next));

    DEBUG_MSG("Adding wrapper for void Pythia8::HeavyIons::addSpecialSettings(Pythia8::Settings &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::HeavyIons::addSpecialSettings(Pythia8::Settings &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:62:15
    module_.method("Pythia8!HeavyIons!addSpecialSettings", static_cast<void (*)(Pythia8::Settings &) >(&Pythia8::HeavyIons::addSpecialSettings));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::isHeavyIon(Pythia8::Settings &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::isHeavyIon(Pythia8::Settings &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:66:15
    module_.method("Pythia8!HeavyIons!isHeavyIon", static_cast<bool (*)(Pythia8::Settings &) >(&Pythia8::HeavyIons::isHeavyIon));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setHIUserHooksPtr(Pythia8::HIUserHooksPtr) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setHIUserHooksPtr(Pythia8::HIUserHooksPtr)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:69:8
    t.method("setHIUserHooksPtr", static_cast<bool (Pythia8::HeavyIons::*)(Pythia8::HIUserHooksPtr) >(&Pythia8::HeavyIons::setHIUserHooksPtr));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setKinematics(double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setKinematics(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:74:16
    t.method("setKinematics", static_cast<bool (Pythia8::HeavyIons::*)(double) >(&Pythia8::HeavyIons::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setKinematics(double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setKinematics(double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:77:16
    t.method("setKinematics", static_cast<bool (Pythia8::HeavyIons::*)(double, double) >(&Pythia8::HeavyIons::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setKinematics(double, double, double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setKinematics(double, double, double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:80:16
    t.method("setKinematics", static_cast<bool (Pythia8::HeavyIons::*)(double, double, double, double, double, double) >(&Pythia8::HeavyIons::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setKinematics(Pythia8::Vec4, Pythia8::Vec4) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setKinematics(Pythia8::Vec4, Pythia8::Vec4)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:83:16
    t.method("setKinematics", static_cast<bool (Pythia8::HeavyIons::*)(Pythia8::Vec4, Pythia8::Vec4) >(&Pythia8::HeavyIons::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HeavyIons::setBeamIDs(int, int) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HeavyIons::setBeamIDs(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:88:16
    t.method("setBeamIDs", static_cast<bool (Pythia8::HeavyIons::*)(int, int) >(&Pythia8::HeavyIons::setBeamIDs));
    t.method("setBeamIDs", [](Pythia8::HeavyIons& a, int arg0)->bool { return a.setBeamIDs(arg0); });
    t.method("setBeamIDs", [](Pythia8::HeavyIons* a, int arg0)->bool { return a->setBeamIDs(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::HeavyIons::stat() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::HeavyIons::stat()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:97:16
    t.method("stat", static_cast<void (Pythia8::HeavyIons::*)() >(&Pythia8::HeavyIons::stat));

    DEBUG_MSG("Adding hiInfo methods  to provide read access to the field hiInfo (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:94:10
    // signature to use in the veto list: Pythia8::HeavyIons::hiInfo
    t.method("hiInfo", [](const Pythia8::HeavyIons& a) -> const Pythia8::HIInfo& { return a.hiInfo; });
    t.method("hiInfo", [](Pythia8::HeavyIons& a) -> Pythia8::HIInfo& { return a.hiInfo; });
    t.method("hiInfo", [](const Pythia8::HeavyIons* a) -> const Pythia8::HIInfo& { return a->hiInfo; });
    t.method("hiInfo", [](Pythia8::HeavyIons* a) -> Pythia8::HIInfo& { return a->hiInfo; });
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:94:10
    // signature to use in the veto list: Pythia8::HeavyIons::hiInfo
    // with ! suffix to veto the setter only.
    DEBUG_MSG("Adding hiInfo! methods to provide write access to the field hiInfo (" __HERE__ ")");
    t.method("hiInfo!", [](Pythia8::HeavyIons& a, const Pythia8::HIInfo& val) -> Pythia8::HIInfo& { return a.hiInfo = val; });

    DEBUG_MSG("Adding hiInfo! methods to provide write access to the field hiInfo (" __HERE__ ")");
    t.method("hiInfo!", [](Pythia8::HeavyIons* a, const Pythia8::HIInfo& val) -> Pythia8::HIInfo& { return a->hiInfo = val; });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::HeavyIons>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_HeavyIons(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_HeavyIons(module));
}
