// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Angantyr> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Angantyr> : std::false_type { };
template<> struct SuperType<Pythia8::Angantyr> { typedef Pythia8::HeavyIons type; };
}

// Class generating the wrapper for type Pythia8::Angantyr
// signature to use in the veto file: Pythia8::Angantyr
struct JlPythia8_Angantyr: public Wrapper {

  JlPythia8_Angantyr(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Angantyr (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:162:7
    jlcxx::TypeWrapper<Pythia8::Angantyr>  t = jlModule.add_type<Pythia8::Angantyr>("Pythia8!Angantyr",
      jlcxx::julia_base_type<Pythia8::HeavyIons>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Angantyr>>(new jlcxx::TypeWrapper<Pythia8::Angantyr>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void Pythia8::Angantyr::Angantyr(Pythia8::Pythia &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:183:3
    t.constructor<Pythia8::Pythia &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::init() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::init()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:188:16
    t.method("init", static_cast<bool (Pythia8::Angantyr::*)() >(&Pythia8::Angantyr::init));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::next() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::next()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:191:16
    t.method("next", static_cast<bool (Pythia8::Angantyr::*)() >(&Pythia8::Angantyr::next));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setUserHooksPtr(Pythia8::Angantyr::PythiaObject, Pythia8::UserHooksPtr) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setUserHooksPtr(Pythia8::Angantyr::PythiaObject, Pythia8::UserHooksPtr)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:194:8
    t.method("setUserHooksPtr", static_cast<bool (Pythia8::Angantyr::*)(Pythia8::Angantyr::PythiaObject, Pythia8::UserHooksPtr) >(&Pythia8::Angantyr::setUserHooksPtr));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setKinematics(double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setKinematics(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:197:8
    t.method("setKinematics", static_cast<bool (Pythia8::Angantyr::*)(double) >(&Pythia8::Angantyr::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setKinematics(double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setKinematics(double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:198:8
    t.method("setKinematics", static_cast<bool (Pythia8::Angantyr::*)(double, double) >(&Pythia8::Angantyr::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setKinematics(double, double, double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setKinematics(double, double, double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:199:8
    t.method("setKinematics", static_cast<bool (Pythia8::Angantyr::*)(double, double, double, double, double, double) >(&Pythia8::Angantyr::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setKinematics(Pythia8::Vec4, Pythia8::Vec4) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setKinematics(Pythia8::Vec4, Pythia8::Vec4)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:200:8
    t.method("setKinematics", static_cast<bool (Pythia8::Angantyr::*)(Pythia8::Vec4, Pythia8::Vec4) >(&Pythia8::Angantyr::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setKinematics() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setKinematics()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:201:8
    t.method("setKinematics", static_cast<bool (Pythia8::Angantyr::*)() >(&Pythia8::Angantyr::setKinematics));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Angantyr::setBeamIDs(int, int) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Angantyr::setBeamIDs(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:204:8
    t.method("setBeamIDs", static_cast<bool (Pythia8::Angantyr::*)(int, int) >(&Pythia8::Angantyr::setBeamIDs));
    t.method("setBeamIDs", [](Pythia8::Angantyr& a, int arg0)->bool { return a.setBeamIDs(arg0); });
    t.method("setBeamIDs", [](Pythia8::Angantyr* a, int arg0)->bool { return a->setBeamIDs(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Angantyr::unifyFrames() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Angantyr::unifyFrames()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:207:8
    t.method("unifyFrames", static_cast<void (Pythia8::Angantyr::*)() >(&Pythia8::Angantyr::unifyFrames));

    DEBUG_MSG("Adding wrapper for void Pythia8::Angantyr::banner() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Angantyr::banner()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:210:8
    t.method("banner", static_cast<void (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::banner));

    DEBUG_MSG("Adding wrapper for const Pythia8::SubCollisionSet & Pythia8::Angantyr::subCollisions() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::SubCollisionSet & Pythia8::Angantyr::subCollisions()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:213:26
    t.method("subCollisions", static_cast<const Pythia8::SubCollisionSet & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::subCollisions));

    DEBUG_MSG("Adding wrapper for const Pythia8::SubCollisionModel & Pythia8::Angantyr::subCollisionModel() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::SubCollisionModel & Pythia8::Angantyr::subCollisionModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:217:28
    t.method("subCollisionModel", static_cast<const Pythia8::SubCollisionModel & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::subCollisionModel));

    DEBUG_MSG("Adding wrapper for const Pythia8::ImpactParameterGenerator Pythia8::Angantyr::impactParameterGenerator() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::ImpactParameterGenerator Pythia8::Angantyr::impactParameterGenerator()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:221:34
    t.method("impactParameterGenerator", static_cast<const Pythia8::ImpactParameterGenerator (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::impactParameterGenerator));

    DEBUG_MSG("Adding wrapper for const Pythia8::Nucleus & Pythia8::Angantyr::projectile() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Nucleus & Pythia8::Angantyr::projectile()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:225:18
    t.method("projectile", static_cast<const Pythia8::Nucleus & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::projectile));

    DEBUG_MSG("Adding wrapper for const Pythia8::Nucleus & Pythia8::Angantyr::target() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Nucleus & Pythia8::Angantyr::target()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:229:18
    t.method("target", static_cast<const Pythia8::Nucleus & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::target));

    DEBUG_MSG("Adding wrapper for const Pythia8::NucleusModel & Pythia8::Angantyr::projectileModel() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::NucleusModel & Pythia8::Angantyr::projectileModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:233:23
    t.method("projectileModel", static_cast<const Pythia8::NucleusModel & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::projectileModel));

    DEBUG_MSG("Adding wrapper for const Pythia8::NucleusModel & Pythia8::Angantyr::targetModel() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::NucleusModel & Pythia8::Angantyr::targetModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:237:23
    t.method("targetModel", static_cast<const Pythia8::NucleusModel & (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::targetModel));

    DEBUG_MSG("Adding wrapper for const Pythia8::SigmaTotal Pythia8::Angantyr::sigmaNN() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::SigmaTotal Pythia8::Angantyr::sigmaNN()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:241:20
    t.method("sigmaNN", static_cast<const Pythia8::SigmaTotal (Pythia8::Angantyr::*)()  const>(&Pythia8::Angantyr::sigmaNN));

    DEBUG_MSG("Adding wrapper for double Pythia8::Angantyr::mT2(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Angantyr::mT2(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:328:17
    module_.method("Pythia8!Angantyr!mT2", static_cast<double (*)(const Pythia8::Vec4 &) >(&Pythia8::Angantyr::mT2));

    DEBUG_MSG("Adding wrapper for double Pythia8::Angantyr::mT(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Angantyr::mT(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HeavyIons.h:329:17
    module_.method("Pythia8!Angantyr!mT", static_cast<double (*)(const Pythia8::Vec4 &) >(&Pythia8::Angantyr::mT));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Angantyr>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Angantyr(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Angantyr(module));
}
