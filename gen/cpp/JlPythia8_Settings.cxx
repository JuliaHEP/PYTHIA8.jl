// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Settings> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Settings> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::Settings
// signature to use in the veto file: Pythia8::Settings
struct JlPythia8_Settings: public Wrapper {

  JlPythia8_Settings(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Settings (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:195:7
    jlcxx::TypeWrapper<Pythia8::Settings>  t = jlModule.add_type<Pythia8::Settings>("Pythia8!Settings");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Settings>>(new jlcxx::TypeWrapper<Pythia8::Settings>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::initPtrs(Pythia8::Logger *) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::initPtrs(Pythia8::Logger *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:204:8
    t.method("initPtrs", static_cast<void (Pythia8::Settings::*)(Pythia8::Logger *) >(&Pythia8::Settings::initPtrs));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::init(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::init(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:207:8
    t.method("init", static_cast<bool (Pythia8::Settings::*)(std::string, bool) >(&Pythia8::Settings::init));
    t.method("init", [](Pythia8::Settings& a)->bool { return a.init(); });
    t.method("init", [](Pythia8::Settings& a, std::string arg0)->bool { return a.init(arg0); });
    t.method("init", [](Pythia8::Settings* a)->bool { return a->init(); });
    t.method("init", [](Pythia8::Settings* a, std::string arg0)->bool { return a->init(arg0); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::reInit(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::reInit(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:214:8
    t.method("reInit", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::reInit));
    t.method("reInit", [](Pythia8::Settings& a)->bool { return a.reInit(); });
    t.method("reInit", [](Pythia8::Settings* a)->bool { return a->reInit(); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::readString(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::readString(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:217:8
    t.method("readString", static_cast<bool (Pythia8::Settings::*)(std::string, bool) >(&Pythia8::Settings::readString));
    t.method("readString", [](Pythia8::Settings& a, std::string arg0)->bool { return a.readString(arg0); });
    t.method("readString", [](Pythia8::Settings* a, std::string arg0)->bool { return a->readString(arg0); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::registerPluginLibrary(std::string, std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::registerPluginLibrary(std::string, std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:220:8
    t.method("registerPluginLibrary", static_cast<bool (Pythia8::Settings::*)(std::string, std::string) >(&Pythia8::Settings::registerPluginLibrary));
    t.method("registerPluginLibrary", [](Pythia8::Settings& a, std::string arg0)->bool { return a.registerPluginLibrary(arg0); });
    t.method("registerPluginLibrary", [](Pythia8::Settings* a, std::string arg0)->bool { return a->registerPluginLibrary(arg0); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::writeFile(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::writeFile(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:223:8
    t.method("writeFile", static_cast<bool (Pythia8::Settings::*)(std::string, bool) >(&Pythia8::Settings::writeFile));
    t.method("writeFile", [](Pythia8::Settings& a, std::string arg0)->bool { return a.writeFile(arg0); });
    t.method("writeFile", [](Pythia8::Settings* a, std::string arg0)->bool { return a->writeFile(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::listAll() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::listAll()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:229:8
    t.method("listAll", static_cast<void (Pythia8::Settings::*)() >(&Pythia8::Settings::listAll));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::listChanged() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::listChanged()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:230:8
    t.method("listChanged", static_cast<void (Pythia8::Settings::*)() >(&Pythia8::Settings::listChanged));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::list(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::list(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:231:8
    t.method("list", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::list));

    DEBUG_MSG("Adding wrapper for std::string Pythia8::Settings::output(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: std::string Pythia8::Settings::output(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:234:10
    t.method("output", static_cast<std::string (Pythia8::Settings::*)(std::string, bool) >(&Pythia8::Settings::output));
    t.method("output", [](Pythia8::Settings& a, std::string arg0)->std::string { return a.output(arg0); });
    t.method("output", [](Pythia8::Settings* a, std::string arg0)->std::string { return a->output(arg0); });

    DEBUG_MSG("Adding wrapper for std::vector<std::string> Pythia8::Settings::getReadHistory(int) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> Pythia8::Settings::getReadHistory(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:238:18
    t.method("getReadHistory", static_cast<std::vector<std::string> (Pythia8::Settings::*)(int) >(&Pythia8::Settings::getReadHistory));
    t.method("getReadHistory", [](Pythia8::Settings& a)->std::vector<std::string> { return a.getReadHistory(); });
    t.method("getReadHistory", [](Pythia8::Settings* a)->std::vector<std::string> { return a->getReadHistory(); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetAll() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetAll()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:246:8
    t.method("resetAll", static_cast<void (Pythia8::Settings::*)() >(&Pythia8::Settings::resetAll));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isFlag(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isFlag(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:249:8
    t.method("isFlag", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isFlag));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isMode(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isMode(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:251:8
    t.method("isMode", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isMode));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isParm(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isParm(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:253:8
    t.method("isParm", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isParm));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isWord(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isWord(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:255:8
    t.method("isWord", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isWord));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isFVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isFVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:257:8
    t.method("isFVec", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isFVec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isMVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isMVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:259:8
    t.method("isMVec", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isMVec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isPVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isPVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:261:8
    t.method("isPVec", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isPVec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::isWVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::isWVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:263:8
    t.method("isWVec", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::isWVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addFlag(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addFlag(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:267:8
    t.method("addFlag", static_cast<void (Pythia8::Settings::*)(std::string, bool) >(&Pythia8::Settings::addFlag));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addMode(std::string, int, bool, bool, int, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addMode(std::string, int, bool, bool, int, int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:269:8
    t.method("addMode", static_cast<void (Pythia8::Settings::*)(std::string, int, bool, bool, int, int, bool) >(&Pythia8::Settings::addMode));
    t.method("addMode", [](Pythia8::Settings& a, std::string arg0, int arg1, bool arg2, bool arg3, int arg4, int arg5)->void { a.addMode(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("addMode", [](Pythia8::Settings* a, std::string arg0, int arg1, bool arg2, bool arg3, int arg4, int arg5)->void { a->addMode(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addParm(std::string, double, bool, bool, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addParm(std::string, double, bool, bool, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:273:8
    t.method("addParm", static_cast<void (Pythia8::Settings::*)(std::string, double, bool, bool, double, double) >(&Pythia8::Settings::addParm));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addWord(std::string, std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addWord(std::string, std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:276:8
    t.method("addWord", static_cast<void (Pythia8::Settings::*)(std::string, std::string) >(&Pythia8::Settings::addWord));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addFVec(std::string, std::vector<bool>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addFVec(std::string, std::vector<bool>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:278:8
    t.method("addFVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<bool>) >(&Pythia8::Settings::addFVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addMVec(std::string, std::vector<int>, bool, bool, int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addMVec(std::string, std::vector<int>, bool, bool, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:280:8
    t.method("addMVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<int>, bool, bool, int, int) >(&Pythia8::Settings::addMVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addPVec(std::string, std::vector<double>, bool, bool, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addPVec(std::string, std::vector<double>, bool, bool, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:283:9
    t.method("addPVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<double>, bool, bool, double, double) >(&Pythia8::Settings::addPVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::addWVec(std::string, std::vector<std::string>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::addWVec(std::string, std::vector<std::string>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:286:8
    t.method("addWVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<std::string>) >(&Pythia8::Settings::addWVec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::flag(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::flag(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:290:10
    t.method("flag", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::flag));

    DEBUG_MSG("Adding wrapper for int Pythia8::Settings::mode(std::string) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Settings::mode(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:291:10
    t.method("mode", static_cast<int (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::mode));

    DEBUG_MSG("Adding wrapper for double Pythia8::Settings::parm(std::string) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Settings::parm(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:292:10
    t.method("parm", static_cast<double (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::parm));

    DEBUG_MSG("Adding wrapper for std::string Pythia8::Settings::word(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::string Pythia8::Settings::word(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:293:10
    t.method("word", static_cast<std::string (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::word));

    DEBUG_MSG("Adding wrapper for std::vector<bool> Pythia8::Settings::fvec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<bool> Pythia8::Settings::fvec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:294:18
    t.method("fvec", static_cast<std::vector<bool> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::fvec));

    DEBUG_MSG("Adding wrapper for std::vector<int> Pythia8::Settings::mvec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<int> Pythia8::Settings::mvec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:295:18
    t.method("mvec", static_cast<std::vector<int> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::mvec));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::Settings::pvec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::Settings::pvec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:296:18
    t.method("pvec", static_cast<std::vector<double> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::pvec));

    DEBUG_MSG("Adding wrapper for std::vector<std::string> Pythia8::Settings::wvec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> Pythia8::Settings::wvec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:297:18
    t.method("wvec", static_cast<std::vector<std::string> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::wvec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::flagDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::flagDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:300:10
    t.method("flagDefault", static_cast<bool (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::flagDefault));

    DEBUG_MSG("Adding wrapper for int Pythia8::Settings::modeDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Settings::modeDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:301:10
    t.method("modeDefault", static_cast<int (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::modeDefault));

    DEBUG_MSG("Adding wrapper for double Pythia8::Settings::parmDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Settings::parmDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:302:10
    t.method("parmDefault", static_cast<double (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::parmDefault));

    DEBUG_MSG("Adding wrapper for std::string Pythia8::Settings::wordDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::string Pythia8::Settings::wordDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:303:10
    t.method("wordDefault", static_cast<std::string (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::wordDefault));

    DEBUG_MSG("Adding wrapper for std::vector<bool> Pythia8::Settings::fvecDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<bool> Pythia8::Settings::fvecDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:304:18
    t.method("fvecDefault", static_cast<std::vector<bool> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::fvecDefault));

    DEBUG_MSG("Adding wrapper for std::vector<int> Pythia8::Settings::mvecDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<int> Pythia8::Settings::mvecDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:305:18
    t.method("mvecDefault", static_cast<std::vector<int> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::mvecDefault));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::Settings::pvecDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::Settings::pvecDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:306:18
    t.method("pvecDefault", static_cast<std::vector<double> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::pvecDefault));

    DEBUG_MSG("Adding wrapper for std::vector<std::string> Pythia8::Settings::wvecDefault(std::string) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<std::string> Pythia8::Settings::wvecDefault(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:307:18
    t.method("wvecDefault", static_cast<std::vector<std::string> (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::wvecDefault));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::flag(std::string, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::flag(std::string, bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:320:8
    t.method("flag", static_cast<void (Pythia8::Settings::*)(std::string, bool, bool) >(&Pythia8::Settings::flag));
    t.method("flag", [](Pythia8::Settings& a, std::string arg0, bool arg1)->void { a.flag(arg0, arg1); });
    t.method("flag", [](Pythia8::Settings* a, std::string arg0, bool arg1)->void { a->flag(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::mode(std::string, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::mode(std::string, int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:321:8
    t.method("mode", static_cast<bool (Pythia8::Settings::*)(std::string, int, bool) >(&Pythia8::Settings::mode));
    t.method("mode", [](Pythia8::Settings& a, std::string arg0, int arg1)->bool { return a.mode(arg0, arg1); });
    t.method("mode", [](Pythia8::Settings* a, std::string arg0, int arg1)->bool { return a->mode(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::parm(std::string, double, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::parm(std::string, double, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:322:8
    t.method("parm", static_cast<bool (Pythia8::Settings::*)(std::string, double, bool) >(&Pythia8::Settings::parm));
    t.method("parm", [](Pythia8::Settings& a, std::string arg0, double arg1)->bool { return a.parm(arg0, arg1); });
    t.method("parm", [](Pythia8::Settings* a, std::string arg0, double arg1)->bool { return a->parm(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::word(std::string, std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::word(std::string, std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:323:8
    t.method("word", static_cast<void (Pythia8::Settings::*)(std::string, std::string, bool) >(&Pythia8::Settings::word));
    t.method("word", [](Pythia8::Settings& a, std::string arg0, std::string arg1)->void { a.word(arg0, arg1); });
    t.method("word", [](Pythia8::Settings* a, std::string arg0, std::string arg1)->void { a->word(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::fvec(std::string, std::vector<bool>, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::fvec(std::string, std::vector<bool>, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:324:8
    t.method("fvec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<bool>, bool) >(&Pythia8::Settings::fvec));
    t.method("fvec", [](Pythia8::Settings& a, std::string arg0, std::vector<bool> arg1)->void { a.fvec(arg0, arg1); });
    t.method("fvec", [](Pythia8::Settings* a, std::string arg0, std::vector<bool> arg1)->void { a->fvec(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::mvec(std::string, std::vector<int>, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::mvec(std::string, std::vector<int>, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:325:8
    t.method("mvec", static_cast<bool (Pythia8::Settings::*)(std::string, std::vector<int>, bool) >(&Pythia8::Settings::mvec));
    t.method("mvec", [](Pythia8::Settings& a, std::string arg0, std::vector<int> arg1)->bool { return a.mvec(arg0, arg1); });
    t.method("mvec", [](Pythia8::Settings* a, std::string arg0, std::vector<int> arg1)->bool { return a->mvec(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::pvec(std::string, std::vector<double>, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::pvec(std::string, std::vector<double>, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:326:8
    t.method("pvec", static_cast<bool (Pythia8::Settings::*)(std::string, std::vector<double>, bool) >(&Pythia8::Settings::pvec));
    t.method("pvec", [](Pythia8::Settings& a, std::string arg0, std::vector<double> arg1)->bool { return a.pvec(arg0, arg1); });
    t.method("pvec", [](Pythia8::Settings* a, std::string arg0, std::vector<double> arg1)->bool { return a->pvec(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::wvec(std::string, std::vector<std::string>, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::wvec(std::string, std::vector<std::string>, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:327:8
    t.method("wvec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<std::string>, bool) >(&Pythia8::Settings::wvec));
    t.method("wvec", [](Pythia8::Settings& a, std::string arg0, std::vector<std::string> arg1)->void { a.wvec(arg0, arg1); });
    t.method("wvec", [](Pythia8::Settings* a, std::string arg0, std::vector<std::string> arg1)->void { a->wvec(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::forceMode(std::string, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::forceMode(std::string, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:331:8
    t.method("forceMode", static_cast<void (Pythia8::Settings::*)(std::string, int) >(&Pythia8::Settings::forceMode));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::forceParm(std::string, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::forceParm(std::string, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:332:8
    t.method("forceParm", static_cast<void (Pythia8::Settings::*)(std::string, double) >(&Pythia8::Settings::forceParm));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::forceMVec(std::string, std::vector<int>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::forceMVec(std::string, std::vector<int>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:333:8
    t.method("forceMVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<int>) >(&Pythia8::Settings::forceMVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::forcePVec(std::string, std::vector<double>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::forcePVec(std::string, std::vector<double>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:334:8
    t.method("forcePVec", static_cast<void (Pythia8::Settings::*)(std::string, std::vector<double>) >(&Pythia8::Settings::forcePVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetFlag(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetFlag(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:337:8
    t.method("resetFlag", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetFlag));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetMode(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetMode(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:338:8
    t.method("resetMode", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetMode));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetParm(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetParm(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:339:8
    t.method("resetParm", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetParm));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetWord(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetWord(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:340:8
    t.method("resetWord", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetWord));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetFVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetFVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:341:8
    t.method("resetFVec", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetFVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetMVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetMVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:342:8
    t.method("resetMVec", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetMVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetPVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetPVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:343:8
    t.method("resetPVec", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetPVec));

    DEBUG_MSG("Adding wrapper for void Pythia8::Settings::resetWVec(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Settings::resetWVec(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:344:8
    t.method("resetWVec", static_cast<void (Pythia8::Settings::*)(std::string) >(&Pythia8::Settings::resetWVec));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::getIsInit() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::getIsInit()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:347:8
    t.method("getIsInit", static_cast<bool (Pythia8::Settings::*)() >(&Pythia8::Settings::getIsInit));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::readingFailed() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::readingFailed()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:350:8
    t.method("readingFailed", static_cast<bool (Pythia8::Settings::*)() >(&Pythia8::Settings::readingFailed));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::unfinishedInput() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::unfinishedInput()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:353:8
    t.method("unfinishedInput", static_cast<bool (Pythia8::Settings::*)() >(&Pythia8::Settings::unfinishedInput));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Settings::hasHardProc() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Settings::hasHardProc()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Settings.h:356:8
    t.method("hasHardProc", static_cast<bool (Pythia8::Settings::*)() >(&Pythia8::Settings::hasHardProc));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Settings>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Settings(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Settings(module));
}
