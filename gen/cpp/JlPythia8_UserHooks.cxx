// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::UserHooks> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::UserHooks> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::UserHooks
// signature to use in the veto file: Pythia8::UserHooks
struct JlPythia8_UserHooks: public Wrapper {

  JlPythia8_UserHooks(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::UserHooks (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:32:7
    jlcxx::TypeWrapper<Pythia8::UserHooks>  t = jlModule.add_type<Pythia8::UserHooks>("Pythia8!UserHooks");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::UserHooks>>(new jlcxx::TypeWrapper<Pythia8::UserHooks>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::initAfterBeams() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::initAfterBeams()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:40:16
    t.method("initAfterBeams", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::initAfterBeams));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canModifySigma() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canModifySigma()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:43:16
    t.method("canModifySigma", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canModifySigma));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::multiplySigmaBy(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::multiplySigmaBy(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:46:18
    t.method("multiplySigmaBy", static_cast<double (Pythia8::UserHooks::*)(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool) >(&Pythia8::UserHooks::multiplySigmaBy));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canBiasSelection() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canBiasSelection()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:50:16
    t.method("canBiasSelection", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canBiasSelection));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::biasSelectionBy(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::biasSelectionBy(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:53:18
    t.method("biasSelectionBy", static_cast<double (Pythia8::UserHooks::*)(const Pythia8::SigmaProcess *, const Pythia8::PhaseSpace *, bool) >(&Pythia8::UserHooks::biasSelectionBy));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::biasedSelectionWeight() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::biasedSelectionWeight()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:57:18
    t.method("biasedSelectionWeight", static_cast<double (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::biasedSelectionWeight));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoProcessLevel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoProcessLevel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:60:16
    t.method("canVetoProcessLevel", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoProcessLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoProcessLevel(Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoProcessLevel(Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:64:16
    t.method("doVetoProcessLevel", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::Event &) >(&Pythia8::UserHooks::doVetoProcessLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canSetLowEnergySigma(int, int) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canSetLowEnergySigma(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:68:16
    t.method("canSetLowEnergySigma", static_cast<bool (Pythia8::UserHooks::*)(int, int)  const>(&Pythia8::UserHooks::canSetLowEnergySigma));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::doSetLowEnergySigma(int, int, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::doSetLowEnergySigma(int, int, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:72:18
    t.method("doSetLowEnergySigma", static_cast<double (Pythia8::UserHooks::*)(int, int, double, double, double)  const>(&Pythia8::UserHooks::doSetLowEnergySigma));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoResonanceDecays() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoResonanceDecays()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:76:16
    t.method("canVetoResonanceDecays", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoResonanceDecays));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoResonanceDecays(Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoResonanceDecays(Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:80:16
    t.method("doVetoResonanceDecays", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::Event &) >(&Pythia8::UserHooks::doVetoResonanceDecays));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoPT() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoPT()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:84:16
    t.method("canVetoPT", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoPT));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::scaleVetoPT() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::scaleVetoPT()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:87:18
    t.method("scaleVetoPT", static_cast<double (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::scaleVetoPT));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoPT(int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoPT(int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:93:16
    t.method("doVetoPT", static_cast<bool (Pythia8::UserHooks::*)(int, const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoPT));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoStep() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoStep()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:97:16
    t.method("canVetoStep", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoStep));

    DEBUG_MSG("Adding wrapper for int Pythia8::UserHooks::numberVetoStep() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::UserHooks::numberVetoStep()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:100:15
    t.method("numberVetoStep", static_cast<int (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::numberVetoStep));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoStep(int, int, int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoStep(int, int, int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:105:16
    t.method("doVetoStep", static_cast<bool (Pythia8::UserHooks::*)(int, int, int, const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoStep));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoMPIStep() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoMPIStep()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:109:16
    t.method("canVetoMPIStep", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoMPIStep));

    DEBUG_MSG("Adding wrapper for int Pythia8::UserHooks::numberVetoMPIStep() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::UserHooks::numberVetoMPIStep()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:112:15
    t.method("numberVetoMPIStep", static_cast<int (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::numberVetoMPIStep));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoMPIStep(int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoMPIStep(int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:116:16
    t.method("doVetoMPIStep", static_cast<bool (Pythia8::UserHooks::*)(int, const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoMPIStep));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoPartonLevelEarly() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoPartonLevelEarly()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:120:16
    t.method("canVetoPartonLevelEarly", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoPartonLevelEarly));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoPartonLevelEarly(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoPartonLevelEarly(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:124:16
    t.method("doVetoPartonLevelEarly", static_cast<bool (Pythia8::UserHooks::*)(const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoPartonLevelEarly));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::retryPartonLevel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::retryPartonLevel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:129:16
    t.method("retryPartonLevel", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::retryPartonLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoPartonLevel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoPartonLevel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:132:16
    t.method("canVetoPartonLevel", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoPartonLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoPartonLevel(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoPartonLevel(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:136:16
    t.method("doVetoPartonLevel", static_cast<bool (Pythia8::UserHooks::*)(const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoPartonLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canSetResonanceScale() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canSetResonanceScale()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:139:16
    t.method("canSetResonanceScale", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canSetResonanceScale));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::scaleResonance(int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::scaleResonance(int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:144:18
    t.method("scaleResonance", static_cast<double (Pythia8::UserHooks::*)(int, const Pythia8::Event &) >(&Pythia8::UserHooks::scaleResonance));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoISREmission() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoISREmission()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:147:16
    t.method("canVetoISREmission", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoISREmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoISREmission(int, const Pythia8::Event &, int) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoISREmission(int, const Pythia8::Event &, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:153:16
    t.method("doVetoISREmission", static_cast<bool (Pythia8::UserHooks::*)(int, const Pythia8::Event &, int) >(&Pythia8::UserHooks::doVetoISREmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoFSREmission() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoFSREmission()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:156:16
    t.method("canVetoFSREmission", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoFSREmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoFSREmission(int, const Pythia8::Event &, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoFSREmission(int, const Pythia8::Event &, int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:164:16
    t.method("doVetoFSREmission", static_cast<bool (Pythia8::UserHooks::*)(int, const Pythia8::Event &, int, bool) >(&Pythia8::UserHooks::doVetoFSREmission));
    t.method("doVetoFSREmission", [](Pythia8::UserHooks& a, int arg0, const Pythia8::Event & arg1, int arg2)->bool { return a.doVetoFSREmission(arg0, arg1, arg2); });
    t.method("doVetoFSREmission", [](Pythia8::UserHooks* a, int arg0, const Pythia8::Event & arg1, int arg2)->bool { return a->doVetoFSREmission(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoMPIEmission() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoMPIEmission()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:168:16
    t.method("canVetoMPIEmission", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoMPIEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoMPIEmission(int, const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoMPIEmission(int, const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:173:16
    t.method("doVetoMPIEmission", static_cast<bool (Pythia8::UserHooks::*)(int, const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoMPIEmission));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canReconnectResonanceSystems() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canReconnectResonanceSystems()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:176:16
    t.method("canReconnectResonanceSystems", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canReconnectResonanceSystems));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doReconnectResonanceSystems(int, Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doReconnectResonanceSystems(int, Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:183:16
    t.method("doReconnectResonanceSystems", static_cast<bool (Pythia8::UserHooks::*)(int, Pythia8::Event &) >(&Pythia8::UserHooks::doReconnectResonanceSystems));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canChangeFragPar() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canChangeFragPar()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:186:16
    t.method("canChangeFragPar", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canChangeFragPar));

    DEBUG_MSG("Adding wrapper for void Pythia8::UserHooks::setStringEnds(const Pythia8::StringEnd *, const Pythia8::StringEnd *, std::vector<int>) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::UserHooks::setStringEnds(const Pythia8::StringEnd *, const Pythia8::StringEnd *, std::vector<int>)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:191:16
    t.method("setStringEnds", static_cast<void (Pythia8::UserHooks::*)(const Pythia8::StringEnd *, const Pythia8::StringEnd *, std::vector<int>) >(&Pythia8::UserHooks::setStringEnds));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doChangeFragPar(Pythia8::StringFlav *, Pythia8::StringZ *, Pythia8::StringPT *, int, double, std::vector<int>, const Pythia8::StringEnd *) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doChangeFragPar(Pythia8::StringFlav *, Pythia8::StringZ *, Pythia8::StringPT *, int, double, std::vector<int>, const Pythia8::StringEnd *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:197:16
    t.method("doChangeFragPar", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::StringFlav *, Pythia8::StringZ *, Pythia8::StringPT *, int, double, std::vector<int>, const Pythia8::StringEnd *) >(&Pythia8::UserHooks::doChangeFragPar));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoFragmentation(Pythia8::Particle, const Pythia8::StringEnd *) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoFragmentation(Pythia8::Particle, const Pythia8::StringEnd *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:203:16
    t.method("doVetoFragmentation", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::Particle, const Pythia8::StringEnd *) >(&Pythia8::UserHooks::doVetoFragmentation));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoFragmentation(Pythia8::Particle, Pythia8::Particle, const Pythia8::StringEnd *, const Pythia8::StringEnd *) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoFragmentation(Pythia8::Particle, Pythia8::Particle, const Pythia8::StringEnd *, const Pythia8::StringEnd *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:208:16
    t.method("doVetoFragmentation", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::Particle, Pythia8::Particle, const Pythia8::StringEnd *, const Pythia8::StringEnd *) >(&Pythia8::UserHooks::doVetoFragmentation));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canVetoAfterHadronization() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canVetoAfterHadronization()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:215:16
    t.method("canVetoAfterHadronization", static_cast<bool (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::canVetoAfterHadronization));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::doVetoAfterHadronization(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::doVetoAfterHadronization(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:218:16
    t.method("doVetoAfterHadronization", static_cast<bool (Pythia8::UserHooks::*)(const Pythia8::Event &) >(&Pythia8::UserHooks::doVetoAfterHadronization));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::canSetImpactParameter() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::canSetImpactParameter()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:221:16
    t.method("canSetImpactParameter", static_cast<bool (Pythia8::UserHooks::*)()  const>(&Pythia8::UserHooks::canSetImpactParameter));

    DEBUG_MSG("Adding wrapper for double Pythia8::UserHooks::doSetImpactParameter() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::UserHooks::doSetImpactParameter()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:224:18
    t.method("doSetImpactParameter", static_cast<double (Pythia8::UserHooks::*)() >(&Pythia8::UserHooks::doSetImpactParameter));

    DEBUG_MSG("Adding wrapper for bool Pythia8::UserHooks::onEndHadronLevel(Pythia8::HadronLevel &, Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::UserHooks::onEndHadronLevel(Pythia8::HadronLevel &, Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/UserHooks.h:227:16
    t.method("onEndHadronLevel", static_cast<bool (Pythia8::UserHooks::*)(Pythia8::HadronLevel &, Pythia8::Event &) >(&Pythia8::UserHooks::onEndHadronLevel));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::UserHooks>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_UserHooks(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_UserHooks(module));
}
