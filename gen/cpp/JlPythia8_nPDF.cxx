// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::nPDF> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::nPDF> : std::false_type { };
template<> struct SuperType<Pythia8::nPDF> { typedef Pythia8::PDF type; };
}

// Class generating the wrapper for type Pythia8::nPDF
// signature to use in the veto file: Pythia8::nPDF
struct JlPythia8_nPDF: public Wrapper {

  JlPythia8_nPDF(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::nPDF (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1060:7
    jlcxx::TypeWrapper<Pythia8::nPDF>  t = jlModule.add_type<Pythia8::nPDF>("Pythia8!nPDF",
      jlcxx::julia_base_type<Pythia8::PDF>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::nPDF>>(new jlcxx::TypeWrapper<Pythia8::nPDF>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void Pythia8::nPDF::xfUpdate(int, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::nPDF::xfUpdate(int, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1070:8
    t.method("xfUpdate", static_cast<void (Pythia8::nPDF::*)(int, double, double) >(&Pythia8::nPDF::xfUpdate));

    DEBUG_MSG("Adding wrapper for void Pythia8::nPDF::rUpdate(int, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::nPDF::rUpdate(int, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1073:16
    t.method("rUpdate", static_cast<void (Pythia8::nPDF::*)(int, double, double) >(&Pythia8::nPDF::rUpdate));

    DEBUG_MSG("Adding wrapper for void Pythia8::nPDF::initNPDF(int, Pythia8::PDFPtr) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::nPDF::initNPDF(int, Pythia8::PDFPtr)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1076:8
    t.method("initNPDF", static_cast<void (Pythia8::nPDF::*)(int, Pythia8::PDFPtr) >(&Pythia8::nPDF::initNPDF));
    t.method("initNPDF", [](Pythia8::nPDF& a, int arg0)->void { a.initNPDF(arg0); });
    t.method("initNPDF", [](Pythia8::nPDF* a, int arg0)->void { a->initNPDF(arg0); });

    DEBUG_MSG("Adding wrapper for int Pythia8::nPDF::getA() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::nPDF::getA()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1079:7
    t.method("getA", static_cast<int (Pythia8::nPDF::*)() >(&Pythia8::nPDF::getA));

    DEBUG_MSG("Adding wrapper for int Pythia8::nPDF::getZ() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::nPDF::getZ()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1080:7
    t.method("getZ", static_cast<int (Pythia8::nPDF::*)() >(&Pythia8::nPDF::getZ));

    DEBUG_MSG("Adding wrapper for void Pythia8::nPDF::setMode(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::nPDF::setMode(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1084:8
    t.method("setMode", static_cast<void (Pythia8::nPDF::*)(double) >(&Pythia8::nPDF::setMode));

    DEBUG_MSG("Adding wrapper for void Pythia8::nPDF::resetMode() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::nPDF::resetMode()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/PartonDistributions.h:1085:8
    t.method("resetMode", static_cast<void (Pythia8::nPDF::*)() >(&Pythia8::nPDF::resetMode));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::nPDF>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_nPDF(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_nPDF(module));
}
