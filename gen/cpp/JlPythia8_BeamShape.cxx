// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::BeamShape> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::BeamShape> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::BeamShape
// signature to use in the veto file: Pythia8::BeamShape
struct JlPythia8_BeamShape: public Wrapper {

  JlPythia8_BeamShape(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::BeamShape (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:21:7
    jlcxx::TypeWrapper<Pythia8::BeamShape>  t = jlModule.add_type<Pythia8::BeamShape>("Pythia8!BeamShape");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::BeamShape>>(new jlcxx::TypeWrapper<Pythia8::BeamShape>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void Pythia8::BeamShape::init(Pythia8::Settings &, Pythia8::Rndm *) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::BeamShape::init(Pythia8::Settings &, Pythia8::Rndm *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:38:16
    t.method("init", static_cast<void (Pythia8::BeamShape::*)(Pythia8::Settings &, Pythia8::Rndm *) >(&Pythia8::BeamShape::init));

    DEBUG_MSG("Adding wrapper for void Pythia8::BeamShape::pick() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::BeamShape::pick()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:41:16
    t.method("pick", static_cast<void (Pythia8::BeamShape::*)() >(&Pythia8::BeamShape::pick));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::BeamShape::deltaPA() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::BeamShape::deltaPA()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:44:8
    t.method("deltaPA", static_cast<Pythia8::Vec4 (Pythia8::BeamShape::*)()  const>(&Pythia8::BeamShape::deltaPA));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::BeamShape::deltaPB() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::BeamShape::deltaPB()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:45:8
    t.method("deltaPB", static_cast<Pythia8::Vec4 (Pythia8::BeamShape::*)()  const>(&Pythia8::BeamShape::deltaPB));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::BeamShape::vertex() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::BeamShape::vertex()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/BeamShape.h:46:8
    t.method("vertex", static_cast<Pythia8::Vec4 (Pythia8::BeamShape::*)()  const>(&Pythia8::BeamShape::vertex));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::BeamShape>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_BeamShape(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_BeamShape(module));
}
