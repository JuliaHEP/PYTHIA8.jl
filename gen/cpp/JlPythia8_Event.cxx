// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Event> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Event> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::Event
// signature to use in the veto file: Pythia8::Event
struct JlPythia8_Event: public Wrapper {

  JlPythia8_Event(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Event (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:453:7
    jlcxx::TypeWrapper<Pythia8::Event>  t = jlModule.add_type<Pythia8::Event>("Pythia8!Event");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Event>>(new jlcxx::TypeWrapper<Pythia8::Event>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Event::Event(int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:458:3
    t.constructor<int>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Pythia8::Event & Pythia8::Event::operator=(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Event & Pythia8::Event::operator=(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:463:10
    t.method("assign", static_cast<Pythia8::Event & (Pythia8::Event::*)(const Pythia8::Event &) >(&Pythia8::Event::operator=));


    DEBUG_MSG("Adding wrapper for void Pythia8::Event::Event(const Pythia8::Event &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:464:3
    t.constructor<const Pythia8::Event &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::init(std::string, Pythia8::ParticleData *, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::init(std::string, Pythia8::ParticleData *, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:467:8
    t.method("init", static_cast<void (Pythia8::Event::*)(std::string, Pythia8::ParticleData *, int) >(&Pythia8::Event::init));
    t.method("init", [](Pythia8::Event& a)->void { a.init(); });
    t.method("init", [](Pythia8::Event& a, std::string arg0)->void { a.init(arg0); });
    t.method("init", [](Pythia8::Event& a, std::string arg0, Pythia8::ParticleData * arg1)->void { a.init(arg0, arg1); });
    t.method("init", [](Pythia8::Event* a)->void { a->init(); });
    t.method("init", [](Pythia8::Event* a, std::string arg0)->void { a->init(arg0); });
    t.method("init", [](Pythia8::Event* a, std::string arg0, Pythia8::ParticleData * arg1)->void { a->init(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::clear() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::clear()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:473:8
    t.method("clear", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::clear));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::free() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::free()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:476:8
    t.method("free", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::free));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::reset() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::reset()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:481:8
    t.method("reset", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::reset));
    module_.set_override_module(jl_base_module);


    DEBUG_MSG("Adding setindex! method  to wrap Pythia8::Particle & Pythia8::Event::operator[](int) (" __HERE__ ")");
// defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:484:13
    t.method("setindex!",
      [](Pythia8::Event& a, int i, Pythia8::Particle const & val){
      return a[i] = val;
    });

    DEBUG_MSG("Adding getindex method to wrap Pythia8::Particle & Pythia8::Event::operator[](int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:484:13
    t.method("getindex",
      [](Pythia8::Event& a, int i){
      return a[i];
    });


    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for Pythia8::Particle & Pythia8::Event::front() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Particle & Pythia8::Event::front()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:488:13
    t.method("front", static_cast<Pythia8::Particle & (Pythia8::Event::*)() >(&Pythia8::Event::front));

    DEBUG_MSG("Adding wrapper for Pythia8::Particle & Pythia8::Event::at(int) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Particle & Pythia8::Event::at(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:489:13
    t.method("at", static_cast<Pythia8::Particle & (Pythia8::Event::*)(int) >(&Pythia8::Event::at));

    DEBUG_MSG("Adding wrapper for Pythia8::Particle & Pythia8::Event::back() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Particle & Pythia8::Event::back()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:490:13
    t.method("back", static_cast<Pythia8::Particle & (Pythia8::Event::*)() >(&Pythia8::Event::back));

    DEBUG_MSG("Adding wrapper for const Pythia8::Particle & Pythia8::Event::front() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Particle & Pythia8::Event::front()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:491:19
    t.method("front", static_cast<const Pythia8::Particle & (Pythia8::Event::*)()  const>(&Pythia8::Event::front));

    DEBUG_MSG("Adding wrapper for const Pythia8::Particle & Pythia8::Event::at(int) (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Particle & Pythia8::Event::at(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:492:19
    t.method("at", static_cast<const Pythia8::Particle & (Pythia8::Event::*)(int)  const>(&Pythia8::Event::at));

    DEBUG_MSG("Adding wrapper for const Pythia8::Particle & Pythia8::Event::back() (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Particle & Pythia8::Event::back()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:493:19
    t.method("back", static_cast<const Pythia8::Particle & (Pythia8::Event::*)()  const>(&Pythia8::Event::back));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::size() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::size()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:504:7
    t.method("size", static_cast<int (Pythia8::Event::*)()  const>(&Pythia8::Event::size));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::append(Pythia8::Particle) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::append(Pythia8::Particle)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:507:7
    t.method("append", static_cast<int (Pythia8::Event::*)(Pythia8::Particle) >(&Pythia8::Event::append));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::append(int, int, int, int, int, int, int, int, double, double, double, double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::append(int, int, int, int, int, int, int, int, double, double, double, double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:513:7
    t.method("append", static_cast<int (Pythia8::Event::*)(int, int, int, int, int, int, int, int, double, double, double, double, double, double, double) >(&Pythia8::Event::append));
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11, double arg12)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11, double arg12, double arg13)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11, double arg12)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, double arg8, double arg9, double arg10, double arg11, double arg12, double arg13)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13); });

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::append(int, int, int, int, int, int, int, int, Pythia8::Vec4, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::append(int, int, int, int, int, int, int, int, Pythia8::Vec4, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:522:7
    t.method("append", static_cast<int (Pythia8::Event::*)(int, int, int, int, int, int, int, int, Pythia8::Vec4, double, double, double) >(&Pythia8::Event::append));
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8, double arg9)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8, double arg9, double arg10)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8, double arg9)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, Pythia8::Vec4 arg8, double arg9, double arg10)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); });

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::append(int, int, int, int, double, double, double, double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::append(int, int, int, int, double, double, double, double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:533:7
    t.method("append", static_cast<int (Pythia8::Event::*)(int, int, int, int, double, double, double, double, double, double, double) >(&Pythia8::Event::append));
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7, double arg8)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7, double arg8)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9); });

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::append(int, int, int, int, Pythia8::Vec4, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::append(int, int, int, int, Pythia8::Vec4, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:541:7
    t.method("append", static_cast<int (Pythia8::Event::*)(int, int, int, int, Pythia8::Vec4, double, double, double) >(&Pythia8::Event::append));
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4)->int { return a.append(arg0, arg1, arg2, arg3, arg4); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4, double arg5)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("append", [](Pythia8::Event& a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4, double arg5, double arg6)->int { return a.append(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4)->int { return a->append(arg0, arg1, arg2, arg3, arg4); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4, double arg5)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("append", [](Pythia8::Event* a, int arg0, int arg1, int arg2, int arg3, Pythia8::Vec4 arg4, double arg5, double arg6)->int { return a->append(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::setEvtPtr(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::setEvtPtr(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:550:8
    t.method("setEvtPtr", static_cast<void (Pythia8::Event::*)(int) >(&Pythia8::Event::setEvtPtr));
    t.method("setEvtPtr", [](Pythia8::Event& a)->void { a.setEvtPtr(); });
    t.method("setEvtPtr", [](Pythia8::Event* a)->void { a->setEvtPtr(); });

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::copy(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::copy(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:554:7
    t.method("copy", static_cast<int (Pythia8::Event::*)(int, int) >(&Pythia8::Event::copy));
    t.method("copy", [](Pythia8::Event& a, int arg0)->int { return a.copy(arg0); });
    t.method("copy", [](Pythia8::Event* a, int arg0)->int { return a->copy(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::list(bool, bool, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::list(bool, bool, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:557:8
    t.method("list", static_cast<void (Pythia8::Event::*)(bool, bool, int)  const>(&Pythia8::Event::list));
    t.method("list", [](Pythia8::Event const& a)->void { a.list(); });
    t.method("list", [](Pythia8::Event const& a, bool arg0)->void { a.list(arg0); });
    t.method("list", [](Pythia8::Event const& a, bool arg0, bool arg1)->void { a.list(arg0, arg1); });
    t.method("list", [](Pythia8::Event const* a)->void { a->list(); });
    t.method("list", [](Pythia8::Event const* a, bool arg0)->void { a->list(arg0); });
    t.method("list", [](Pythia8::Event const* a, bool arg0, bool arg1)->void { a->list(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::popBack(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::popBack(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:561:8
    t.method("popBack", static_cast<void (Pythia8::Event::*)(int) >(&Pythia8::Event::popBack));
    t.method("popBack", [](Pythia8::Event& a)->void { a.popBack(); });
    t.method("popBack", [](Pythia8::Event* a)->void { a->popBack(); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::remove(int, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::remove(int, int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:567:8
    t.method("remove", static_cast<void (Pythia8::Event::*)(int, int, bool) >(&Pythia8::Event::remove));
    t.method("remove", [](Pythia8::Event& a, int arg0, int arg1)->void { a.remove(arg0, arg1); });
    t.method("remove", [](Pythia8::Event* a, int arg0, int arg1)->void { a->remove(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::restorePtrs() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::restorePtrs()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:571:8
    t.method("restorePtrs", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::restorePtrs));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::saveSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::saveSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:574:8
    t.method("saveSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::saveSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::restoreSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::restoreSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:575:8
    t.method("restoreSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::restoreSize));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::savedSizeValue() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::savedSizeValue()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:576:8
    t.method("savedSizeValue", static_cast<int (Pythia8::Event::*)() >(&Pythia8::Event::savedSizeValue));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::initColTag(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::initColTag(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:579:8
    t.method("initColTag", static_cast<void (Pythia8::Event::*)(int) >(&Pythia8::Event::initColTag));
    t.method("initColTag", [](Pythia8::Event& a)->void { a.initColTag(); });
    t.method("initColTag", [](Pythia8::Event* a)->void { a->initColTag(); });

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::lastColTag() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::lastColTag()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:580:7
    t.method("lastColTag", static_cast<int (Pythia8::Event::*)()  const>(&Pythia8::Event::lastColTag));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::nextColTag() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::nextColTag()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:581:7
    t.method("nextColTag", static_cast<int (Pythia8::Event::*)() >(&Pythia8::Event::nextColTag));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::scale(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::scale(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:584:8
    t.method("scale", static_cast<void (Pythia8::Event::*)(double) >(&Pythia8::Event::scale));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::scale() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::scale()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:585:10
    t.method("scale", static_cast<double (Pythia8::Event::*)()  const>(&Pythia8::Event::scale));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::scaleSecond(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::scaleSecond(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:588:8
    t.method("scaleSecond", static_cast<void (Pythia8::Event::*)(double) >(&Pythia8::Event::scaleSecond));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::scaleSecond() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::scaleSecond()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:589:10
    t.method("scaleSecond", static_cast<double (Pythia8::Event::*)()  const>(&Pythia8::Event::scaleSecond));

    DEBUG_MSG("Adding wrapper for std::vector<int> Pythia8::Event::daughterList(int) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<int> Pythia8::Event::daughterList(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:593:15
    t.method("daughterList", static_cast<std::vector<int> (Pythia8::Event::*)(int)  const>(&Pythia8::Event::daughterList));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::nFinal(bool) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::nFinal(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:596:7
    t.method("nFinal", static_cast<int (Pythia8::Event::*)(bool)  const>(&Pythia8::Event::nFinal));
    t.method("nFinal", [](Pythia8::Event const& a)->int { return a.nFinal(); });
    t.method("nFinal", [](Pythia8::Event const* a)->int { return a->nFinal(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::dyAbs(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::dyAbs(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:604:10
    t.method("dyAbs", static_cast<double (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::dyAbs));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::detaAbs(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::detaAbs(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:606:10
    t.method("detaAbs", static_cast<double (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::detaAbs));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::dphiAbs(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::dphiAbs(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:608:10
    t.method("dphiAbs", static_cast<double (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::dphiAbs));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::RRapPhi(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::RRapPhi(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:612:10
    t.method("RRapPhi", static_cast<double (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::RRapPhi));

    DEBUG_MSG("Adding wrapper for double Pythia8::Event::REtaPhi(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Event::REtaPhi(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:614:10
    t.method("REtaPhi", static_cast<double (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::REtaPhi));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::rot(double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::rot(double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:618:8
    t.method("rot", static_cast<void (Pythia8::Event::*)(double, double) >(&Pythia8::Event::rot));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::bst(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::bst(double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:620:8
    t.method("bst", static_cast<void (Pythia8::Event::*)(double, double, double) >(&Pythia8::Event::bst));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::bst(double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::bst(double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:622:8
    t.method("bst", static_cast<void (Pythia8::Event::*)(double, double, double, double) >(&Pythia8::Event::bst));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::bst(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::bst(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:625:8
    t.method("bst", static_cast<void (Pythia8::Event::*)(const Pythia8::Vec4 &) >(&Pythia8::Event::bst));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::rotbst(const Pythia8::RotBstMatrix &, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::rotbst(const Pythia8::RotBstMatrix &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:627:8
    t.method("rotbst", static_cast<void (Pythia8::Event::*)(const Pythia8::RotBstMatrix &, bool) >(&Pythia8::Event::rotbst));
    t.method("rotbst", [](Pythia8::Event& a, const Pythia8::RotBstMatrix & arg0)->void { a.rotbst(arg0); });
    t.method("rotbst", [](Pythia8::Event* a, const Pythia8::RotBstMatrix & arg0)->void { a->rotbst(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::clearJunctions() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::clearJunctions()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:631:8
    t.method("clearJunctions", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::clearJunctions));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::appendJunction(int, int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::appendJunction(int, int, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:634:7
    t.method("appendJunction", static_cast<int (Pythia8::Event::*)(int, int, int, int) >(&Pythia8::Event::appendJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::appendJunction(Pythia8::Junction) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::appendJunction(Pythia8::Junction)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:637:7
    t.method("appendJunction", static_cast<int (Pythia8::Event::*)(Pythia8::Junction) >(&Pythia8::Event::appendJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::sizeJunction() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::sizeJunction()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:639:7
    t.method("sizeJunction", static_cast<int (Pythia8::Event::*)()  const>(&Pythia8::Event::sizeJunction));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Event::remainsJunction(int) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Event::remainsJunction(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:640:8
    t.method("remainsJunction", static_cast<bool (Pythia8::Event::*)(int)  const>(&Pythia8::Event::remainsJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::remainsJunction(int, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::remainsJunction(int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:641:8
    t.method("remainsJunction", static_cast<void (Pythia8::Event::*)(int, bool) >(&Pythia8::Event::remainsJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::kindJunction(int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::kindJunction(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:642:7
    t.method("kindJunction", static_cast<int (Pythia8::Event::*)(int)  const>(&Pythia8::Event::kindJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::colJunction(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::colJunction(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:643:7
    t.method("colJunction", static_cast<int (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::colJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::colJunction(int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::colJunction(int, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:644:8
    t.method("colJunction", static_cast<void (Pythia8::Event::*)(int, int, int) >(&Pythia8::Event::colJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::endColJunction(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::endColJunction(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:645:7
    t.method("endColJunction", static_cast<int (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::endColJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::endColJunction(int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::endColJunction(int, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:646:8
    t.method("endColJunction", static_cast<void (Pythia8::Event::*)(int, int, int) >(&Pythia8::Event::endColJunction));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::statusJunction(int, int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::statusJunction(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:648:7
    t.method("statusJunction", static_cast<int (Pythia8::Event::*)(int, int)  const>(&Pythia8::Event::statusJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::statusJunction(int, int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::statusJunction(int, int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:649:8
    t.method("statusJunction", static_cast<void (Pythia8::Event::*)(int, int, int) >(&Pythia8::Event::statusJunction));

    DEBUG_MSG("Adding wrapper for Pythia8::Junction & Pythia8::Event::getJunction(int) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Junction & Pythia8::Event::getJunction(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:651:13
    t.method("getJunction", static_cast<Pythia8::Junction & (Pythia8::Event::*)(int) >(&Pythia8::Event::getJunction));

    DEBUG_MSG("Adding wrapper for const Pythia8::Junction & Pythia8::Event::getJunction(int) (" __HERE__ ")");
    // signature to use in the veto list: const Pythia8::Junction & Pythia8::Event::getJunction(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:652:19
    t.method("getJunction", static_cast<const Pythia8::Junction & (Pythia8::Event::*)(int)  const>(&Pythia8::Event::getJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::eraseJunction(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::eraseJunction(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:653:8
    t.method("eraseJunction", static_cast<void (Pythia8::Event::*)(int) >(&Pythia8::Event::eraseJunction));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::saveJunctionSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::saveJunctionSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:656:8
    t.method("saveJunctionSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::saveJunctionSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::restoreJunctionSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::restoreJunctionSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:657:8
    t.method("restoreJunctionSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::restoreJunctionSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::listJunctions() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::listJunctions()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:660:8
    t.method("listJunctions", static_cast<void (Pythia8::Event::*)()  const>(&Pythia8::Event::listJunctions));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Event::hasHVcols() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Event::hasHVcols()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:663:8
    t.method("hasHVcols", static_cast<bool (Pythia8::Event::*)()  const>(&Pythia8::Event::hasHVcols));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::listHVcols() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::listHVcols()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:666:8
    t.method("listHVcols", static_cast<void (Pythia8::Event::*)()  const>(&Pythia8::Event::listHVcols));

    DEBUG_MSG("Adding wrapper for int Pythia8::Event::maxHVcols() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Event::maxHVcols()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:667:8
    t.method("maxHVcols", static_cast<int (Pythia8::Event::*)()  const>(&Pythia8::Event::maxHVcols));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::saveHVcolsSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::saveHVcolsSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:670:8
    t.method("saveHVcolsSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::saveHVcolsSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::restoreHVcolsSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::restoreHVcolsSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:671:8
    t.method("restoreHVcolsSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::restoreHVcolsSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::savePartonLevelSize() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::savePartonLevelSize()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:674:8
    t.method("savePartonLevelSize", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::savePartonLevelSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::addStringBreaks(Pythia8::StringBreaks &) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::addStringBreaks(Pythia8::StringBreaks &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:677:8
    t.method("addStringBreaks", static_cast<void (Pythia8::Event::*)(Pythia8::StringBreaks &) >(&Pythia8::Event::addStringBreaks));

    DEBUG_MSG("Adding wrapper for void Pythia8::Event::clearStringBreaks() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Event::clearStringBreaks()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:680:8
    t.method("clearStringBreaks", static_cast<void (Pythia8::Event::*)() >(&Pythia8::Event::clearStringBreaks));

    DEBUG_MSG("Adding wrapper for const std::vector<Pythia8::StringBreaks> & Pythia8::Event::getStringBreaks() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<Pythia8::StringBreaks> & Pythia8::Event::getStringBreaks()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:683:31
    t.method("getStringBreaks", static_cast<const std::vector<Pythia8::StringBreaks> & (Pythia8::Event::*)()  const>(&Pythia8::Event::getStringBreaks));

    DEBUG_MSG("Adding wrapper for Pythia8::Event & Pythia8::Event::operator+=(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Event & Pythia8::Event::operator+=(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:687:10
    t.method("add!", static_cast<Pythia8::Event & (Pythia8::Event::*)(const Pythia8::Event &) >(&Pythia8::Event::operator+=));

    DEBUG_MSG("Adding wrapper for const std::vector<Pythia8::Particle> * Pythia8::Event::particles() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<Pythia8::Particle> * Pythia8::Event::particles()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:690:27
    t.method("particles", static_cast<const std::vector<Pythia8::Particle> * (Pythia8::Event::*)()  const>(&Pythia8::Event::particles));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Event>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Event(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Event(module));
}
