// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Thrust> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Thrust> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::Thrust
// signature to use in the veto file: Pythia8::Thrust
struct JlPythia8_Thrust: public Wrapper {

  JlPythia8_Thrust(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Thrust (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:80:7
    jlcxx::TypeWrapper<Pythia8::Thrust>  t = jlModule.add_type<Pythia8::Thrust>("Pythia8!Thrust");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Thrust>>(new jlcxx::TypeWrapper<Pythia8::Thrust>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Thrust::Thrust(int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:85:3
    t.constructor<int>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for bool Pythia8::Thrust::analyze(const Pythia8::Event &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Thrust::analyze(const Pythia8::Event &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:89:8
    t.method("analyze", static_cast<bool (Pythia8::Thrust::*)(const Pythia8::Event &) >(&Pythia8::Thrust::analyze));

    DEBUG_MSG("Adding wrapper for double Pythia8::Thrust::thrust() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Thrust::thrust()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:92:10
    t.method("thrust", static_cast<double (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::thrust));

    DEBUG_MSG("Adding wrapper for double Pythia8::Thrust::tMajor() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Thrust::tMajor()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:93:10
    t.method("tMajor", static_cast<double (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::tMajor));

    DEBUG_MSG("Adding wrapper for double Pythia8::Thrust::tMinor() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Thrust::tMinor()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:94:10
    t.method("tMinor", static_cast<double (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::tMinor));

    DEBUG_MSG("Adding wrapper for double Pythia8::Thrust::oblateness() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Thrust::oblateness()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:95:10
    t.method("oblateness", static_cast<double (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::oblateness));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::Thrust::eventAxis(int) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::Thrust::eventAxis(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:96:8
    t.method("eventAxis", static_cast<Pythia8::Vec4 (Pythia8::Thrust::*)(int)  const>(&Pythia8::Thrust::eventAxis));

    DEBUG_MSG("Adding wrapper for void Pythia8::Thrust::list() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Thrust::list()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:100:8
    t.method("list", static_cast<void (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::list));

    DEBUG_MSG("Adding wrapper for int Pythia8::Thrust::nError() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Thrust::nError()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:103:7
    t.method("nError", static_cast<int (Pythia8::Thrust::*)()  const>(&Pythia8::Thrust::nError));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Thrust>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Thrust(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Thrust(module));
}
