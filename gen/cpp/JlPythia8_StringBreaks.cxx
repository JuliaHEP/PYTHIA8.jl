// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::StringBreaks> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::StringBreaks> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::StringBreaks
// signature to use in the veto file: Pythia8::StringBreaks
struct JlPythia8_StringBreaks: public Wrapper {

  JlPythia8_StringBreaks(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::StringBreaks (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:409:7
    jlcxx::TypeWrapper<Pythia8::StringBreaks>  t = jlModule.add_type<Pythia8::StringBreaks>("Pythia8!StringBreaks");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::StringBreaks>>(new jlcxx::TypeWrapper<Pythia8::StringBreaks>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void Pythia8::StringBreaks::setEnds(int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::StringBreaks::setEnds(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:414:8
    t.method("setEnds", static_cast<void (Pythia8::StringBreaks::*)(int, int) >(&Pythia8::StringBreaks::setEnds));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::posEnd() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::posEnd()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:415:7
    t.method("posEnd", static_cast<int (Pythia8::StringBreaks::*)() >(&Pythia8::StringBreaks::posEnd));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::negEnd() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::negEnd()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:416:7
    t.method("negEnd", static_cast<int (Pythia8::StringBreaks::*)() >(&Pythia8::StringBreaks::negEnd));

    DEBUG_MSG("Adding wrapper for void Pythia8::StringBreaks::clear() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::StringBreaks::clear()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:419:8
    t.method("clear", static_cast<void (Pythia8::StringBreaks::*)() >(&Pythia8::StringBreaks::clear));

    DEBUG_MSG("Adding wrapper for void Pythia8::StringBreaks::add(int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::StringBreaks::add(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:422:8
    t.method("add", static_cast<void (Pythia8::StringBreaks::*)(int) >(&Pythia8::StringBreaks::add));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::nId(int) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::nId(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:427:7
    t.method("nId", static_cast<int (Pythia8::StringBreaks::*)(int)  const>(&Pythia8::StringBreaks::nId));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::nAll() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::nAll()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:430:7
    t.method("nAll", static_cast<int (Pythia8::StringBreaks::*)()  const>(&Pythia8::StringBreaks::nAll));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::nQuark() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::nQuark()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:432:7
    t.method("nQuark", static_cast<int (Pythia8::StringBreaks::*)()  const>(&Pythia8::StringBreaks::nQuark));

    DEBUG_MSG("Adding wrapper for int Pythia8::StringBreaks::nDiquark() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::StringBreaks::nDiquark()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:433:7
    t.method("nDiquark", static_cast<int (Pythia8::StringBreaks::*)()  const>(&Pythia8::StringBreaks::nDiquark));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::StringBreaks>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_StringBreaks(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_StringBreaks(module));
}
