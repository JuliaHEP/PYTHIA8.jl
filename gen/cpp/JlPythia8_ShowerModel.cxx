// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::ShowerModel> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::ShowerModel> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::ShowerModel
// signature to use in the veto file: Pythia8::ShowerModel
struct JlPythia8_ShowerModel: public Wrapper {

  JlPythia8_ShowerModel(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::ShowerModel (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:28:7
    jlcxx::TypeWrapper<Pythia8::ShowerModel>  t = jlModule.add_type<Pythia8::ShowerModel>("Pythia8!ShowerModel");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::ShowerModel>>(new jlcxx::TypeWrapper<Pythia8::ShowerModel>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for bool Pythia8::ShowerModel::init(Pythia8::MergingPtr, Pythia8::MergingHooksPtr, Pythia8::PartonVertexPtr, Pythia8::WeightContainer *) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::ShowerModel::init(Pythia8::MergingPtr, Pythia8::MergingHooksPtr, Pythia8::PartonVertexPtr, Pythia8::WeightContainer *)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:42:16
    t.method("init", static_cast<bool (Pythia8::ShowerModel::*)(Pythia8::MergingPtr, Pythia8::MergingHooksPtr, Pythia8::PartonVertexPtr, Pythia8::WeightContainer *) >(&Pythia8::ShowerModel::init));

    DEBUG_MSG("Adding wrapper for bool Pythia8::ShowerModel::initAfterBeams() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::ShowerModel::initAfterBeams()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:48:16
    t.method("initAfterBeams", static_cast<bool (Pythia8::ShowerModel::*)() >(&Pythia8::ShowerModel::initAfterBeams));

    DEBUG_MSG("Adding wrapper for Pythia8::TimeShowerPtr Pythia8::ShowerModel::getTimeShower() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::TimeShowerPtr Pythia8::ShowerModel::getTimeShower()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:51:27
    t.method("getTimeShower", static_cast<Pythia8::TimeShowerPtr (Pythia8::ShowerModel::*)()  const>(&Pythia8::ShowerModel::getTimeShower));

    DEBUG_MSG("Adding wrapper for Pythia8::TimeShowerPtr Pythia8::ShowerModel::getTimeDecShower() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::TimeShowerPtr Pythia8::ShowerModel::getTimeDecShower()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:52:27
    t.method("getTimeDecShower", static_cast<Pythia8::TimeShowerPtr (Pythia8::ShowerModel::*)()  const>(&Pythia8::ShowerModel::getTimeDecShower));

    DEBUG_MSG("Adding wrapper for Pythia8::SpaceShowerPtr Pythia8::ShowerModel::getSpaceShower() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::SpaceShowerPtr Pythia8::ShowerModel::getSpaceShower()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:53:27
    t.method("getSpaceShower", static_cast<Pythia8::SpaceShowerPtr (Pythia8::ShowerModel::*)()  const>(&Pythia8::ShowerModel::getSpaceShower));

    DEBUG_MSG("Adding wrapper for Pythia8::MergingPtr Pythia8::ShowerModel::getMerging() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::MergingPtr Pythia8::ShowerModel::getMerging()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:54:27
    t.method("getMerging", static_cast<Pythia8::MergingPtr (Pythia8::ShowerModel::*)()  const>(&Pythia8::ShowerModel::getMerging));

    DEBUG_MSG("Adding wrapper for Pythia8::MergingHooksPtr Pythia8::ShowerModel::getMergingHooks() (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::MergingHooksPtr Pythia8::ShowerModel::getMergingHooks()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/ShowerModel.h:55:27
    t.method("getMergingHooks", static_cast<Pythia8::MergingHooksPtr (Pythia8::ShowerModel::*)()  const>(&Pythia8::ShowerModel::getMergingHooks));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::ShowerModel>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_ShowerModel(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_ShowerModel(module));
}
