// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"
// Class generating the wrapper for type 
// signature to use in the veto file: 
struct JlGlobal: public Wrapper {

  JlGlobal(jlcxx::Module& jlModule): Wrapper(jlModule){
  }

  void add_methods() const{
    auto& t = module_;
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::operator*(double, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::operator*(double, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:201:13
    t.method("*", static_cast<Pythia8::Vec4 (*)(double, const Pythia8::Vec4 &) >(&Pythia8::operator*));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double Pythia8::m(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:205:8
    t.method("Pythia8!m", static_cast<double (*)(const Pythia8::Vec4 &) >(&Pythia8::m));

    DEBUG_MSG("Adding wrapper for double Pythia8::m(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:206:8
    t.method("Pythia8!m", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::m));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:207:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Vec4 &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:208:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:209:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:210:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::dot3(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::dot3(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:214:8
    t.method("Pythia8!dot3", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::dot3));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::cross3(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::cross3(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:215:6
    t.method("Pythia8!cross3", static_cast<Pythia8::Vec4 (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::cross3));

    DEBUG_MSG("Adding wrapper for Pythia8::Vec4 Pythia8::cross4(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Vec4 Pythia8::cross4(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:218:6
    t.method("Pythia8!cross4", static_cast<Pythia8::Vec4 (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::cross4));

    DEBUG_MSG("Adding wrapper for double Pythia8::theta(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::theta(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:221:8
    t.method("Pythia8!theta", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::theta));

    DEBUG_MSG("Adding wrapper for double Pythia8::costheta(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::costheta(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:222:8
    t.method("Pythia8!costheta", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::costheta));

    DEBUG_MSG("Adding wrapper for double Pythia8::costheta(double, double, double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::costheta(double, double, double, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:223:8
    t.method("Pythia8!costheta", static_cast<double (*)(double, double, double, double, double) >(&Pythia8::costheta));

    DEBUG_MSG("Adding wrapper for double Pythia8::phi(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::phi(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:226:8
    t.method("Pythia8!phi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::phi));

    DEBUG_MSG("Adding wrapper for double Pythia8::cosphi(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::cosphi(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:227:8
    t.method("Pythia8!cosphi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::cosphi));

    DEBUG_MSG("Adding wrapper for double Pythia8::phi(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::phi(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:230:8
    t.method("Pythia8!phi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::phi));

    DEBUG_MSG("Adding wrapper for double Pythia8::cosphi(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::cosphi(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:231:8
    t.method("Pythia8!cosphi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::cosphi));

    DEBUG_MSG("Adding wrapper for double Pythia8::RRapPhi(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::RRapPhi(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:234:8
    t.method("Pythia8!RRapPhi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::RRapPhi));

    DEBUG_MSG("Adding wrapper for double Pythia8::REtaPhi(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::REtaPhi(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:235:8
    t.method("Pythia8!REtaPhi", static_cast<double (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::REtaPhi));

    DEBUG_MSG("Adding wrapper for bool Pythia8::pShift(Pythia8::Vec4 &, Pythia8::Vec4 &, double, double) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::pShift(Pythia8::Vec4 &, Pythia8::Vec4 &, double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:241:6
    t.method("Pythia8!pShift", static_cast<bool (*)(Pythia8::Vec4 &, Pythia8::Vec4 &, double, double) >(&Pythia8::pShift));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:317:21
    t.method("Pythia8!toCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &) >(&Pythia8::toCMframe));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:321:21
    t.method("Pythia8!fromCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &) >(&Pythia8::fromCMframe));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:326:21
    t.method("Pythia8!toCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::toCMframe));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:332:21
    t.method("Pythia8!fromCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, bool) >(&Pythia8::fromCMframe));
    t.method("Pythia8!fromCMframe", [](const Pythia8::Vec4 & arg0, const Pythia8::Vec4 & arg1)->Pythia8::RotBstMatrix { return Pythia8::fromCMframe(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::toCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:338:21
    t.method("Pythia8!toCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::toCMframe));

    DEBUG_MSG("Adding wrapper for Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::RotBstMatrix Pythia8::fromCMframe(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:345:21
    t.method("Pythia8!fromCMframe", static_cast<Pythia8::RotBstMatrix (*)(const Pythia8::Vec4 &, const Pythia8::Vec4 &, const Pythia8::Vec4 &) >(&Pythia8::fromCMframe));

    DEBUG_MSG("Adding wrapper for void Pythia8::table(const Pythia8::Hist &, const Pythia8::Hist &, std::string, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::table(const Pythia8::Hist &, const Pythia8::Hist &, std::string, bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:725:6
    t.method("Pythia8!table", static_cast<void (*)(const Pythia8::Hist &, const Pythia8::Hist &, std::string, bool, bool) >(&Pythia8::table));
    t.method("Pythia8!table", [](const Pythia8::Hist & arg0, const Pythia8::Hist & arg1, std::string arg2)->void { Pythia8::table(arg0, arg1, arg2); });
    t.method("Pythia8!table", [](const Pythia8::Hist & arg0, const Pythia8::Hist & arg1, std::string arg2, bool arg3)->void { Pythia8::table(arg0, arg1, arg2, arg3); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::operator+(double, const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::operator+(double, const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:729:6
    t.method("+", static_cast<Pythia8::Hist (*)(double, const Pythia8::Hist &) >(&Pythia8::operator+));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::operator-(double, const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::operator-(double, const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:730:6
    t.method("-", static_cast<Pythia8::Hist (*)(double, const Pythia8::Hist &) >(&Pythia8::operator-));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::operator*(double, const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::operator*(double, const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:731:6
    t.method("*", static_cast<Pythia8::Hist (*)(double, const Pythia8::Hist &) >(&Pythia8::operator*));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::operator/(double, const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::operator/(double, const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:732:6
    t.method("/", static_cast<Pythia8::Hist (*)(double, const Pythia8::Hist &) >(&Pythia8::operator/));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double Pythia8::m(const Pythia8::Particle &, const Pythia8::Particle &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m(const Pythia8::Particle &, const Pythia8::Particle &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:327:8
    t.method("Pythia8!m", static_cast<double (*)(const Pythia8::Particle &, const Pythia8::Particle &) >(&Pythia8::m));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Particle &, const Pythia8::Particle &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Particle &, const Pythia8::Particle &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:328:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Particle &, const Pythia8::Particle &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::m2(const Pythia8::Particle &, const Pythia8::Particle &, const Pythia8::Particle &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::m2(const Pythia8::Particle &, const Pythia8::Particle &, const Pythia8::Particle &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:329:8
    t.method("Pythia8!m2", static_cast<double (*)(const Pythia8::Particle &, const Pythia8::Particle &, const Pythia8::Particle &) >(&Pythia8::m2));

    DEBUG_MSG("Adding wrapper for double Pythia8::dot4(const Pythia8::Particle &, const Pythia8::Particle &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::dot4(const Pythia8::Particle &, const Pythia8::Particle &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Event.h:330:8
    t.method("Pythia8!dot4", static_cast<double (*)(const Pythia8::Particle &, const Pythia8::Particle &) >(&Pythia8::dot4));

    DEBUG_MSG("Adding wrapper for double Pythia8::dist2Fun(int, const Pythia8::SingleClusterJet &, const Pythia8::SingleClusterJet &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::dist2Fun(int, const Pythia8::SingleClusterJet &, const Pythia8::SingleClusterJet &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Analysis.h:170:8
    t.method("Pythia8!dist2Fun", static_cast<double (*)(int, const Pythia8::SingleClusterJet &, const Pythia8::SingleClusterJet &) >(&Pythia8::dist2Fun));

    DEBUG_MSG("Adding wrapper for std::string to_string(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: std::string to_string(const Pythia8::Hist &)
    // defined in ./cpp/Pythia8Wrap.h:10:20
    t.method("to_string", static_cast<std::string (*)(const Pythia8::Hist &) >(&to_string));

    DEBUG_MSG("Adding wrapper for bool init(Pythia8::PythiaParallel &, bool (*)(Pythia8::Pythia *)) (" __HERE__ ")");
    // signature to use in the veto list: bool init(Pythia8::PythiaParallel &, bool (*)(Pythia8::Pythia *))
    // defined in ./cpp/Pythia8Wrap.h:13:6
    t.method("init", static_cast<bool (*)(Pythia8::PythiaParallel &, bool (*)(Pythia8::Pythia *)) >(&init));

    DEBUG_MSG("Adding wrapper for std::vector<long> run(Pythia8::PythiaParallel &, long, void (*)(Pythia8::Pythia *)) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<long> run(Pythia8::PythiaParallel &, long, void (*)(Pythia8::Pythia *))
    // defined in ./cpp/Pythia8Wrap.h:14:19
    t.method("run", static_cast<std::vector<long> (*)(Pythia8::PythiaParallel &, long, void (*)(Pythia8::Pythia *)) >(&run));

    DEBUG_MSG("Adding wrapper for std::vector<long> run(Pythia8::PythiaParallel &, void (*)(Pythia8::Pythia *)) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<long> run(Pythia8::PythiaParallel &, void (*)(Pythia8::Pythia *))
    // defined in ./cpp/Pythia8Wrap.h:15:19
    t.method("run", static_cast<std::vector<long> (*)(Pythia8::PythiaParallel &, void (*)(Pythia8::Pythia *)) >(&run));

    DEBUG_MSG("Adding Pythia8!Rndm!DEFAULTSEED methods to provide access to the global variable Pythia8::Rndm::DEFAULTSEED (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:439:24
    module_.method("Pythia8!Rndm!DEFAULTSEED", []()-> int { return Pythia8::Rndm::DEFAULTSEED; });
  }
};
std::shared_ptr<Wrapper> newJlGlobal(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlGlobal(module));
}
