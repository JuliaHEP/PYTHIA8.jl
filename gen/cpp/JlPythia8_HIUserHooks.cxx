// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::HIUserHooks> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::HIUserHooks> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::HIUserHooks
// signature to use in the veto file: Pythia8::HIUserHooks
struct JlPythia8_HIUserHooks: public Wrapper {

  JlPythia8_HIUserHooks(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::HIUserHooks (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:248:7
    jlcxx::TypeWrapper<Pythia8::HIUserHooks>  t = jlModule.add_type<Pythia8::HIUserHooks>("Pythia8!HIUserHooks");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::HIUserHooks>>(new jlcxx::TypeWrapper<Pythia8::HIUserHooks>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void Pythia8::HIUserHooks::init(int, int) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::HIUserHooks::init(int, int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:259:16
    t.method("init", static_cast<void (Pythia8::HIUserHooks::*)(int, int) >(&Pythia8::HIUserHooks::init));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::hasImpactParameterGenerator() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::hasImpactParameterGenerator()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:265:16
    t.method("hasImpactParameterGenerator", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::hasImpactParameterGenerator));

    DEBUG_MSG("Adding wrapper for std::shared_ptr<Pythia8::ImpactParameterGenerator> Pythia8::HIUserHooks::impactParameterGenerator() (" __HERE__ ")");
    // signature to use in the veto list: std::shared_ptr<Pythia8::ImpactParameterGenerator> Pythia8::HIUserHooks::impactParameterGenerator()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:266:48
    t.method("impactParameterGenerator", static_cast<std::shared_ptr<Pythia8::ImpactParameterGenerator> (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::impactParameterGenerator));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::hasProjectileModel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::hasProjectileModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:270:16
    t.method("hasProjectileModel", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::hasProjectileModel));

    DEBUG_MSG("Adding wrapper for std::shared_ptr<Pythia8::NucleusModel> Pythia8::HIUserHooks::projectileModel() (" __HERE__ ")");
    // signature to use in the veto list: std::shared_ptr<Pythia8::NucleusModel> Pythia8::HIUserHooks::projectileModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:271:36
    t.method("projectileModel", static_cast<std::shared_ptr<Pythia8::NucleusModel> (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::projectileModel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::hasTargetModel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::hasTargetModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:272:16
    t.method("hasTargetModel", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::hasTargetModel));

    DEBUG_MSG("Adding wrapper for std::shared_ptr<Pythia8::NucleusModel> Pythia8::HIUserHooks::targetModel() (" __HERE__ ")");
    // signature to use in the veto list: std::shared_ptr<Pythia8::NucleusModel> Pythia8::HIUserHooks::targetModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:273:36
    t.method("targetModel", static_cast<std::shared_ptr<Pythia8::NucleusModel> (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::targetModel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::hasSubCollisionModel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::hasSubCollisionModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:277:16
    t.method("hasSubCollisionModel", static_cast<bool (Pythia8::HIUserHooks::*)() >(&Pythia8::HIUserHooks::hasSubCollisionModel));

    DEBUG_MSG("Adding wrapper for std::shared_ptr<Pythia8::SubCollisionModel> Pythia8::HIUserHooks::subCollisionModel() (" __HERE__ ")");
    // signature to use in the veto list: std::shared_ptr<Pythia8::SubCollisionModel> Pythia8::HIUserHooks::subCollisionModel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:278:41
    t.method("subCollisionModel", static_cast<std::shared_ptr<Pythia8::SubCollisionModel> (Pythia8::HIUserHooks::*)() >(&Pythia8::HIUserHooks::subCollisionModel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::hasEventOrdering() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::hasEventOrdering()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:281:16
    t.method("hasEventOrdering", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::hasEventOrdering));

    DEBUG_MSG("Adding wrapper for double Pythia8::HIUserHooks::eventOrdering(const Pythia8::Event &, const Pythia8::Info &) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::HIUserHooks::eventOrdering(const Pythia8::Event &, const Pythia8::Info &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:282:18
    t.method("eventOrdering", static_cast<double (Pythia8::HIUserHooks::*)(const Pythia8::Event &, const Pythia8::Info &) >(&Pythia8::HIUserHooks::eventOrdering));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::canFixIsoSpin() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::canFixIsoSpin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:286:16
    t.method("canFixIsoSpin", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::canFixIsoSpin));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::fixIsoSpin(Pythia8::EventInfo &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::fixIsoSpin(Pythia8::EventInfo &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:287:16
    t.method("fixIsoSpin", static_cast<bool (Pythia8::HIUserHooks::*)(Pythia8::EventInfo &) >(&Pythia8::HIUserHooks::fixIsoSpin));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::canShiftEvent() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::canShiftEvent()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:290:16
    t.method("canShiftEvent", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::canShiftEvent));

    DEBUG_MSG("Adding wrapper for Pythia8::EventInfo & Pythia8::HIUserHooks::shiftEvent(Pythia8::EventInfo &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::EventInfo & Pythia8::HIUserHooks::shiftEvent(Pythia8::EventInfo &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:291:23
    t.method("shiftEvent", static_cast<Pythia8::EventInfo & (Pythia8::HIUserHooks::*)(Pythia8::EventInfo &)  const>(&Pythia8::HIUserHooks::shiftEvent));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::canAddNucleonExcitation() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::canAddNucleonExcitation()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:295:8
    t.method("canAddNucleonExcitation", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::canAddNucleonExcitation));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::addNucleonExcitation(Pythia8::EventInfo &, Pythia8::EventInfo &, bool) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::addNucleonExcitation(Pythia8::EventInfo &, Pythia8::EventInfo &, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:296:8
    t.method("addNucleonExcitation", static_cast<bool (Pythia8::HIUserHooks::*)(Pythia8::EventInfo &, Pythia8::EventInfo &, bool)  const>(&Pythia8::HIUserHooks::addNucleonExcitation));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::canForceHadronLevel() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::canForceHadronLevel()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:300:16
    t.method("canForceHadronLevel", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::canForceHadronLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::forceHadronLevel(Pythia8::Pythia &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::forceHadronLevel(Pythia8::Pythia &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:301:16
    t.method("forceHadronLevel", static_cast<bool (Pythia8::HIUserHooks::*)(Pythia8::Pythia &) >(&Pythia8::HIUserHooks::forceHadronLevel));

    DEBUG_MSG("Adding wrapper for bool Pythia8::HIUserHooks::canFindRecoilers() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::HIUserHooks::canFindRecoilers()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:306:16
    t.method("canFindRecoilers", static_cast<bool (Pythia8::HIUserHooks::*)()  const>(&Pythia8::HIUserHooks::canFindRecoilers));

    DEBUG_MSG("Adding wrapper for std::vector<int> Pythia8::HIUserHooks::findRecoilers(const Pythia8::Event &, bool, int, int, const Pythia8::Vec4 &, const Pythia8::Vec4 &) (" __HERE__ ")");
    // signature to use in the veto list: std::vector<int> Pythia8::HIUserHooks::findRecoilers(const Pythia8::Event &, bool, int, int, const Pythia8::Vec4 &, const Pythia8::Vec4 &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/HIInfo.h:308:3
    t.method("findRecoilers", static_cast<std::vector<int> (Pythia8::HIUserHooks::*)(const Pythia8::Event &, bool, int, int, const Pythia8::Vec4 &, const Pythia8::Vec4 &)  const>(&Pythia8::HIUserHooks::findRecoilers));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::HIUserHooks>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_HIUserHooks(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_HIUserHooks(module));
}
