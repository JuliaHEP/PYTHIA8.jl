// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlPythia8.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<Pythia8::Hist> : std::false_type { };
  template<> struct DefaultConstructible<Pythia8::Hist> : std::false_type { };
}

// Class generating the wrapper for type Pythia8::Hist
// signature to use in the veto file: Pythia8::Hist
struct JlPythia8_Hist: public Wrapper {

  JlPythia8_Hist(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type Pythia8::Hist (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:474:7
    jlcxx::TypeWrapper<Pythia8::Hist>  t = jlModule.add_type<Pythia8::Hist>("Pythia8!Hist");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Hist>>(new jlcxx::TypeWrapper<Pythia8::Hist>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::Hist(std::string, int, double, double, bool, bool) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:482:3
    t.constructor<std::string>(/*finalize=*/true);
    t.constructor<std::string, int>(/*finalize=*/true);
    t.constructor<std::string, int, double>(/*finalize=*/true);
    t.constructor<std::string, int, double, double>(/*finalize=*/true);
    t.constructor<std::string, int, double, double, bool>(/*finalize=*/true);
    t.constructor<std::string, int, double, double, bool, bool>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::Hist(const Pythia8::Hist &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:487:3
    t.constructor<const Pythia8::Hist &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::Hist(std::string, const Pythia8::Hist &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:494:3
    t.constructor<std::string, const Pythia8::Hist &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator=(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator=(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:501:9
    t.method("assign", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(const Pythia8::Hist &) >(&Pythia8::Hist::operator=));

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::book(std::string, int, double, double, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::book(std::string, int, double, double, bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:513:8
    t.method("book", static_cast<void (Pythia8::Hist::*)(std::string, int, double, double, bool, bool) >(&Pythia8::Hist::book));
    t.method("book", [](Pythia8::Hist& a)->void { a.book(); });
    t.method("book", [](Pythia8::Hist& a, std::string arg0)->void { a.book(arg0); });
    t.method("book", [](Pythia8::Hist& a, std::string arg0, int arg1)->void { a.book(arg0, arg1); });
    t.method("book", [](Pythia8::Hist& a, std::string arg0, int arg1, double arg2)->void { a.book(arg0, arg1, arg2); });
    t.method("book", [](Pythia8::Hist& a, std::string arg0, int arg1, double arg2, double arg3)->void { a.book(arg0, arg1, arg2, arg3); });
    t.method("book", [](Pythia8::Hist& a, std::string arg0, int arg1, double arg2, double arg3, bool arg4)->void { a.book(arg0, arg1, arg2, arg3, arg4); });
    t.method("book", [](Pythia8::Hist* a)->void { a->book(); });
    t.method("book", [](Pythia8::Hist* a, std::string arg0)->void { a->book(arg0); });
    t.method("book", [](Pythia8::Hist* a, std::string arg0, int arg1)->void { a->book(arg0, arg1); });
    t.method("book", [](Pythia8::Hist* a, std::string arg0, int arg1, double arg2)->void { a->book(arg0, arg1, arg2); });
    t.method("book", [](Pythia8::Hist* a, std::string arg0, int arg1, double arg2, double arg3)->void { a->book(arg0, arg1, arg2, arg3); });
    t.method("book", [](Pythia8::Hist* a, std::string arg0, int arg1, double arg2, double arg3, bool arg4)->void { a->book(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::title(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::title(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:517:8
    t.method("title", static_cast<void (Pythia8::Hist::*)(std::string) >(&Pythia8::Hist::title));
    t.method("title", [](Pythia8::Hist& a)->void { a.title(); });
    t.method("title", [](Pythia8::Hist* a)->void { a->title(); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::null() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::null()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:520:8
    t.method("null", static_cast<void (Pythia8::Hist::*)() >(&Pythia8::Hist::null));

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::fill(double, double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::fill(double, double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:523:8
    t.method("fill", static_cast<void (Pythia8::Hist::*)(double, double) >(&Pythia8::Hist::fill));
    t.method("fill", [](Pythia8::Hist& a, double arg0)->void { a.fill(arg0); });
    t.method("fill", [](Pythia8::Hist* a, double arg0)->void { a->fill(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::table(std::string, bool, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::table(std::string, bool, bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:532:8
    t.method("table", static_cast<void (Pythia8::Hist::*)(std::string, bool, bool, bool)  const>(&Pythia8::Hist::table));
    t.method("table", [](Pythia8::Hist const& a, std::string arg0)->void { a.table(arg0); });
    t.method("table", [](Pythia8::Hist const& a, std::string arg0, bool arg1)->void { a.table(arg0, arg1); });
    t.method("table", [](Pythia8::Hist const& a, std::string arg0, bool arg1, bool arg2)->void { a.table(arg0, arg1, arg2); });
    t.method("table", [](Pythia8::Hist const* a, std::string arg0)->void { a->table(arg0); });
    t.method("table", [](Pythia8::Hist const* a, std::string arg0, bool arg1)->void { a->table(arg0, arg1); });
    t.method("table", [](Pythia8::Hist const* a, std::string arg0, bool arg1, bool arg2)->void { a->table(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::rivetTable(std::string, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::rivetTable(std::string, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:537:8
    t.method("rivetTable", static_cast<void (Pythia8::Hist::*)(std::string, bool)  const>(&Pythia8::Hist::rivetTable));
    t.method("rivetTable", [](Pythia8::Hist const& a, std::string arg0)->void { a.rivetTable(arg0); });
    t.method("rivetTable", [](Pythia8::Hist const* a, std::string arg0)->void { a->rivetTable(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::pyplotTable(std::string, bool, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::pyplotTable(std::string, bool, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:541:8
    t.method("pyplotTable", static_cast<void (Pythia8::Hist::*)(std::string, bool, bool)  const>(&Pythia8::Hist::pyplotTable));
    t.method("pyplotTable", [](Pythia8::Hist const& a, std::string arg0)->void { a.pyplotTable(arg0); });
    t.method("pyplotTable", [](Pythia8::Hist const& a, std::string arg0, bool arg1)->void { a.pyplotTable(arg0, arg1); });
    t.method("pyplotTable", [](Pythia8::Hist const* a, std::string arg0)->void { a->pyplotTable(arg0); });
    t.method("pyplotTable", [](Pythia8::Hist const* a, std::string arg0, bool arg1)->void { a->pyplotTable(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::fillTable(std::string) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::fillTable(std::string)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:547:8
    t.method("fillTable", static_cast<void (Pythia8::Hist::*)(std::string) >(&Pythia8::Hist::fillTable));

    DEBUG_MSG("Adding wrapper for std::string Pythia8::Hist::getTitle() (" __HERE__ ")");
    // signature to use in the veto list: std::string Pythia8::Hist::getTitle()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:557:10
    t.method("getTitle", static_cast<std::string (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getTitle));

    DEBUG_MSG("Adding wrapper for int Pythia8::Hist::getBinNumber() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Hist::getBinNumber()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:558:10
    t.method("getBinNumber", static_cast<int (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getBinNumber));

    DEBUG_MSG("Adding wrapper for int Pythia8::Hist::getNonFinite() (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Hist::getNonFinite()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:559:10
    t.method("getNonFinite", static_cast<int (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getNonFinite));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Hist::getLinX() (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Hist::getLinX()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:560:10
    t.method("getLinX", static_cast<bool (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getLinX));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMin() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:563:10
    t.method("getXMin", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getXMin));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMax() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMax()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:564:10
    t.method("getXMax", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getXMax));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getYMin() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getYMin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:565:10
    t.method("getYMin", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getYMin));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getYMax() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getYMax()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:570:10
    t.method("getYMax", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getYMax));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getYAbsMin() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getYAbsMin()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:575:10
    t.method("getYAbsMin", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getYAbsMin));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMean(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMean(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:585:10
    t.method("getXMean", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXMean));
    t.method("getXMean", [](Pythia8::Hist const& a)->double { return a.getXMean(); });
    t.method("getXMean", [](Pythia8::Hist const* a)->double { return a->getXMean(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMeanErr(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMeanErr(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:586:10
    t.method("getXMeanErr", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXMeanErr));
    t.method("getXMeanErr", [](Pythia8::Hist const& a)->double { return a.getXMeanErr(); });
    t.method("getXMeanErr", [](Pythia8::Hist const* a)->double { return a->getXMeanErr(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMedian(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMedian(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:592:10
    t.method("getXMedian", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXMedian));
    t.method("getXMedian", [](Pythia8::Hist const& a)->double { return a.getXMedian(); });
    t.method("getXMedian", [](Pythia8::Hist const* a)->double { return a->getXMedian(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXMedianErr(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXMedianErr(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:593:10
    t.method("getXMedianErr", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXMedianErr));
    t.method("getXMedianErr", [](Pythia8::Hist const& a)->double { return a.getXMedianErr(); });
    t.method("getXMedianErr", [](Pythia8::Hist const* a)->double { return a->getXMedianErr(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getYMean() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getYMean()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:596:10
    t.method("getYMean", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getYMean));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXRMN(int, bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXRMN(int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:610:10
    t.method("getXRMN", static_cast<double (Pythia8::Hist::*)(int, bool)  const>(&Pythia8::Hist::getXRMN));
    t.method("getXRMN", [](Pythia8::Hist const& a)->double { return a.getXRMN(); });
    t.method("getXRMN", [](Pythia8::Hist const& a, int arg0)->double { return a.getXRMN(arg0); });
    t.method("getXRMN", [](Pythia8::Hist const* a)->double { return a->getXRMN(); });
    t.method("getXRMN", [](Pythia8::Hist const* a, int arg0)->double { return a->getXRMN(arg0); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXRMS(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXRMS(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:611:10
    t.method("getXRMS", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXRMS));
    t.method("getXRMS", [](Pythia8::Hist const& a)->double { return a.getXRMS(); });
    t.method("getXRMS", [](Pythia8::Hist const* a)->double { return a->getXRMS(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXRMNErr(int, bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXRMNErr(int, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:613:10
    t.method("getXRMNErr", static_cast<double (Pythia8::Hist::*)(int, bool)  const>(&Pythia8::Hist::getXRMNErr));
    t.method("getXRMNErr", [](Pythia8::Hist const& a)->double { return a.getXRMNErr(); });
    t.method("getXRMNErr", [](Pythia8::Hist const& a, int arg0)->double { return a.getXRMNErr(arg0); });
    t.method("getXRMNErr", [](Pythia8::Hist const* a)->double { return a->getXRMNErr(); });
    t.method("getXRMNErr", [](Pythia8::Hist const* a, int arg0)->double { return a->getXRMNErr(arg0); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getXRMSErr(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getXRMSErr(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:614:10
    t.method("getXRMSErr", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getXRMSErr));
    t.method("getXRMSErr", [](Pythia8::Hist const& a)->double { return a.getXRMSErr(); });
    t.method("getXRMSErr", [](Pythia8::Hist const* a)->double { return a->getXRMSErr(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getBinContent(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getBinContent(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:618:10
    t.method("getBinContent", static_cast<double (Pythia8::Hist::*)(int)  const>(&Pythia8::Hist::getBinContent));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getBinEdge(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getBinEdge(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:621:10
    t.method("getBinEdge", static_cast<double (Pythia8::Hist::*)(int)  const>(&Pythia8::Hist::getBinEdge));

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getBinWidth(int) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getBinWidth(int)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:624:10
    t.method("getBinWidth", static_cast<double (Pythia8::Hist::*)(int)  const>(&Pythia8::Hist::getBinWidth));
    t.method("getBinWidth", [](Pythia8::Hist const& a)->double { return a.getBinWidth(); });
    t.method("getBinWidth", [](Pythia8::Hist const* a)->double { return a->getBinWidth(); });

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::Hist::getBinContents() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::Hist::getBinContents()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:627:18
    t.method("getBinContents", static_cast<std::vector<double> (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getBinContents));

    DEBUG_MSG("Adding wrapper for std::vector<double> Pythia8::Hist::getBinEdges() (" __HERE__ ")");
    // signature to use in the veto list: std::vector<double> Pythia8::Hist::getBinEdges()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:630:18
    t.method("getBinEdges", static_cast<std::vector<double> (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getBinEdges));

    DEBUG_MSG("Adding wrapper for int Pythia8::Hist::getEntries(bool) (" __HERE__ ")");
    // signature to use in the veto list: int Pythia8::Hist::getEntries(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:633:7
    t.method("getEntries", static_cast<int (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getEntries));
    t.method("getEntries", [](Pythia8::Hist const& a)->int { return a.getEntries(); });
    t.method("getEntries", [](Pythia8::Hist const* a)->int { return a->getEntries(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getWeightSum(bool) (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getWeightSum(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:637:10
    t.method("getWeightSum", static_cast<double (Pythia8::Hist::*)(bool)  const>(&Pythia8::Hist::getWeightSum));
    t.method("getWeightSum", [](Pythia8::Hist const& a)->double { return a.getWeightSum(); });
    t.method("getWeightSum", [](Pythia8::Hist const* a)->double { return a->getWeightSum(); });

    DEBUG_MSG("Adding wrapper for double Pythia8::Hist::getNEffective() (" __HERE__ ")");
    // signature to use in the veto list: double Pythia8::Hist::getNEffective()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:642:10
    t.method("getNEffective", static_cast<double (Pythia8::Hist::*)()  const>(&Pythia8::Hist::getNEffective));

    DEBUG_MSG("Adding wrapper for bool Pythia8::Hist::sameSize(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: bool Pythia8::Hist::sameSize(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:650:8
    t.method("sameSize", static_cast<bool (Pythia8::Hist::*)(const Pythia8::Hist &)  const>(&Pythia8::Hist::sameSize));

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::takeLog(bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::takeLog(bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:656:8
    t.method("takeLog", static_cast<void (Pythia8::Hist::*)(bool) >(&Pythia8::Hist::takeLog));
    t.method("takeLog", [](Pythia8::Hist& a)->void { a.takeLog(); });
    t.method("takeLog", [](Pythia8::Hist* a)->void { a->takeLog(); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::takeSqrt() (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::takeSqrt()
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:659:8
    t.method("takeSqrt", static_cast<void (Pythia8::Hist::*)() >(&Pythia8::Hist::takeSqrt));

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::normalize(double, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::normalize(double, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:662:8
    t.method("normalize", static_cast<void (Pythia8::Hist::*)(double, bool) >(&Pythia8::Hist::normalize));
    t.method("normalize", [](Pythia8::Hist& a)->void { a.normalize(); });
    t.method("normalize", [](Pythia8::Hist& a, double arg0)->void { a.normalize(arg0); });
    t.method("normalize", [](Pythia8::Hist* a)->void { a->normalize(); });
    t.method("normalize", [](Pythia8::Hist* a, double arg0)->void { a->normalize(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::normalizeIntegral(double, bool) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::normalizeIntegral(double, bool)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:665:8
    t.method("normalizeIntegral", static_cast<void (Pythia8::Hist::*)(double, bool) >(&Pythia8::Hist::normalizeIntegral));
    t.method("normalizeIntegral", [](Pythia8::Hist& a)->void { a.normalizeIntegral(); });
    t.method("normalizeIntegral", [](Pythia8::Hist& a, double arg0)->void { a.normalizeIntegral(arg0); });
    t.method("normalizeIntegral", [](Pythia8::Hist* a)->void { a->normalizeIntegral(); });
    t.method("normalizeIntegral", [](Pythia8::Hist* a, double arg0)->void { a->normalizeIntegral(arg0); });

    DEBUG_MSG("Adding wrapper for void Pythia8::Hist::normalizeSpectrum(double) (" __HERE__ ")");
    // signature to use in the veto list: void Pythia8::Hist::normalizeSpectrum(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:668:8
    t.method("normalizeSpectrum", static_cast<void (Pythia8::Hist::*)(double) >(&Pythia8::Hist::normalizeSpectrum));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator+=(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator+=(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:671:9
    t.method("add!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(const Pythia8::Hist &) >(&Pythia8::Hist::operator+=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator-=(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator-=(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:672:9
    t.method("sub!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(const Pythia8::Hist &) >(&Pythia8::Hist::operator-=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator*=(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator*=(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:673:9
    t.method("mult!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(const Pythia8::Hist &) >(&Pythia8::Hist::operator*=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator/=(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator/=(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:674:9
    t.method("fdiv!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(const Pythia8::Hist &) >(&Pythia8::Hist::operator/=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator+=(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator+=(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:675:9
    t.method("add!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(double) >(&Pythia8::Hist::operator+=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator-=(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator-=(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:676:9
    t.method("sub!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(double) >(&Pythia8::Hist::operator-=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator*=(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator*=(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:677:9
    t.method("mult!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(double) >(&Pythia8::Hist::operator*=));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist & Pythia8::Hist::operator/=(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist & Pythia8::Hist::operator/=(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:678:9
    t.method("fdiv!", static_cast<Pythia8::Hist & (Pythia8::Hist::*)(double) >(&Pythia8::Hist::operator/=));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator+(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator+(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:679:8
    t.method("+", static_cast<Pythia8::Hist (Pythia8::Hist::*)(double)  const>(&Pythia8::Hist::operator+));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator+(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator+(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:680:8
    t.method("+", static_cast<Pythia8::Hist (Pythia8::Hist::*)(const Pythia8::Hist &)  const>(&Pythia8::Hist::operator+));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator-(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator-(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:681:8
    t.method("-", static_cast<Pythia8::Hist (Pythia8::Hist::*)(double)  const>(&Pythia8::Hist::operator-));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator-(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator-(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:682:8
    t.method("-", static_cast<Pythia8::Hist (Pythia8::Hist::*)(const Pythia8::Hist &)  const>(&Pythia8::Hist::operator-));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator*(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator*(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:683:8
    t.method("*", static_cast<Pythia8::Hist (Pythia8::Hist::*)(double)  const>(&Pythia8::Hist::operator*));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator*(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator*(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:684:8
    t.method("*", static_cast<Pythia8::Hist (Pythia8::Hist::*)(const Pythia8::Hist &)  const>(&Pythia8::Hist::operator*));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator/(double) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator/(double)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:685:8
    t.method("/", static_cast<Pythia8::Hist (Pythia8::Hist::*)(double)  const>(&Pythia8::Hist::operator/));

    DEBUG_MSG("Adding wrapper for Pythia8::Hist Pythia8::Hist::operator/(const Pythia8::Hist &) (" __HERE__ ")");
    // signature to use in the veto list: Pythia8::Hist Pythia8::Hist::operator/(const Pythia8::Hist &)
    // defined in /Users/mato/.julia/artifacts/1efdb4b729131034a90e03a49327ea90a4bfb780/include/Pythia8/Basics.h:686:8
    t.method("/", static_cast<Pythia8::Hist (Pythia8::Hist::*)(const Pythia8::Hist &)  const>(&Pythia8::Hist::operator/));

    module_.unset_override_module();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<Pythia8::Hist>> type_;
};
std::shared_ptr<Wrapper> newJlPythia8_Hist(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlPythia8_Hist(module));
}
